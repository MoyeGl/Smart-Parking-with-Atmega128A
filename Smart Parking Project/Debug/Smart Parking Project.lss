
Smart Parking Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a0  00800100  00001b74  00001c08  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b74  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007c  008001a0  008001a0  00001ca8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001ca8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d04  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000420  00000000  00000000  00001d44  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007eb3  00000000  00000000  00002164  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000199f  00000000  00000000  0000a017  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000271f  00000000  00000000  0000b9b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000cec  00000000  00000000  0000e0d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000196e  00000000  00000000  0000edc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004f2d  00000000  00000000  00010732  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000398  00000000  00000000  0001565f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	f2 c3       	rjmp	.+2020   	; 0x7e6 <__ctors_end>
       2:	00 00       	nop
       4:	0e c4       	rjmp	.+2076   	; 0x822 <__bad_interrupt>
       6:	00 00       	nop
       8:	0c c4       	rjmp	.+2072   	; 0x822 <__bad_interrupt>
       a:	00 00       	nop
       c:	0a c4       	rjmp	.+2068   	; 0x822 <__bad_interrupt>
       e:	00 00       	nop
      10:	08 c4       	rjmp	.+2064   	; 0x822 <__bad_interrupt>
      12:	00 00       	nop
      14:	06 c4       	rjmp	.+2060   	; 0x822 <__bad_interrupt>
      16:	00 00       	nop
      18:	04 c4       	rjmp	.+2056   	; 0x822 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	02 c4       	rjmp	.+2052   	; 0x822 <__bad_interrupt>
      1e:	00 00       	nop
      20:	63 c4       	rjmp	.+2246   	; 0x8e8 <__vector_8>
      22:	00 00       	nop
      24:	fe c3       	rjmp	.+2044   	; 0x822 <__bad_interrupt>
      26:	00 00       	nop
      28:	fc c3       	rjmp	.+2040   	; 0x822 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	fa c3       	rjmp	.+2036   	; 0x822 <__bad_interrupt>
      2e:	00 00       	nop
      30:	f8 c3       	rjmp	.+2032   	; 0x822 <__bad_interrupt>
      32:	00 00       	nop
      34:	f6 c3       	rjmp	.+2028   	; 0x822 <__bad_interrupt>
      36:	00 00       	nop
      38:	f4 c3       	rjmp	.+2024   	; 0x822 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	f2 c3       	rjmp	.+2020   	; 0x822 <__bad_interrupt>
      3e:	00 00       	nop
      40:	f0 c3       	rjmp	.+2016   	; 0x822 <__bad_interrupt>
      42:	00 00       	nop
      44:	ee c3       	rjmp	.+2012   	; 0x822 <__bad_interrupt>
      46:	00 00       	nop
      48:	ec c3       	rjmp	.+2008   	; 0x822 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ea c3       	rjmp	.+2004   	; 0x822 <__bad_interrupt>
      4e:	00 00       	nop
      50:	e8 c3       	rjmp	.+2000   	; 0x822 <__bad_interrupt>
      52:	00 00       	nop
      54:	e6 c3       	rjmp	.+1996   	; 0x822 <__bad_interrupt>
      56:	00 00       	nop
      58:	e4 c3       	rjmp	.+1992   	; 0x822 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	e2 c3       	rjmp	.+1988   	; 0x822 <__bad_interrupt>
      5e:	00 00       	nop
      60:	e0 c3       	rjmp	.+1984   	; 0x822 <__bad_interrupt>
      62:	00 00       	nop
      64:	de c3       	rjmp	.+1980   	; 0x822 <__bad_interrupt>
      66:	00 00       	nop
      68:	dc c3       	rjmp	.+1976   	; 0x822 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	da c3       	rjmp	.+1972   	; 0x822 <__bad_interrupt>
      6e:	00 00       	nop
      70:	d8 c3       	rjmp	.+1968   	; 0x822 <__bad_interrupt>
      72:	00 00       	nop
      74:	d6 c3       	rjmp	.+1964   	; 0x822 <__bad_interrupt>
      76:	00 00       	nop
      78:	d4 c3       	rjmp	.+1960   	; 0x822 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	d2 c3       	rjmp	.+1956   	; 0x822 <__bad_interrupt>
      7e:	00 00       	nop
      80:	d0 c3       	rjmp	.+1952   	; 0x822 <__bad_interrupt>
      82:	00 00       	nop
      84:	ce c3       	rjmp	.+1948   	; 0x822 <__bad_interrupt>
      86:	00 00       	nop
      88:	cc c3       	rjmp	.+1944   	; 0x822 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	a3 06       	cpc	r10, r19
      8e:	a3 06       	cpc	r10, r19
      90:	a3 06       	cpc	r10, r19
      92:	a3 06       	cpc	r10, r19
      94:	a3 06       	cpc	r10, r19
      96:	a3 06       	cpc	r10, r19
      98:	a0 06       	cpc	r10, r16
      9a:	a0 06       	cpc	r10, r16
      9c:	a0 06       	cpc	r10, r16
      9e:	a0 06       	cpc	r10, r16
      a0:	a0 06       	cpc	r10, r16
      a2:	a0 06       	cpc	r10, r16
      a4:	a0 06       	cpc	r10, r16
      a6:	a0 06       	cpc	r10, r16
      a8:	a0 06       	cpc	r10, r16
      aa:	a0 06       	cpc	r10, r16
      ac:	a0 06       	cpc	r10, r16
      ae:	a0 06       	cpc	r10, r16
      b0:	a0 06       	cpc	r10, r16
      b2:	a0 06       	cpc	r10, r16
      b4:	a0 06       	cpc	r10, r16
      b6:	a0 06       	cpc	r10, r16
      b8:	a0 06       	cpc	r10, r16
      ba:	a0 06       	cpc	r10, r16
      bc:	a3 06       	cpc	r10, r19
      be:	a3 06       	cpc	r10, r19
      c0:	a3 06       	cpc	r10, r19
      c2:	a3 06       	cpc	r10, r19
      c4:	a3 06       	cpc	r10, r19
      c6:	a3 06       	cpc	r10, r19
      c8:	a3 06       	cpc	r10, r19
      ca:	a3 06       	cpc	r10, r19
      cc:	a3 06       	cpc	r10, r19
      ce:	a3 06       	cpc	r10, r19
      d0:	a3 06       	cpc	r10, r19
      d2:	a3 06       	cpc	r10, r19
      d4:	a3 06       	cpc	r10, r19
      d6:	a3 06       	cpc	r10, r19
      d8:	a3 06       	cpc	r10, r19
      da:	a3 06       	cpc	r10, r19
      dc:	94 06       	cpc	r9, r20
      de:	97 06       	cpc	r9, r23
      e0:	9a 06       	cpc	r9, r26
      e2:	9d 06       	cpc	r9, r29

000000e4 <__trampolines_end>:
      e4:	20 ff       	sbrs	r18, 0
	...
      ee:	00 00       	nop
      f0:	00 5f       	subi	r16, 0xF0	; 240
      f2:	5f 00       	.word	0x005f	; ????
      f4:	00 00       	nop
      f6:	00 07       	cpc	r16, r16
      f8:	07 00       	.word	0x0007	; ????
      fa:	07 07       	cpc	r16, r23
      fc:	00 00       	nop
      fe:	14 7f       	andi	r17, 0xF4	; 244
     100:	7f 1c       	adc	r7, r15
     102:	7f 7f       	andi	r23, 0xFF	; 255
     104:	14 00       	.word	0x0014	; ????
     106:	00 24       	eor	r0, r0
     108:	2a 7f       	andi	r18, 0xFA	; 250
     10a:	7f 2a       	or	r7, r31
     10c:	12 00       	.word	0x0012	; ????
     10e:	46 66       	ori	r20, 0x66	; 102
     110:	30 18       	sub	r3, r0
     112:	0c 66       	ori	r16, 0x6C	; 108
     114:	62 00       	.word	0x0062	; ????
     116:	30 7a       	andi	r19, 0xA0	; 160
     118:	4f 5d       	subi	r20, 0xDF	; 223
     11a:	37 7a       	andi	r19, 0xA7	; 167
     11c:	48 00       	.word	0x0048	; ????
     11e:	00 00       	nop
     120:	00 07       	cpc	r16, r16
     122:	07 00       	.word	0x0007	; ????
     124:	00 00       	nop
     126:	00 00       	nop
     128:	1c 3e       	cpi	r17, 0xEC	; 236
     12a:	63 41       	sbci	r22, 0x13	; 19
     12c:	00 00       	nop
     12e:	00 00       	nop
     130:	41 63       	ori	r20, 0x31	; 49
     132:	3e 1c       	adc	r3, r14
     134:	00 00       	nop
     136:	08 2a       	or	r0, r24
     138:	3e 1c       	adc	r3, r14
     13a:	1c 3e       	cpi	r17, 0xEC	; 236
     13c:	2a 08       	sbc	r2, r10
     13e:	00 08       	sbc	r0, r0
     140:	08 3e       	cpi	r16, 0xE8	; 232
     142:	3e 08       	sbc	r3, r14
     144:	08 00       	.word	0x0008	; ????
     146:	00 00       	nop
     148:	80 e0       	ldi	r24, 0x00	; 0
     14a:	60 00       	.word	0x0060	; ????
     14c:	00 00       	nop
     14e:	00 08       	sbc	r0, r0
     150:	08 08       	sbc	r0, r8
     152:	08 08       	sbc	r0, r8
     154:	08 00       	.word	0x0008	; ????
     156:	00 00       	nop
     158:	00 60       	ori	r16, 0x00	; 0
     15a:	60 00       	.word	0x0060	; ????
     15c:	00 00       	nop
     15e:	60 30       	cpi	r22, 0x00	; 0
     160:	18 0c       	add	r1, r8
     162:	06 03       	mulsu	r16, r22
     164:	01 00       	.word	0x0001	; ????
     166:	3e 7f       	andi	r19, 0xFE	; 254
     168:	51 49       	sbci	r21, 0x91	; 145
     16a:	45 7f       	andi	r20, 0xF5	; 245
     16c:	3e 00       	.word	0x003e	; ????
     16e:	00 40       	sbci	r16, 0x00	; 0
     170:	42 7f       	andi	r20, 0xF2	; 242
     172:	7f 40       	sbci	r23, 0x0F	; 15
     174:	40 00       	.word	0x0040	; ????
     176:	00 72       	andi	r16, 0x20	; 32
     178:	7b 49       	sbci	r23, 0x9B	; 155
     17a:	49 6f       	ori	r20, 0xF9	; 249
     17c:	66 00       	.word	0x0066	; ????
     17e:	00 22       	and	r0, r16
     180:	61 49       	sbci	r22, 0x91	; 145
     182:	49 7f       	andi	r20, 0xF9	; 249
     184:	36 00       	.word	0x0036	; ????
     186:	18 14       	cp	r1, r8
     188:	52 7f       	andi	r21, 0xF2	; 242
     18a:	7f 50       	subi	r23, 0x0F	; 15
     18c:	10 00       	.word	0x0010	; ????
     18e:	00 27       	eor	r16, r16
     190:	6f 49       	sbci	r22, 0x9F	; 159
     192:	49 79       	andi	r20, 0x99	; 153
     194:	33 00       	.word	0x0033	; ????
     196:	00 3e       	cpi	r16, 0xE0	; 224
     198:	7f 49       	sbci	r23, 0x9F	; 159
     19a:	49 7b       	andi	r20, 0xB9	; 185
     19c:	32 00       	.word	0x0032	; ????
     19e:	00 03       	mulsu	r16, r16
     1a0:	01 71       	andi	r16, 0x11	; 17
     1a2:	7d 0f       	add	r23, r29
     1a4:	07 00       	.word	0x0007	; ????
     1a6:	00 36       	cpi	r16, 0x60	; 96
     1a8:	7f 49       	sbci	r23, 0x9F	; 159
     1aa:	49 7f       	andi	r20, 0xF9	; 249
     1ac:	36 00       	.word	0x0036	; ????
     1ae:	00 26       	eor	r0, r16
     1b0:	6f 49       	sbci	r22, 0x9F	; 159
     1b2:	49 7f       	andi	r20, 0xF9	; 249
     1b4:	3e 00       	.word	0x003e	; ????
     1b6:	00 00       	nop
     1b8:	00 6c       	ori	r16, 0xC0	; 192
     1ba:	6c 00       	.word	0x006c	; ????
     1bc:	00 00       	nop
     1be:	00 00       	nop
     1c0:	80 ec       	ldi	r24, 0xC0	; 192
     1c2:	6c 00       	.word	0x006c	; ????
     1c4:	00 00       	nop
     1c6:	00 08       	sbc	r0, r0
     1c8:	1c 36       	cpi	r17, 0x6C	; 108
     1ca:	63 41       	sbci	r22, 0x13	; 19
     1cc:	00 00       	nop
     1ce:	00 24       	eor	r0, r0
     1d0:	24 24       	eor	r2, r4
     1d2:	24 24       	eor	r2, r4
     1d4:	24 00       	.word	0x0024	; ????
     1d6:	00 41       	sbci	r16, 0x10	; 16
     1d8:	63 36       	cpi	r22, 0x63	; 99
     1da:	1c 08       	sbc	r1, r12
     1dc:	00 00       	nop
     1de:	00 02       	muls	r16, r16
     1e0:	03 51       	subi	r16, 0x13	; 19
     1e2:	59 0f       	add	r21, r25
     1e4:	06 00       	.word	0x0006	; ????
     1e6:	3e 7f       	andi	r19, 0xFE	; 254
     1e8:	41 5d       	subi	r20, 0xD1	; 209
     1ea:	5d 5f       	subi	r21, 0xFD	; 253
     1ec:	1e 00       	.word	0x001e	; ????
     1ee:	00 7c       	andi	r16, 0xC0	; 192
     1f0:	7e 13       	cpse	r23, r30
     1f2:	13 7e       	andi	r17, 0xE3	; 227
     1f4:	7c 00       	.word	0x007c	; ????
     1f6:	41 7f       	andi	r20, 0xF1	; 241
     1f8:	7f 49       	sbci	r23, 0x9F	; 159
     1fa:	49 7f       	andi	r20, 0xF9	; 249
     1fc:	36 00       	.word	0x0036	; ????
     1fe:	1c 3e       	cpi	r17, 0xEC	; 236
     200:	63 41       	sbci	r22, 0x13	; 19
     202:	41 63       	ori	r20, 0x31	; 49
     204:	22 00       	.word	0x0022	; ????
     206:	41 7f       	andi	r20, 0xF1	; 241
     208:	7f 41       	sbci	r23, 0x1F	; 31
     20a:	63 3e       	cpi	r22, 0xE3	; 227
     20c:	1c 00       	.word	0x001c	; ????
     20e:	41 7f       	andi	r20, 0xF1	; 241
     210:	7f 49       	sbci	r23, 0x9F	; 159
     212:	5d 41       	sbci	r21, 0x1D	; 29
     214:	63 00       	.word	0x0063	; ????
     216:	41 7f       	andi	r20, 0xF1	; 241
     218:	7f 49       	sbci	r23, 0x9F	; 159
     21a:	1d 01       	movw	r2, r26
     21c:	03 00       	.word	0x0003	; ????
     21e:	3c 7e       	andi	r19, 0xEC	; 236
     220:	43 41       	sbci	r20, 0x13	; 19
     222:	51 73       	andi	r21, 0x31	; 49
     224:	72 00       	.word	0x0072	; ????
     226:	00 7f       	andi	r16, 0xF0	; 240
     228:	7f 08       	sbc	r7, r15
     22a:	08 7f       	andi	r16, 0xF8	; 248
     22c:	7f 00       	.word	0x007f	; ????
     22e:	00 41       	sbci	r16, 0x10	; 16
     230:	41 7f       	andi	r20, 0xF1	; 241
     232:	7f 41       	sbci	r23, 0x1F	; 31
     234:	41 00       	.word	0x0041	; ????
     236:	30 70       	andi	r19, 0x00	; 0
     238:	40 41       	sbci	r20, 0x10	; 16
     23a:	7f 3f       	cpi	r23, 0xFF	; 255
     23c:	01 00       	.word	0x0001	; ????
     23e:	41 7f       	andi	r20, 0xF1	; 241
     240:	7f 08       	sbc	r7, r15
     242:	1c 77       	andi	r17, 0x7C	; 124
     244:	63 00       	.word	0x0063	; ????
     246:	41 7f       	andi	r20, 0xF1	; 241
     248:	7f 41       	sbci	r23, 0x1F	; 31
     24a:	40 60       	ori	r20, 0x00	; 0
     24c:	70 00       	.word	0x0070	; ????
     24e:	7f 7f       	andi	r23, 0xFF	; 255
     250:	0e 1c       	adc	r0, r14
     252:	0e 7f       	andi	r16, 0xFE	; 254
     254:	7f 00       	.word	0x007f	; ????
     256:	7f 7f       	andi	r23, 0xFF	; 255
     258:	06 0c       	add	r0, r6
     25a:	18 7f       	andi	r17, 0xF8	; 248
     25c:	7f 00       	.word	0x007f	; ????
     25e:	1c 3e       	cpi	r17, 0xEC	; 236
     260:	63 41       	sbci	r22, 0x13	; 19
     262:	63 3e       	cpi	r22, 0xE3	; 227
     264:	1c 00       	.word	0x001c	; ????
     266:	41 7f       	andi	r20, 0xF1	; 241
     268:	7f 49       	sbci	r23, 0x9F	; 159
     26a:	09 07       	cpc	r16, r25
     26c:	06 00       	.word	0x0006	; ????
     26e:	3c 7e       	andi	r19, 0xEC	; 236
     270:	43 51       	subi	r20, 0x13	; 19
     272:	33 6e       	ori	r19, 0xE3	; 227
     274:	5c 00       	.word	0x005c	; ????
     276:	41 7f       	andi	r20, 0xF1	; 241
     278:	7f 09       	sbc	r23, r15
     27a:	19 3f       	cpi	r17, 0xF9	; 249
     27c:	66 00       	.word	0x0066	; ????
     27e:	00 26       	eor	r0, r16
     280:	6f 49       	sbci	r22, 0x9F	; 159
     282:	49 7b       	andi	r20, 0xB9	; 185
     284:	32 00       	.word	0x0032	; ????
     286:	00 03       	mulsu	r16, r16
     288:	41 7f       	andi	r20, 0xF1	; 241
     28a:	7f 41       	sbci	r23, 0x1F	; 31
     28c:	03 00       	.word	0x0003	; ????
     28e:	00 3f       	cpi	r16, 0xF0	; 240
     290:	7f 40       	sbci	r23, 0x0F	; 15
     292:	40 7f       	andi	r20, 0xF0	; 240
     294:	3f 00       	.word	0x003f	; ????
     296:	00 1f       	adc	r16, r16
     298:	3f 60       	ori	r19, 0x0F	; 15
     29a:	60 3f       	cpi	r22, 0xF0	; 240
     29c:	1f 00       	.word	0x001f	; ????
     29e:	7f 7f       	andi	r23, 0xFF	; 255
     2a0:	30 18       	sub	r3, r0
     2a2:	30 7f       	andi	r19, 0xF0	; 240
     2a4:	7f 00       	.word	0x007f	; ????
     2a6:	61 73       	andi	r22, 0x31	; 49
     2a8:	1e 0c       	add	r1, r14
     2aa:	1e 73       	andi	r17, 0x3E	; 62
     2ac:	61 00       	.word	0x0061	; ????
     2ae:	00 07       	cpc	r16, r16
     2b0:	4f 78       	andi	r20, 0x8F	; 143
     2b2:	78 4f       	sbci	r23, 0xF8	; 248
     2b4:	07 00       	.word	0x0007	; ????
     2b6:	47 63       	ori	r20, 0x37	; 55
     2b8:	71 59       	subi	r23, 0x91	; 145
     2ba:	4d 67       	ori	r20, 0x7D	; 125
     2bc:	73 00       	.word	0x0073	; ????
     2be:	00 00       	nop
     2c0:	7f 7f       	andi	r23, 0xFF	; 255
     2c2:	41 41       	sbci	r20, 0x11	; 17
     2c4:	00 00       	nop
     2c6:	01 03       	mulsu	r16, r17
     2c8:	06 0c       	add	r0, r6
     2ca:	18 30       	cpi	r17, 0x08	; 8
     2cc:	60 00       	.word	0x0060	; ????
     2ce:	00 00       	nop
     2d0:	41 41       	sbci	r20, 0x11	; 17
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	00 00       	nop
     2d6:	08 0c       	add	r0, r8
     2d8:	06 03       	mulsu	r16, r22
     2da:	06 0c       	add	r0, r6
     2dc:	08 00       	.word	0x0008	; ????
     2de:	80 80       	ld	r8, Z
     2e0:	80 80       	ld	r8, Z
     2e2:	80 80       	ld	r8, Z
     2e4:	80 80       	ld	r8, Z
     2e6:	00 00       	nop
     2e8:	02 06       	cpc	r0, r18
     2ea:	0c 08       	sbc	r0, r12
     2ec:	00 00       	nop
     2ee:	20 74       	andi	r18, 0x40	; 64
     2f0:	54 54       	subi	r21, 0x44	; 68
     2f2:	3c 78       	andi	r19, 0x8C	; 140
     2f4:	40 00       	.word	0x0040	; ????
     2f6:	43 3f       	cpi	r20, 0xF3	; 243
     2f8:	7f 44       	sbci	r23, 0x4F	; 79
     2fa:	44 7c       	andi	r20, 0xC4	; 196
     2fc:	38 00       	.word	0x0038	; ????
     2fe:	00 38       	cpi	r16, 0x80	; 128
     300:	7c 44       	sbci	r23, 0x4C	; 76
     302:	44 6c       	ori	r20, 0xC4	; 196
     304:	28 00       	.word	0x0028	; ????
     306:	38 7c       	andi	r19, 0xC8	; 200
     308:	44 45       	sbci	r20, 0x54	; 84
     30a:	3f 7f       	andi	r19, 0xFF	; 255
     30c:	40 00       	.word	0x0040	; ????
     30e:	00 38       	cpi	r16, 0x80	; 128
     310:	7c 54       	subi	r23, 0x4C	; 76
     312:	54 5c       	subi	r21, 0xC4	; 196
     314:	18 00       	.word	0x0018	; ????
     316:	00 48       	sbci	r16, 0x80	; 128
     318:	7e 7f       	andi	r23, 0xFE	; 254
     31a:	49 03       	fmul	r20, r17
     31c:	02 00       	.word	0x0002	; ????
     31e:	00 98       	cbi	0x00, 0	; 0
     320:	bc a4       	ldd	r11, Y+44	; 0x2c
     322:	a4 fc       	sbrc	r10, 4
     324:	7c 00       	.word	0x007c	; ????
     326:	41 7f       	andi	r20, 0xF1	; 241
     328:	7f 08       	sbc	r7, r15
     32a:	04 7c       	andi	r16, 0xC4	; 196
     32c:	78 00       	.word	0x0078	; ????
     32e:	00 00       	nop
     330:	44 7d       	andi	r20, 0xD4	; 212
     332:	7d 40       	sbci	r23, 0x0D	; 13
     334:	00 00       	nop
     336:	00 60       	ori	r16, 0x00	; 0
     338:	e0 80       	ld	r14, Z
     33a:	84 fc       	sbrc	r8, 4
     33c:	7d 00       	.word	0x007d	; ????
     33e:	41 7f       	andi	r20, 0xF1	; 241
     340:	7f 10       	cpse	r7, r15
     342:	38 6c       	ori	r19, 0xC8	; 200
     344:	44 00       	.word	0x0044	; ????
     346:	00 00       	nop
     348:	41 7f       	andi	r20, 0xF1	; 241
     34a:	7f 40       	sbci	r23, 0x0F	; 15
     34c:	00 00       	nop
     34e:	78 7c       	andi	r23, 0xC8	; 200
     350:	0c 38       	cpi	r16, 0x8C	; 140
     352:	0c 7c       	andi	r16, 0xCC	; 204
     354:	78 00       	.word	0x0078	; ????
     356:	04 7c       	andi	r16, 0xC4	; 196
     358:	78 04       	cpc	r7, r8
     35a:	04 78       	andi	r16, 0x84	; 132
     35c:	78 00       	.word	0x0078	; ????
     35e:	00 38       	cpi	r16, 0x80	; 128
     360:	7c 44       	sbci	r23, 0x4C	; 76
     362:	44 7c       	andi	r20, 0xC4	; 196
     364:	38 00       	.word	0x0038	; ????
     366:	84 fc       	sbrc	r8, 4
     368:	f8 a4       	ldd	r15, Y+40	; 0x28
     36a:	24 3c       	cpi	r18, 0xC4	; 196
     36c:	18 00       	.word	0x0018	; ????
     36e:	18 3c       	cpi	r17, 0xC8	; 200
     370:	24 a4       	ldd	r2, Z+44	; 0x2c
     372:	f8 fc       	.word	0xfcf8	; ????
     374:	84 00       	.word	0x0084	; ????
     376:	44 7c       	andi	r20, 0xC4	; 196
     378:	78 44       	sbci	r23, 0x48	; 72
     37a:	0c 08       	sbc	r0, r12
     37c:	00 00       	nop
     37e:	00 48       	sbci	r16, 0x80	; 128
     380:	5c 54       	subi	r21, 0x4C	; 76
     382:	54 74       	andi	r21, 0x44	; 68
     384:	20 00       	.word	0x0020	; ????
     386:	00 04       	cpc	r0, r0
     388:	3f 7f       	andi	r19, 0xFF	; 255
     38a:	44 64       	ori	r20, 0x44	; 68
     38c:	20 00       	.word	0x0020	; ????
     38e:	00 3c       	cpi	r16, 0xC0	; 192
     390:	7c 40       	sbci	r23, 0x0C	; 12
     392:	40 7c       	andi	r20, 0xC0	; 192
     394:	7c 00       	.word	0x007c	; ????
     396:	00 1c       	adc	r0, r0
     398:	3c 60       	ori	r19, 0x0C	; 12
     39a:	60 3c       	cpi	r22, 0xC0	; 192
     39c:	1c 00       	.word	0x001c	; ????
     39e:	3c 7c       	andi	r19, 0xCC	; 204
     3a0:	60 38       	cpi	r22, 0x80	; 128
     3a2:	60 7c       	andi	r22, 0xC0	; 192
     3a4:	3c 00       	.word	0x003c	; ????
     3a6:	44 6c       	ori	r20, 0xC4	; 196
     3a8:	38 10       	cpse	r3, r8
     3aa:	38 6c       	ori	r19, 0xC8	; 200
     3ac:	44 00       	.word	0x0044	; ????
     3ae:	00 9c       	mul	r0, r0
     3b0:	bc a0       	ldd	r11, Y+36	; 0x24
     3b2:	a0 fc       	sbrc	r10, 0
     3b4:	7c 00       	.word	0x007c	; ????
     3b6:	00 4c       	sbci	r16, 0xC0	; 192
     3b8:	64 74       	andi	r22, 0x44	; 68
     3ba:	5c 4c       	sbci	r21, 0xCC	; 204
     3bc:	44 00       	.word	0x0044	; ????
     3be:	00 41       	sbci	r16, 0x10	; 16
     3c0:	41 77       	andi	r20, 0x71	; 113
     3c2:	3e 08       	sbc	r3, r14
     3c4:	08 00       	.word	0x0008	; ????
     3c6:	00 00       	nop
     3c8:	00 7f       	andi	r16, 0xF0	; 240
     3ca:	7f 00       	.word	0x007f	; ????
     3cc:	00 00       	nop
     3ce:	00 08       	sbc	r0, r0
     3d0:	08 3e       	cpi	r16, 0xE8	; 232
     3d2:	77 41       	sbci	r23, 0x17	; 23
     3d4:	41 00       	.word	0x0041	; ????
     3d6:	02 03       	mulsu	r16, r18
     3d8:	01 03       	mulsu	r16, r17
     3da:	02 01       	movw	r0, r4
     3dc:	01 00       	.word	0x0001	; ????
	...
     3e6:	00 00       	nop
     3e8:	00 ff       	sbrs	r16, 0
     3ea:	ff 00       	.word	0x00ff	; ????
     3ec:	00 00       	nop
     3ee:	18 18       	sub	r1, r8
     3f0:	18 18       	sub	r1, r8
     3f2:	18 18       	sub	r1, r8
     3f4:	18 18       	sub	r1, r8
     3f6:	00 00       	nop
     3f8:	00 1f       	adc	r16, r16
     3fa:	1f 18       	sub	r1, r15
     3fc:	18 18       	sub	r1, r8
     3fe:	00 00       	nop
     400:	00 f8       	bld	r0, 0
     402:	f8 18       	sub	r15, r8
     404:	18 18       	sub	r1, r8
     406:	18 18       	sub	r1, r8
     408:	18 f8       	.word	0xf818	; ????
     40a:	f8 00       	.word	0x00f8	; ????
     40c:	00 00       	nop
     40e:	18 18       	sub	r1, r8
     410:	18 1f       	adc	r17, r24
     412:	1f 00       	.word	0x001f	; ????
     414:	00 00       	nop
     416:	18 18       	sub	r1, r8
     418:	18 1f       	adc	r17, r24
     41a:	1f 18       	sub	r1, r15
     41c:	18 18       	sub	r1, r8
     41e:	00 00       	nop
     420:	00 ff       	sbrs	r16, 0
     422:	ff 18       	sub	r15, r15
     424:	18 18       	sub	r1, r8
     426:	18 18       	sub	r1, r8
     428:	18 f8       	.word	0xf818	; ????
     42a:	f8 18       	sub	r15, r8
     42c:	18 18       	sub	r1, r8
     42e:	18 18       	sub	r1, r8
     430:	18 ff       	.word	0xff18	; ????
     432:	ff 00       	.word	0x00ff	; ????
     434:	00 00       	nop
     436:	18 18       	sub	r1, r8
     438:	18 ff       	.word	0xff18	; ????
     43a:	ff 18       	sub	r15, r15
     43c:	18 18       	sub	r1, r8
     43e:	00 08       	sbc	r0, r0
     440:	1c 3e       	cpi	r17, 0xEC	; 236
     442:	08 08       	sbc	r0, r8
     444:	08 00       	.word	0x0008	; ????
     446:	00 08       	sbc	r0, r0
     448:	0c 3e       	cpi	r16, 0xEC	; 236
     44a:	0c 08       	sbc	r0, r12
     44c:	00 00       	nop
     44e:	00 08       	sbc	r0, r0
     450:	08 08       	sbc	r0, r8
     452:	3e 1c       	adc	r3, r14
     454:	08 00       	.word	0x0008	; ????
     456:	00 08       	sbc	r0, r0
     458:	18 3e       	cpi	r17, 0xE8	; 232
     45a:	18 08       	sbc	r1, r8
     45c:	00 00       	nop
     45e:	00 00       	nop
     460:	00 00       	nop
     462:	f0 f0       	brcs	.+60     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
     464:	f0 f0       	brcs	.+60     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
     466:	f0 f0       	brcs	.+60     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     468:	f0 f0       	brcs	.+60     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
     46a:	00 00       	nop
     46c:	00 00       	nop
     46e:	f0 f0       	brcs	.+60     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
     470:	f0 f0       	brcs	.+60     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
     472:	f0 f0       	brcs	.+60     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
     474:	f0 f0       	brcs	.+60     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
     476:	00 00       	nop
     478:	00 00       	nop
     47a:	0f 0f       	add	r16, r31
     47c:	0f 0f       	add	r16, r31
     47e:	00 00       	nop
     480:	00 00       	nop
     482:	ff ff       	.word	0xffff	; ????
     484:	ff ff       	.word	0xffff	; ????
     486:	f0 f0       	brcs	.+60     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
     488:	f0 f0       	brcs	.+60     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
     48a:	0f 0f       	add	r16, r31
     48c:	0f 0f       	add	r16, r31
     48e:	f0 f0       	brcs	.+60     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
     490:	f0 f0       	brcs	.+60     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
     492:	ff ff       	.word	0xffff	; ????
     494:	ff ff       	.word	0xffff	; ????
     496:	0f 0f       	add	r16, r31
     498:	0f 0f       	add	r16, r31
     49a:	00 00       	nop
     49c:	00 00       	nop
     49e:	0f 0f       	add	r16, r31
     4a0:	0f 0f       	add	r16, r31
     4a2:	f0 f0       	brcs	.+60     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
     4a4:	f0 f0       	brcs	.+60     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4a6:	ff ff       	.word	0xffff	; ????
     4a8:	ff ff       	.word	0xffff	; ????
     4aa:	00 00       	nop
     4ac:	00 00       	nop
     4ae:	ff ff       	.word	0xffff	; ????
     4b0:	ff ff       	.word	0xffff	; ????
     4b2:	f0 f0       	brcs	.+60     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     4b4:	f0 f0       	brcs	.+60     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
     4b6:	0f 0f       	add	r16, r31
     4b8:	0f 0f       	add	r16, r31
     4ba:	0f 0f       	add	r16, r31
     4bc:	0f 0f       	add	r16, r31
     4be:	0f 0f       	add	r16, r31
     4c0:	0f 0f       	add	r16, r31
     4c2:	ff ff       	.word	0xffff	; ????
     4c4:	ff ff       	.word	0xffff	; ????
     4c6:	ff ff       	.word	0xffff	; ????
     4c8:	ff ff       	.word	0xffff	; ????
     4ca:	0f 0f       	add	r16, r31
     4cc:	0f 0f       	add	r16, r31
     4ce:	ff ff       	.word	0xffff	; ????
     4d0:	ff ff       	.word	0xffff	; ????
     4d2:	ff ff       	.word	0xffff	; ????
     4d4:	ff ff       	.word	0xffff	; ????
     4d6:	c0 c0       	rjmp	.+384    	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
     4d8:	c0 c0       	rjmp	.+384    	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
     4da:	c0 c0       	rjmp	.+384    	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
     4dc:	c0 c0       	rjmp	.+384    	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
     4de:	fc fc       	.word	0xfcfc	; ????
     4e0:	fc fc       	.word	0xfcfc	; ????
     4e2:	fc fc       	.word	0xfcfc	; ????
     4e4:	fc fc       	.word	0xfcfc	; ????
	...
     4ee:	00 00       	nop
     4f0:	00 7d       	andi	r16, 0xD0	; 208
     4f2:	7d 00       	.word	0x007d	; ????
     4f4:	00 00       	nop
     4f6:	38 7c       	andi	r19, 0xC8	; 200
     4f8:	44 fe       	sbrs	r4, 4
     4fa:	44 6c       	ori	r20, 0xC4	; 196
     4fc:	28 00       	.word	0x0028	; ????
     4fe:	48 7e       	andi	r20, 0xE8	; 232
     500:	7f 49       	sbci	r23, 0x9F	; 159
     502:	49 63       	ori	r20, 0x39	; 57
     504:	62 00       	.word	0x0062	; ????
     506:	00 5a       	subi	r16, 0xA0	; 160
     508:	3c 24       	eor	r3, r12
     50a:	24 3c       	cpi	r18, 0xC4	; 196
     50c:	5a 00       	.word	0x005a	; ????
     50e:	00 15       	cp	r16, r0
     510:	57 7e       	andi	r21, 0xE7	; 231
     512:	7e 57       	subi	r23, 0x7E	; 126
     514:	15 00       	.word	0x0015	; ????
     516:	00 00       	nop
     518:	00 77       	andi	r16, 0x70	; 112
     51a:	77 00       	.word	0x0077	; ????
     51c:	00 00       	nop
     51e:	40 48       	sbci	r20, 0x80	; 128
     520:	7e 77       	andi	r23, 0x7E	; 126
     522:	1d 09       	sbc	r17, r13
     524:	01 00       	.word	0x0001	; ????
     526:	00 03       	mulsu	r16, r16
     528:	03 00       	.word	0x0003	; ????
     52a:	00 03       	mulsu	r16, r16
     52c:	03 00       	.word	0x0003	; ????
     52e:	1c 22       	and	r1, r28
     530:	5d 55       	subi	r21, 0x5D	; 93
     532:	55 22       	and	r5, r21
     534:	1c 00       	.word	0x001c	; ????
     536:	48 5d       	subi	r20, 0xD8	; 216
     538:	55 4f       	sbci	r21, 0xF5	; 245
     53a:	5e 50       	subi	r21, 0x0E	; 14
     53c:	00 00       	nop
     53e:	08 1c       	adc	r0, r8
     540:	36 2a       	or	r3, r22
     542:	1c 36       	cpi	r17, 0x6C	; 108
     544:	22 00       	.word	0x0022	; ????
     546:	00 08       	sbc	r0, r0
     548:	08 08       	sbc	r0, r8
     54a:	08 08       	sbc	r0, r8
     54c:	18 00       	.word	0x0018	; ????
     54e:	00 00       	nop
     550:	10 10       	cpse	r1, r0
     552:	10 00       	.word	0x0010	; ????
     554:	00 00       	nop
     556:	1c 22       	and	r1, r28
     558:	5d 4d       	sbci	r21, 0xDD	; 221
     55a:	55 22       	and	r5, r21
     55c:	1c 00       	.word	0x001c	; ????
     55e:	00 00       	nop
     560:	01 01       	movw	r0, r2
     562:	01 01       	movw	r0, r2
     564:	00 00       	nop
     566:	00 0e       	add	r0, r16
     568:	1b 11       	cpse	r17, r11
     56a:	1b 0e       	add	r1, r27
     56c:	00 00       	nop
     56e:	00 48       	sbci	r16, 0x80	; 128
     570:	48 7e       	andi	r20, 0xE8	; 232
     572:	7e 48       	sbci	r23, 0x8E	; 142
     574:	48 00       	.word	0x0048	; ????
     576:	00 19       	sub	r16, r0
     578:	1d 15       	cp	r17, r13
     57a:	17 12       	cpse	r1, r23
     57c:	00 00       	nop
     57e:	00 11       	cpse	r16, r0
     580:	15 15       	cp	r17, r5
     582:	1f 0a       	sbc	r1, r31
     584:	00 00       	nop
     586:	00 00       	nop
     588:	04 07       	cpc	r16, r20
     58a:	03 00       	.word	0x0003	; ????
     58c:	00 00       	nop
     58e:	00 f8       	bld	r0, 0
     590:	f8 40       	sbci	r31, 0x08	; 8
     592:	40 78       	andi	r20, 0x80	; 128
     594:	38 00       	.word	0x0038	; ????
     596:	02 0f       	add	r16, r18
     598:	7f 7f       	andi	r23, 0xFF	; 255
     59a:	01 7f       	andi	r16, 0xF1	; 241
     59c:	01 00       	.word	0x0001	; ????
     59e:	00 00       	nop
     5a0:	00 18       	sub	r0, r0
     5a2:	18 00       	.word	0x0018	; ????
     5a4:	00 00       	nop
     5a6:	00 00       	nop
     5a8:	40 40       	sbci	r20, 0x00	; 0
     5aa:	60 00       	.word	0x0060	; ????
     5ac:	00 00       	nop
     5ae:	00 00       	nop
     5b0:	11 1f       	adc	r17, r17
     5b2:	1f 10       	cpse	r1, r15
     5b4:	00 00       	nop
     5b6:	00 4e       	sbci	r16, 0xE0	; 224
     5b8:	5b 51       	subi	r21, 0x1B	; 27
     5ba:	5b 4e       	sbci	r21, 0xEB	; 235
     5bc:	00 00       	nop
     5be:	22 36       	cpi	r18, 0x62	; 98
     5c0:	1c 2a       	or	r1, r28
     5c2:	36 1c       	adc	r3, r6
     5c4:	08 00       	.word	0x0008	; ????
     5c6:	02 1f       	adc	r16, r18
     5c8:	00 30       	cpi	r16, 0x00	; 0
     5ca:	28 7c       	andi	r18, 0xC8	; 200
     5cc:	20 00       	.word	0x0020	; ????
     5ce:	02 1f       	adc	r16, r18
     5d0:	00 48       	sbci	r16, 0x80	; 128
     5d2:	64 54       	subi	r22, 0x44	; 68
     5d4:	48 00       	.word	0x0048	; ????
     5d6:	11 15       	cp	r17, r1
     5d8:	15 0a       	sbc	r1, r21
     5da:	30 28       	or	r3, r0
     5dc:	7c 20       	and	r7, r12
     5de:	00 30       	cpi	r16, 0x00	; 0
     5e0:	78 4d       	sbci	r23, 0xD8	; 216
     5e2:	45 70       	andi	r20, 0x05	; 5
     5e4:	30 00       	.word	0x0030	; ????
     5e6:	00 78       	andi	r16, 0x80	; 128
     5e8:	7d 15       	cp	r23, r13
     5ea:	14 7c       	andi	r17, 0xC4	; 196
     5ec:	78 00       	.word	0x0078	; ????
     5ee:	00 78       	andi	r16, 0x80	; 128
     5f0:	7c 14       	cp	r7, r12
     5f2:	15 7d       	andi	r17, 0xD5	; 213
     5f4:	78 00       	.word	0x0078	; ????
     5f6:	00 78       	andi	r16, 0x80	; 128
     5f8:	7c 15       	cp	r23, r12
     5fa:	15 7c       	andi	r17, 0xC5	; 197
     5fc:	78 00       	.word	0x0078	; ????
     5fe:	00 78       	andi	r16, 0x80	; 128
     600:	7d 15       	cp	r23, r13
     602:	15 7d       	andi	r17, 0xD5	; 213
     604:	78 00       	.word	0x0078	; ????
     606:	00 79       	andi	r16, 0x90	; 144
     608:	7d 14       	cp	r7, r13
     60a:	14 7d       	andi	r17, 0xD4	; 212
     60c:	79 00       	.word	0x0079	; ????
     60e:	00 78       	andi	r16, 0x80	; 128
     610:	7e 15       	cp	r23, r14
     612:	15 7e       	andi	r17, 0xE5	; 229
     614:	78 00       	.word	0x0078	; ????
     616:	78 7c       	andi	r23, 0xC8	; 200
     618:	12 7f       	andi	r17, 0xF2	; 242
     61a:	7f 49       	sbci	r23, 0x9F	; 159
     61c:	6b 00       	.word	0x006b	; ????
     61e:	0c 9e       	mul	r0, r28
     620:	b3 e1       	ldi	r27, 0x13	; 19
     622:	e1 33       	cpi	r30, 0x31	; 49
     624:	12 00       	.word	0x0012	; ????
     626:	44 7d       	andi	r20, 0xD4	; 212
     628:	7d 54       	subi	r23, 0x4D	; 77
     62a:	54 54       	subi	r21, 0x44	; 68
     62c:	44 00       	.word	0x0044	; ????
     62e:	44 7c       	andi	r20, 0xC4	; 196
     630:	7c 55       	subi	r23, 0x5C	; 92
     632:	55 54       	subi	r21, 0x45	; 69
     634:	44 00       	.word	0x0044	; ????
     636:	44 7c       	andi	r20, 0xC4	; 196
     638:	7d 55       	subi	r23, 0x5D	; 93
     63a:	55 55       	subi	r21, 0x55	; 85
     63c:	44 00       	.word	0x0044	; ????
     63e:	44 7d       	andi	r20, 0xD4	; 212
     640:	7d 54       	subi	r23, 0x4D	; 77
     642:	55 55       	subi	r21, 0x55	; 85
     644:	44 00       	.word	0x0044	; ????
     646:	00 44       	sbci	r16, 0x40	; 64
     648:	45 7d       	andi	r20, 0xD5	; 213
     64a:	7c 44       	sbci	r23, 0x4C	; 76
     64c:	44 00       	.word	0x0044	; ????
     64e:	00 44       	sbci	r16, 0x40	; 64
     650:	44 7c       	andi	r20, 0xC4	; 196
     652:	7d 45       	sbci	r23, 0x5D	; 93
     654:	44 00       	.word	0x0044	; ????
     656:	00 44       	sbci	r16, 0x40	; 64
     658:	45 7d       	andi	r20, 0xD5	; 213
     65a:	7d 45       	sbci	r23, 0x5D	; 93
     65c:	44 00       	.word	0x0044	; ????
     65e:	00 45       	sbci	r16, 0x50	; 80
     660:	45 7c       	andi	r20, 0xC5	; 197
     662:	7c 45       	sbci	r23, 0x5C	; 92
     664:	45 00       	.word	0x0045	; ????
     666:	49 7f       	andi	r20, 0xF9	; 249
     668:	7f 49       	sbci	r23, 0x9F	; 159
     66a:	63 3e       	cpi	r22, 0xE3	; 227
     66c:	1c 00       	.word	0x001c	; ????
     66e:	00 7a       	andi	r16, 0xA0	; 160
     670:	79 11       	cpse	r23, r9
     672:	22 7a       	andi	r18, 0xA2	; 162
     674:	79 00       	.word	0x0079	; ????
     676:	38 7c       	andi	r19, 0xC8	; 200
     678:	45 45       	sbci	r20, 0x55	; 85
     67a:	44 7c       	andi	r20, 0xC4	; 196
     67c:	38 00       	.word	0x0038	; ????
     67e:	38 7c       	andi	r19, 0xC8	; 200
     680:	44 44       	sbci	r20, 0x44	; 68
     682:	45 7d       	andi	r20, 0xD5	; 213
     684:	38 00       	.word	0x0038	; ????
     686:	38 7c       	andi	r19, 0xC8	; 200
     688:	45 45       	sbci	r20, 0x55	; 85
     68a:	45 7c       	andi	r20, 0xC5	; 197
     68c:	38 00       	.word	0x0038	; ????
     68e:	38 7d       	andi	r19, 0xD8	; 216
     690:	45 45       	sbci	r20, 0x55	; 85
     692:	45 7d       	andi	r20, 0xD5	; 213
     694:	38 00       	.word	0x0038	; ????
     696:	38 7d       	andi	r19, 0xD8	; 216
     698:	45 44       	sbci	r20, 0x45	; 69
     69a:	45 7d       	andi	r20, 0xD5	; 213
     69c:	38 00       	.word	0x0038	; ????
     69e:	42 66       	ori	r20, 0x62	; 98
     6a0:	3c 18       	sub	r3, r12
     6a2:	3c 66       	ori	r19, 0x6C	; 108
     6a4:	42 00       	.word	0x0042	; ????
     6a6:	5c 3e       	cpi	r21, 0xEC	; 236
     6a8:	73 5d       	subi	r23, 0xD3	; 211
     6aa:	67 3e       	cpi	r22, 0xE7	; 231
     6ac:	1d 01       	movw	r2, r26
     6ae:	00 3c       	cpi	r16, 0xC0	; 192
     6b0:	7d 41       	sbci	r23, 0x1D	; 29
     6b2:	40 7c       	andi	r20, 0xC0	; 192
     6b4:	3c 00       	.word	0x003c	; ????
     6b6:	00 3c       	cpi	r16, 0xC0	; 192
     6b8:	7c 40       	sbci	r23, 0x0C	; 12
     6ba:	41 7d       	andi	r20, 0xD1	; 209
     6bc:	3c 00       	.word	0x003c	; ????
     6be:	00 3c       	cpi	r16, 0xC0	; 192
     6c0:	7d 41       	sbci	r23, 0x1D	; 29
     6c2:	41 7d       	andi	r20, 0xD1	; 209
     6c4:	3c 00       	.word	0x003c	; ????
     6c6:	00 3d       	cpi	r16, 0xD0	; 208
     6c8:	7d 40       	sbci	r23, 0x0D	; 13
     6ca:	40 7d       	andi	r20, 0xD0	; 208
     6cc:	3d 00       	.word	0x003d	; ????
     6ce:	00 0c       	add	r0, r0
     6d0:	5d 71       	andi	r21, 0x1D	; 29
     6d2:	70 5c       	subi	r23, 0xC0	; 192
     6d4:	0c 00       	.word	0x000c	; ????
     6d6:	7f 7f       	andi	r23, 0xFF	; 255
     6d8:	22 22       	and	r2, r18
     6da:	22 1c       	adc	r2, r2
     6dc:	00 00       	nop
     6de:	7e 7f       	andi	r23, 0xFE	; 254
     6e0:	49 49       	sbci	r20, 0x99	; 153
     6e2:	49 3e       	cpi	r20, 0xE9	; 233
     6e4:	36 00       	.word	0x0036	; ????
     6e6:	20 75       	andi	r18, 0x50	; 80
     6e8:	55 54       	subi	r21, 0x45	; 69
     6ea:	3c 78       	andi	r19, 0x8C	; 140
     6ec:	40 00       	.word	0x0040	; ????
     6ee:	20 74       	andi	r18, 0x40	; 64
     6f0:	54 55       	subi	r21, 0x54	; 84
     6f2:	3d 78       	andi	r19, 0x8D	; 141
     6f4:	40 00       	.word	0x0040	; ????
     6f6:	20 74       	andi	r18, 0x40	; 64
     6f8:	55 55       	subi	r21, 0x55	; 85
     6fa:	3d 78       	andi	r19, 0x8D	; 141
     6fc:	40 00       	.word	0x0040	; ????
     6fe:	20 75       	andi	r18, 0x50	; 80
     700:	55 55       	subi	r21, 0x55	; 85
     702:	3d 79       	andi	r19, 0x9D	; 157
     704:	40 00       	.word	0x0040	; ????
     706:	20 75       	andi	r18, 0x50	; 80
     708:	55 54       	subi	r21, 0x45	; 69
     70a:	3d 79       	andi	r19, 0x9D	; 157
     70c:	40 00       	.word	0x0040	; ????
     70e:	20 76       	andi	r18, 0x60	; 96
     710:	55 55       	subi	r21, 0x55	; 85
     712:	3e 78       	andi	r19, 0x8E	; 142
     714:	40 00       	.word	0x0040	; ????
     716:	20 74       	andi	r18, 0x40	; 64
     718:	54 7c       	andi	r21, 0xC4	; 196
     71a:	34 54       	subi	r19, 0x44	; 68
     71c:	58 00       	.word	0x0058	; ????
     71e:	00 18       	sub	r0, r0
     720:	3c a4       	ldd	r3, Y+44	; 0x2c
     722:	e4 24       	eor	r14, r4
     724:	28 00       	.word	0x0028	; ????
     726:	00 38       	cpi	r16, 0x80	; 128
     728:	7d 55       	subi	r23, 0x5D	; 93
     72a:	54 5c       	subi	r21, 0xC4	; 196
     72c:	18 00       	.word	0x0018	; ????
     72e:	00 38       	cpi	r16, 0x80	; 128
     730:	7c 54       	subi	r23, 0x4C	; 76
     732:	55 5d       	subi	r21, 0xD5	; 213
     734:	18 00       	.word	0x0018	; ????
     736:	00 38       	cpi	r16, 0x80	; 128
     738:	7d 55       	subi	r23, 0x5D	; 93
     73a:	55 5d       	subi	r21, 0xD5	; 213
     73c:	18 00       	.word	0x0018	; ????
     73e:	00 39       	cpi	r16, 0x90	; 144
     740:	7d 54       	subi	r23, 0x4D	; 77
     742:	54 5d       	subi	r21, 0xD4	; 212
     744:	19 00       	.word	0x0019	; ????
     746:	00 00       	nop
     748:	49 7b       	andi	r20, 0xB9	; 185
     74a:	7a 40       	sbci	r23, 0x0A	; 10
     74c:	00 00       	nop
     74e:	00 00       	nop
     750:	48 7a       	andi	r20, 0xA8	; 168
     752:	7b 41       	sbci	r23, 0x1B	; 27
     754:	00 00       	nop
     756:	00 00       	nop
     758:	4a 79       	andi	r20, 0x9A	; 154
     75a:	79 42       	sbci	r23, 0x29	; 41
     75c:	00 00       	nop
     75e:	00 02       	muls	r16, r16
     760:	4a 78       	andi	r20, 0x8A	; 138
     762:	78 42       	sbci	r23, 0x28	; 40
     764:	02 00       	.word	0x0002	; ????
     766:	00 35       	cpi	r16, 0x50	; 80
     768:	75 4b       	sbci	r23, 0xB5	; 181
     76a:	4e 7d       	andi	r20, 0xDE	; 222
     76c:	31 00       	.word	0x0031	; ????
     76e:	08 7a       	andi	r16, 0xA8	; 168
     770:	71 09       	sbc	r23, r1
     772:	0a 7a       	andi	r16, 0xAA	; 170
     774:	71 00       	.word	0x0071	; ????
     776:	00 30       	cpi	r16, 0x00	; 0
     778:	79 4b       	sbci	r23, 0xB9	; 185
     77a:	4a 78       	andi	r20, 0x8A	; 138
     77c:	30 00       	.word	0x0030	; ????
     77e:	00 30       	cpi	r16, 0x00	; 0
     780:	78 4a       	sbci	r23, 0xA8	; 168
     782:	4b 79       	andi	r20, 0x9B	; 155
     784:	30 00       	.word	0x0030	; ????
     786:	00 30       	cpi	r16, 0x00	; 0
     788:	7a 49       	sbci	r23, 0x9A	; 154
     78a:	49 7a       	andi	r20, 0xA9	; 169
     78c:	30 00       	.word	0x0030	; ????
     78e:	00 32       	cpi	r16, 0x20	; 32
     790:	79 49       	sbci	r23, 0x99	; 153
     792:	4a 7a       	andi	r20, 0xAA	; 170
     794:	31 00       	.word	0x0031	; ????
     796:	00 32       	cpi	r16, 0x20	; 32
     798:	7a 48       	sbci	r23, 0x8A	; 138
     79a:	48 7a       	andi	r20, 0xA8	; 168
     79c:	32 00       	.word	0x0032	; ????
     79e:	00 08       	sbc	r0, r0
     7a0:	08 6b       	ori	r16, 0xB8	; 184
     7a2:	6b 08       	sbc	r6, r11
     7a4:	08 00       	.word	0x0008	; ????
     7a6:	80 b0       	in	r8, 0x00	; 0
     7a8:	78 68       	ori	r23, 0x88	; 136
     7aa:	58 78       	andi	r21, 0x88	; 136
     7ac:	34 04       	cpc	r3, r4
     7ae:	00 38       	cpi	r16, 0x80	; 128
     7b0:	79 43       	sbci	r23, 0x39	; 57
     7b2:	42 78       	andi	r20, 0x82	; 130
     7b4:	78 00       	.word	0x0078	; ????
     7b6:	00 38       	cpi	r16, 0x80	; 128
     7b8:	78 42       	sbci	r23, 0x28	; 40
     7ba:	43 79       	andi	r20, 0x93	; 147
     7bc:	78 00       	.word	0x0078	; ????
     7be:	00 38       	cpi	r16, 0x80	; 128
     7c0:	7a 41       	sbci	r23, 0x1A	; 26
     7c2:	41 7a       	andi	r20, 0xA1	; 161
     7c4:	78 00       	.word	0x0078	; ????
     7c6:	00 3a       	cpi	r16, 0xA0	; 160
     7c8:	7a 40       	sbci	r23, 0x0A	; 10
     7ca:	40 7a       	andi	r20, 0xA0	; 160
     7cc:	7a 00       	.word	0x007a	; ????
     7ce:	00 98       	cbi	0x00, 0	; 0
     7d0:	b8 a2       	std	Y+32, r11	; 0x20
     7d2:	a3 f9       	bld	r26, 3
     7d4:	78 00       	.word	0x0078	; ????
     7d6:	00 7e       	andi	r16, 0xE0	; 224
     7d8:	24 24       	eor	r2, r4
     7da:	24 18       	sub	r2, r4
     7dc:	00 00       	nop
     7de:	00 9a       	sbi	0x00, 0	; 0
     7e0:	ba a0       	ldd	r11, Y+34	; 0x22
     7e2:	a0 fa       	bst	r10, 0
     7e4:	7a 00       	.word	0x007a	; ????

000007e6 <__ctors_end>:
     7e6:	11 24       	eor	r1, r1
     7e8:	1f be       	out	0x3f, r1	; 63
     7ea:	cf ef       	ldi	r28, 0xFF	; 255
     7ec:	d0 e1       	ldi	r29, 0x10	; 16
     7ee:	de bf       	out	0x3e, r29	; 62
     7f0:	cd bf       	out	0x3d, r28	; 61

000007f2 <__do_copy_data>:
     7f2:	11 e0       	ldi	r17, 0x01	; 1
     7f4:	a0 e0       	ldi	r26, 0x00	; 0
     7f6:	b1 e0       	ldi	r27, 0x01	; 1
     7f8:	e4 e7       	ldi	r30, 0x74	; 116
     7fa:	fb e1       	ldi	r31, 0x1B	; 27
     7fc:	00 e0       	ldi	r16, 0x00	; 0
     7fe:	0b bf       	out	0x3b, r16	; 59
     800:	02 c0       	rjmp	.+4      	; 0x806 <__do_copy_data+0x14>
     802:	07 90       	elpm	r0, Z+
     804:	0d 92       	st	X+, r0
     806:	a0 3a       	cpi	r26, 0xA0	; 160
     808:	b1 07       	cpc	r27, r17
     80a:	d9 f7       	brne	.-10     	; 0x802 <__do_copy_data+0x10>

0000080c <__do_clear_bss>:
     80c:	22 e0       	ldi	r18, 0x02	; 2
     80e:	a0 ea       	ldi	r26, 0xA0	; 160
     810:	b1 e0       	ldi	r27, 0x01	; 1
     812:	01 c0       	rjmp	.+2      	; 0x816 <.do_clear_bss_start>

00000814 <.do_clear_bss_loop>:
     814:	1d 92       	st	X+, r1

00000816 <.do_clear_bss_start>:
     816:	ac 31       	cpi	r26, 0x1C	; 28
     818:	b2 07       	cpc	r27, r18
     81a:	e1 f7       	brne	.-8      	; 0x814 <.do_clear_bss_loop>
     81c:	10 d1       	rcall	.+544    	; 0xa3e <main>
     81e:	0c 94 b8 0d 	jmp	0x1b70	; 0x1b70 <_exit>

00000822 <__bad_interrupt>:
     822:	ee cb       	rjmp	.-2084   	; 0x0 <__vectors>

00000824 <i2c_start>:
	TWCR = (1<<TWINT) | (1<<TWEN);
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );
	// return received data from TWDR
	return TWDR;
}
     824:	e4 e7       	ldi	r30, 0x74	; 116
     826:	f0 e0       	ldi	r31, 0x00	; 0
     828:	10 82       	st	Z, r1
     82a:	94 ea       	ldi	r25, 0xA4	; 164
     82c:	90 83       	st	Z, r25
     82e:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     832:	99 23       	and	r25, r25
     834:	e4 f7       	brge	.-8      	; 0x82e <i2c_start+0xa>
     836:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
     83a:	98 7f       	andi	r25, 0xF8	; 248
     83c:	98 30       	cpi	r25, 0x08	; 8
     83e:	91 f4       	brne	.+36     	; 0x864 <i2c_start+0x40>
     840:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
     844:	84 e8       	ldi	r24, 0x84	; 132
     846:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     84a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     84e:	88 23       	and	r24, r24
     850:	e4 f7       	brge	.-8      	; 0x84a <i2c_start+0x26>
     852:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
     856:	88 7f       	andi	r24, 0xF8	; 248
     858:	88 31       	cpi	r24, 0x18	; 24
     85a:	31 f0       	breq	.+12     	; 0x868 <i2c_start+0x44>
     85c:	80 34       	cpi	r24, 0x40	; 64
     85e:	31 f4       	brne	.+12     	; 0x86c <i2c_start+0x48>
     860:	80 e0       	ldi	r24, 0x00	; 0
     862:	08 95       	ret
     864:	81 e0       	ldi	r24, 0x01	; 1
     866:	08 95       	ret
     868:	80 e0       	ldi	r24, 0x00	; 0
     86a:	08 95       	ret
     86c:	81 e0       	ldi	r24, 0x01	; 1
     86e:	08 95       	ret

00000870 <i2c_write>:
     870:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
     874:	84 e8       	ldi	r24, 0x84	; 132
     876:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     87a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     87e:	88 23       	and	r24, r24
     880:	e4 f7       	brge	.-8      	; 0x87a <i2c_write+0xa>
     882:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
     886:	88 7f       	andi	r24, 0xF8	; 248
     888:	88 32       	cpi	r24, 0x28	; 40
     88a:	11 f0       	breq	.+4      	; 0x890 <i2c_write+0x20>
     88c:	81 e0       	ldi	r24, 0x01	; 1
     88e:	08 95       	ret
     890:	80 e0       	ldi	r24, 0x00	; 0
     892:	08 95       	ret

00000894 <i2c_stop>:
}

void i2c_stop(void)
{
	// transmit STOP condition
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     894:	84 e9       	ldi	r24, 0x94	; 148
     896:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     89a:	08 95       	ret

0000089c <initOLE>:
void initOLE()
{
    //uint8_t x_pos  = 0;
	//uint16_t sup_v,sup_i = 0;
	
	OLED_RES_out();
     89c:	82 b1       	in	r24, 0x02	; 2
     89e:	80 61       	ori	r24, 0x10	; 16
     8a0:	82 b9       	out	0x02, r24	; 2
	OLED_RES_high();
     8a2:	83 b1       	in	r24, 0x03	; 3
     8a4:	80 61       	ori	r24, 0x10	; 16
     8a6:	83 b9       	out	0x03, r24	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8a8:	2f e3       	ldi	r18, 0x3F	; 63
     8aa:	8d e0       	ldi	r24, 0x0D	; 13
     8ac:	93 e0       	ldi	r25, 0x03	; 3
     8ae:	21 50       	subi	r18, 0x01	; 1
     8b0:	80 40       	sbci	r24, 0x00	; 0
     8b2:	90 40       	sbci	r25, 0x00	; 0
     8b4:	e1 f7       	brne	.-8      	; 0x8ae <initOLE+0x12>
     8b6:	00 c0       	rjmp	.+0      	; 0x8b8 <initOLE+0x1c>
     8b8:	00 00       	nop
	_delay_ms(1000);
	OLED_RES_low();
     8ba:	83 b1       	in	r24, 0x03	; 3
     8bc:	8f 7e       	andi	r24, 0xEF	; 239
     8be:	83 b9       	out	0x03, r24	; 3
     8c0:	2f e3       	ldi	r18, 0x3F	; 63
     8c2:	8d e0       	ldi	r24, 0x0D	; 13
     8c4:	93 e0       	ldi	r25, 0x03	; 3
     8c6:	21 50       	subi	r18, 0x01	; 1
     8c8:	80 40       	sbci	r24, 0x00	; 0
     8ca:	90 40       	sbci	r25, 0x00	; 0
     8cc:	e1 f7       	brne	.-8      	; 0x8c6 <initOLE+0x2a>
     8ce:	00 c0       	rjmp	.+0      	; 0x8d0 <initOLE+0x34>
     8d0:	00 00       	nop
	_delay_ms(1000);
	OLED_RES_high();
     8d2:	83 b1       	in	r24, 0x03	; 3
     8d4:	80 61       	ori	r24, 0x10	; 16
     8d6:	83 b9       	out	0x03, r24	; 3
     8d8:	87 ea       	ldi	r24, 0xA7	; 167
     8da:	91 e6       	ldi	r25, 0x61	; 97
     8dc:	01 97       	sbiw	r24, 0x01	; 1
     8de:	f1 f7       	brne	.-4      	; 0x8dc <initOLE+0x40>
     8e0:	00 c0       	rjmp	.+0      	; 0x8e2 <initOLE+0x46>
     8e2:	00 00       	nop
	_delay_ms(100);
	
	// Print String on the display
	u8x8_init_atmega88();
     8e4:	5b c2       	rjmp	.+1206   	; 0xd9c <u8x8_init_atmega88>
     8e6:	08 95       	ret

000008e8 <__vector_8>:

volatile uint8_t gFalg = 0x00;
volatile uint32_t gCounter = 0x00;

ISR(INT7_vect)
{
     8e8:	1f 92       	push	r1
     8ea:	0f 92       	push	r0
     8ec:	0f b6       	in	r0, 0x3f	; 63
     8ee:	0f 92       	push	r0
     8f0:	11 24       	eor	r1, r1
     8f2:	0b b6       	in	r0, 0x3b	; 59
     8f4:	0f 92       	push	r0
     8f6:	8f 93       	push	r24
     8f8:	9f 93       	push	r25
     8fa:	af 93       	push	r26
     8fc:	bf 93       	push	r27
     8fe:	ef 93       	push	r30
     900:	ff 93       	push	r31
	gFalg++;
     902:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <gFalg>
     906:	8f 5f       	subi	r24, 0xFF	; 255
     908:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <gFalg>
	
	// Check if it's the rising edge
	if (gFalg == 1)
     90c:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <gFalg>
     910:	81 30       	cpi	r24, 0x01	; 1
     912:	a1 f4       	brne	.+40     	; 0x93c <__vector_8+0x54>
	{
		// Start Timer 3 by setting the prescaler to 1 (CS30 = 1)
		SET_BIT(TCCR3B, CS30);
     914:	ea e8       	ldi	r30, 0x8A	; 138
     916:	f0 e0       	ldi	r31, 0x00	; 0
     918:	80 81       	ld	r24, Z
     91a:	81 60       	ori	r24, 0x01	; 1
     91c:	80 83       	st	Z, r24
		// Reset Counter
		gCounter = 0;
     91e:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__data_end>
     922:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <__data_end+0x1>
     926:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <__data_end+0x2>
     92a:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <__data_end+0x3>
		// Set Interrupt for the falling edge
		CLEAR_BIT(EICRB, ISC70);
     92e:	8a b7       	in	r24, 0x3a	; 58
     930:	8f 7b       	andi	r24, 0xBF	; 191
     932:	8a bf       	out	0x3a, r24	; 58
		SET_BIT(EICRB, ISC71);
     934:	8a b7       	in	r24, 0x3a	; 58
     936:	80 68       	ori	r24, 0x80	; 128
     938:	8a bf       	out	0x3a, r24	; 58
     93a:	1d c0       	rjmp	.+58     	; 0x976 <__vector_8+0x8e>
	}
	// Falling edge
	else
	{
		// Stop Timer 3 by setting CS30 to ZERO
		CLEAR_BIT(TCCR3B, CS30);
     93c:	ea e8       	ldi	r30, 0x8A	; 138
     93e:	f0 e0       	ldi	r31, 0x00	; 0
     940:	80 81       	ld	r24, Z
     942:	8e 7f       	andi	r24, 0xFE	; 254
     944:	80 83       	st	Z, r24
		// Get the counted value, Reset counter and flag to Zero.
		gCounter = TCNT3;
     946:	e8 e8       	ldi	r30, 0x88	; 136
     948:	f0 e0       	ldi	r31, 0x00	; 0
     94a:	80 81       	ld	r24, Z
     94c:	91 81       	ldd	r25, Z+1	; 0x01
     94e:	a0 e0       	ldi	r26, 0x00	; 0
     950:	b0 e0       	ldi	r27, 0x00	; 0
     952:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <__data_end>
     956:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <__data_end+0x1>
     95a:	a0 93 a2 01 	sts	0x01A2, r26	; 0x8001a2 <__data_end+0x2>
     95e:	b0 93 a3 01 	sts	0x01A3, r27	; 0x8001a3 <__data_end+0x3>
		gFalg = 0;
     962:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <gFalg>
		TCNT3 = 0;
     966:	11 82       	std	Z+1, r1	; 0x01
     968:	10 82       	st	Z, r1
		// Set Interrupt for the rising edge.
		SET_BIT(EICRB, ISC70);
     96a:	8a b7       	in	r24, 0x3a	; 58
     96c:	80 64       	ori	r24, 0x40	; 64
     96e:	8a bf       	out	0x3a, r24	; 58
		SET_BIT(EICRB, ISC71);
     970:	8a b7       	in	r24, 0x3a	; 58
     972:	80 68       	ori	r24, 0x80	; 128
     974:	8a bf       	out	0x3a, r24	; 58
	}
}
     976:	ff 91       	pop	r31
     978:	ef 91       	pop	r30
     97a:	bf 91       	pop	r27
     97c:	af 91       	pop	r26
     97e:	9f 91       	pop	r25
     980:	8f 91       	pop	r24
     982:	0f 90       	pop	r0
     984:	0b be       	out	0x3b, r0	; 59
     986:	0f 90       	pop	r0
     988:	0f be       	out	0x3f, r0	; 63
     98a:	0f 90       	pop	r0
     98c:	1f 90       	pop	r1
     98e:	18 95       	reti

00000990 <initHC>:

void initHC()
{
	// Configure Timer 3
	// Use the clock frequency of the uC 1MHz, but for now, the timer must be stopped.
	CLEAR_BIT(TCCR3B, CS30);
     990:	ea e8       	ldi	r30, 0x8A	; 138
     992:	f0 e0       	ldi	r31, 0x00	; 0
     994:	80 81       	ld	r24, Z
     996:	8e 7f       	andi	r24, 0xFE	; 254
     998:	80 83       	st	Z, r24
	CLEAR_BIT(TCCR3B, CS31);
     99a:	80 81       	ld	r24, Z
     99c:	8d 7f       	andi	r24, 0xFD	; 253
     99e:	80 83       	st	Z, r24
	CLEAR_BIT(TCCR3B, CS32);
     9a0:	80 81       	ld	r24, Z
     9a2:	8b 7f       	andi	r24, 0xFB	; 251
     9a4:	80 83       	st	Z, r24

	// Configure the Ultrasonic Pins
	// Configure PE7 as input, enable Pull-up resistor, and PE3 as output.
	CLEAR_BIT(DDRE, ECHO_PIN);
     9a6:	82 b1       	in	r24, 0x02	; 2
     9a8:	8f 77       	andi	r24, 0x7F	; 127
     9aa:	82 b9       	out	0x02, r24	; 2
	SET_BIT(PORTE, ECHO_PIN);
     9ac:	83 b1       	in	r24, 0x03	; 3
     9ae:	80 68       	ori	r24, 0x80	; 128
     9b0:	83 b9       	out	0x03, r24	; 3
	SET_BIT(DDRE, TRIG_PIN);
     9b2:	82 b1       	in	r24, 0x02	; 2
     9b4:	88 60       	ori	r24, 0x08	; 8
     9b6:	82 b9       	out	0x02, r24	; 2

	// Configure the external interrupt on the input Echo Pin PE7 (INT7) -> Enable INT7
	SET_BIT(EIMSK, INT7);
     9b8:	89 b7       	in	r24, 0x39	; 57
     9ba:	80 68       	ori	r24, 0x80	; 128
     9bc:	89 bf       	out	0x39, r24	; 57

	// Set sense to the Rising edge:
	SET_BIT(EICRB, ISC70);
     9be:	8a b7       	in	r24, 0x3a	; 58
     9c0:	80 64       	ori	r24, 0x40	; 64
     9c2:	8a bf       	out	0x3a, r24	; 58
	SET_BIT(EICRB, ISC71);
     9c4:	8a b7       	in	r24, 0x3a	; 58
     9c6:	80 68       	ori	r24, 0x80	; 128
     9c8:	8a bf       	out	0x3a, r24	; 58

	// Enable global interrupt
	sei();
     9ca:	78 94       	sei
     9cc:	08 95       	ret

000009ce <initservo>:
#ifndef TOUCHSENSOR_H_
#define TOUCHSENSOR_H_
#define TOUCH_SENSOR_PIN PB0

void initservo() {
	DDRB |= (1 << PORTB5) | (1 << PORTB6); // Set PB5 and PB6 as outputs for Timer 1
     9ce:	87 b3       	in	r24, 0x17	; 23
     9d0:	80 66       	ori	r24, 0x60	; 96
     9d2:	87 bb       	out	0x17, r24	; 23
	
	// set waveform generation mode Timer 1
	TCCR1A |= (1 << WGM11);
     9d4:	8f b5       	in	r24, 0x2f	; 47
     9d6:	82 60       	ori	r24, 0x02	; 2
     9d8:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1 << WGM12) | (1 << WGM13);
     9da:	8e b5       	in	r24, 0x2e	; 46
     9dc:	88 61       	ori	r24, 0x18	; 24
     9de:	8e bd       	out	0x2e, r24	; 46

	

	// set the top value
	ICR1 = 19999; // Timer 1
     9e0:	8f e1       	ldi	r24, 0x1F	; 31
     9e2:	9e e4       	ldi	r25, 0x4E	; 78
     9e4:	97 bd       	out	0x27, r25	; 39
     9e6:	86 bd       	out	0x26, r24	; 38


	// set the pre-scaler which is no prescaling:
	TCCR1B |= (1 << CS10); // Timer 1
     9e8:	8e b5       	in	r24, 0x2e	; 46
     9ea:	81 60       	ori	r24, 0x01	; 1
     9ec:	8e bd       	out	0x2e, r24	; 46
	


	// set Compare Output Mode Timer 1
	TCCR1A |= (1 << COM1A1) | (1 << COM1A0);
     9ee:	8f b5       	in	r24, 0x2f	; 47
     9f0:	80 6c       	ori	r24, 0xC0	; 192
     9f2:	8f bd       	out	0x2f, r24	; 47
	TCCR1A |= (1 << COM1B1) | (1 << COM1B0); // Set COM1B for PB6
     9f4:	8f b5       	in	r24, 0x2f	; 47
     9f6:	80 63       	ori	r24, 0x30	; 48
     9f8:	8f bd       	out	0x2f, r24	; 47


	// set the current servo position (1.5ms pulse, middle position)
	OCR1A = ICR1 - 1500; // Timer 1, PB5
     9fa:	86 b5       	in	r24, 0x26	; 38
     9fc:	97 b5       	in	r25, 0x27	; 39
     9fe:	8c 5d       	subi	r24, 0xDC	; 220
     a00:	95 40       	sbci	r25, 0x05	; 5
     a02:	9b bd       	out	0x2b, r25	; 43
     a04:	8a bd       	out	0x2a, r24	; 42
	OCR1B = ICR1 - 1500; // Timer 1, PB6
     a06:	86 b5       	in	r24, 0x26	; 38
     a08:	97 b5       	in	r25, 0x27	; 39
     a0a:	8c 5d       	subi	r24, 0xDC	; 220
     a0c:	95 40       	sbci	r25, 0x05	; 5
     a0e:	99 bd       	out	0x29, r25	; 41
     a10:	88 bd       	out	0x28, r24	; 40
     a12:	08 95       	ret

00000a14 <ADC_Init>:
#ifndef LDR_H_
#define LDR_H_

void ADC_Init() {
	
	ADMUX = (1 << REFS0); // Reference voltage at AVCC
     a14:	80 e4       	ldi	r24, 0x40	; 64
     a16:	87 b9       	out	0x07, r24	; 7
	ADCSRA = (1 << ADEN) |  (1 << ADPS1) | (1 << ADPS0| 1 << ADSC); // Enable ADC, set prescaler
     a18:	83 ec       	ldi	r24, 0xC3	; 195
     a1a:	86 b9       	out	0x06, r24	; 6
	while (ADCSRA & (1 << ADSC)); // Wait for conversion to finish
     a1c:	36 99       	sbic	0x06, 6	; 6
     a1e:	fe cf       	rjmp	.-4      	; 0xa1c <ADC_Init+0x8>
	ADCSRA |= (1 << ADIF); 
     a20:	86 b1       	in	r24, 0x06	; 6
     a22:	80 61       	ori	r24, 0x10	; 16
     a24:	86 b9       	out	0x06, r24	; 6
     a26:	08 95       	ret

00000a28 <ADC_Read>:
}

// Function to read ADC value
uint16_t ADC_Read(uint8_t u8ADC_channel) {
	
	ADCSRA |= (1 << ADSC); // Start ADC conversion
     a28:	86 b1       	in	r24, 0x06	; 6
     a2a:	80 64       	ori	r24, 0x40	; 64
     a2c:	86 b9       	out	0x06, r24	; 6
	while (ADCSRA & (1 << ADSC)); 
     a2e:	36 99       	sbic	0x06, 6	; 6
     a30:	fe cf       	rjmp	.-4      	; 0xa2e <ADC_Read+0x6>
	ADCSRA |= (1 << ADIF);
     a32:	86 b1       	in	r24, 0x06	; 6
     a34:	80 61       	ori	r24, 0x10	; 16
     a36:	86 b9       	out	0x06, r24	; 6
	return ADC;
     a38:	84 b1       	in	r24, 0x04	; 4
     a3a:	95 b1       	in	r25, 0x05	; 5
}
     a3c:	08 95       	ret

00000a3e <main>:





int main(void) {
     a3e:	cf 93       	push	r28
     a40:	df 93       	push	r29
     a42:	cd b7       	in	r28, 0x3d	; 61
     a44:	de b7       	in	r29, 0x3e	; 62
     a46:	66 97       	sbiw	r28, 0x16	; 22
     a48:	0f b6       	in	r0, 0x3f	; 63
     a4a:	f8 94       	cli
     a4c:	de bf       	out	0x3e, r29	; 62
     a4e:	0f be       	out	0x3f, r0	; 63
     a50:	cd bf       	out	0x3d, r28	; 61
	DDRC |= (1 << PORTC2);
     a52:	84 b3       	in	r24, 0x14	; 20
     a54:	84 60       	ori	r24, 0x04	; 4
     a56:	84 bb       	out	0x14, r24	; 20
	 ADC_Init();
     a58:	dd df       	rcall	.-70     	; 0xa14 <ADC_Init>
	initservo();
     a5a:	b9 df       	rcall	.-142    	; 0x9ce <initservo>
	initHC();
     a5c:	99 df       	rcall	.-206    	; 0x990 <initHC>
	initOLE();
     a5e:	1e df       	rcall	.-452    	; 0x89c <initOLE>
     a60:	80 e0       	ldi	r24, 0x00	; 0
   
   

	while (1) {
 uint16_t adcValue = ADC_Read(0); // Read ADC value from the LDR connected to PortF0
     a62:	e2 df       	rcall	.-60     	; 0xa28 <ADC_Read>
     a64:	7c 01       	movw	r14, r24
     a66:	8e 01       	movw	r16, r28
     a68:	0f 5f       	subi	r16, 0xFF	; 255
 volatile int u32Range;
 char rangeStr[20] = {'0'};
     a6a:	1f 4f       	sbci	r17, 0xFF	; 255
     a6c:	84 e1       	ldi	r24, 0x14	; 20
     a6e:	f8 01       	movw	r30, r16
     a70:	11 92       	st	Z+, r1
     a72:	8a 95       	dec	r24
     a74:	e9 f7       	brne	.-6      	; 0xa70 <main+0x32>
     a76:	80 e3       	ldi	r24, 0x30	; 48
     a78:	89 83       	std	Y+1, r24	; 0x01
     a7a:	83 b1       	in	r24, 0x03	; 3
     a7c:	88 60       	ori	r24, 0x08	; 8

 SET_BIT(PORTE, TRIG_PIN);
     a7e:	83 b9       	out	0x03, r24	; 3
     a80:	85 ea       	ldi	r24, 0xA5	; 165
     a82:	9e e0       	ldi	r25, 0x0E	; 14
     a84:	01 97       	sbiw	r24, 0x01	; 1
     a86:	f1 f7       	brne	.-4      	; 0xa84 <main+0x46>
     a88:	00 c0       	rjmp	.+0      	; 0xa8a <main+0x4c>
     a8a:	00 00       	nop
     a8c:	83 b1       	in	r24, 0x03	; 3
     a8e:	87 7f       	andi	r24, 0xF7	; 247
 _delay_ms(15);
 CLEAR_BIT(PORTE, TRIG_PIN);
     a90:	83 b9       	out	0x03, r24	; 3
     a92:	60 91 a0 01 	lds	r22, 0x01A0	; 0x8001a0 <__data_end>
 

 u32Range = (int)(0.017 * gCounter);
     a96:	70 91 a1 01 	lds	r23, 0x01A1	; 0x8001a1 <__data_end+0x1>
     a9a:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__data_end+0x2>
     a9e:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <__data_end+0x3>
     aa2:	91 d4       	rcall	.+2338   	; 0x13c6 <__floatunsisf>
     aa4:	26 e9       	ldi	r18, 0x96	; 150
     aa6:	33 e4       	ldi	r19, 0x43	; 67
     aa8:	4b e8       	ldi	r20, 0x8B	; 139
     aaa:	5c e3       	ldi	r21, 0x3C	; 60
     aac:	f2 d4       	rcall	.+2532   	; 0x1492 <__mulsf3>
     aae:	5a d4       	rcall	.+2228   	; 0x1364 <__fixsfsi>
     ab0:	7e 8b       	std	Y+22, r23	; 0x16
     ab2:	6d 8b       	std	Y+21, r22	; 0x15
     ab4:	8d 89       	ldd	r24, Y+21	; 0x15
     ab6:	9e 89       	ldd	r25, Y+22	; 0x16
 sprintf(rangeStr,"%dcm   ", u32Range);
     ab8:	9f 93       	push	r25
     aba:	8f 93       	push	r24
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	91 e0       	ldi	r25, 0x01	; 1
     ac0:	9f 93       	push	r25
     ac2:	8f 93       	push	r24
     ac4:	1f 93       	push	r17
     ac6:	0f 93       	push	r16
     ac8:	78 d5       	rcall	.+2800   	; 0x15ba <sprintf>
     aca:	28 e0       	ldi	r18, 0x08	; 8
 u8x8_DrawString_at(1, 1, "City Parking");
     acc:	31 e0       	ldi	r19, 0x01	; 1
     ace:	41 e0       	ldi	r20, 0x01	; 1
     ad0:	61 e0       	ldi	r22, 0x01	; 1
     ad2:	81 e0       	ldi	r24, 0x01	; 1
     ad4:	92 e0       	ldi	r25, 0x02	; 2
     ad6:	15 d1       	rcall	.+554    	; 0xd02 <u8x8_DrawString>
     ad8:	8d 89       	ldd	r24, Y+21	; 0x15
     ada:	9e 89       	ldd	r25, Y+22	; 0x16
 

if (u32Range < 10)
     adc:	0f 90       	pop	r0
     ade:	0f 90       	pop	r0
     ae0:	0f 90       	pop	r0
     ae2:	0f 90       	pop	r0
     ae4:	0f 90       	pop	r0
     ae6:	0f 90       	pop	r0
     ae8:	0a 97       	sbiw	r24, 0x0a	; 10
     aea:	74 f4       	brge	.+28     	; 0xb08 <main+0xca>
     aec:	86 b5       	in	r24, 0x26	; 38
     aee:	97 b5       	in	r25, 0x27	; 39
{

	OCR1A = ICR1 - 500; // 90 degree
     af0:	84 5f       	subi	r24, 0xF4	; 244
     af2:	91 40       	sbci	r25, 0x01	; 1
     af4:	9b bd       	out	0x2b, r25	; 43
     af6:	8a bd       	out	0x2a, r24	; 42
     af8:	21 e3       	ldi	r18, 0x31	; 49
	 u8x8_DrawString_at(1, 2, "Gate Open");
     afa:	31 e0       	ldi	r19, 0x01	; 1
     afc:	42 e0       	ldi	r20, 0x02	; 2
     afe:	61 e0       	ldi	r22, 0x01	; 1
     b00:	81 e0       	ldi	r24, 0x01	; 1
     b02:	92 e0       	ldi	r25, 0x02	; 2
     b04:	fe d0       	rcall	.+508    	; 0xd02 <u8x8_DrawString>
     b06:	0d c0       	rjmp	.+26     	; 0xb22 <main+0xe4>
     b08:	86 b5       	in	r24, 0x26	; 38
     b0a:	97 b5       	in	r25, 0x27	; 39
	
	
}
else
{
	OCR1A = ICR1 - 1500; // 0 degree
     b0c:	8c 5d       	subi	r24, 0xDC	; 220
     b0e:	95 40       	sbci	r25, 0x05	; 5
     b10:	9b bd       	out	0x2b, r25	; 43
     b12:	8a bd       	out	0x2a, r24	; 42
     b14:	25 e1       	ldi	r18, 0x15	; 21
	u8x8_DrawString_at(1, 2, "Gate Closed");
     b16:	31 e0       	ldi	r19, 0x01	; 1
     b18:	42 e0       	ldi	r20, 0x02	; 2
     b1a:	61 e0       	ldi	r22, 0x01	; 1
     b1c:	81 e0       	ldi	r24, 0x01	; 1
     b1e:	92 e0       	ldi	r25, 0x02	; 2
     b20:	f0 d0       	rcall	.+480    	; 0xd02 <u8x8_DrawString>
     b22:	94 ef       	ldi	r25, 0xF4	; 244
     b24:	e9 16       	cp	r14, r25
	
	
}
if (adcValue < 500) {
     b26:	91 e0       	ldi	r25, 0x01	; 1
     b28:	f9 06       	cpc	r15, r25
     b2a:	20 f4       	brcc	.+8      	; 0xb34 <main+0xf6>
     b2c:	85 b3       	in	r24, 0x15	; 21
     b2e:	84 60       	ori	r24, 0x04	; 4
	PORTC |= (1 << PC2); // Turn on LED when it's dark
     b30:	85 bb       	out	0x15, r24	; 21
     b32:	03 c0       	rjmp	.+6      	; 0xb3a <main+0xfc>
     b34:	85 b3       	in	r24, 0x15	; 21
     b36:	8b 7f       	andi	r24, 0xFB	; 251
	} else {
	PORTC &= ~(1 << PC2); // Turn off LED when it's light
     b38:	85 bb       	out	0x15, r24	; 21
     b3a:	b0 99       	sbic	0x16, 0	; 22
     b3c:	0e c0       	rjmp	.+28     	; 0xb5a <main+0x11c>
	
}
 if (!(PINB & (1 << TOUCH_SENSOR_PIN))) {
     b3e:	86 b5       	in	r24, 0x26	; 38
     b40:	97 b5       	in	r25, 0x27	; 39
	 // Touch sensor is being touched
	 OCR1B = ICR1 - 1500; // 90 degree
     b42:	8c 5d       	subi	r24, 0xDC	; 220
     b44:	95 40       	sbci	r25, 0x05	; 5
     b46:	99 bd       	out	0x29, r25	; 41
     b48:	88 bd       	out	0x28, r24	; 40
     b4a:	21 e2       	ldi	r18, 0x21	; 33
	u8x8_DrawString_at(1, 3, "E Gate closed");
     b4c:	31 e0       	ldi	r19, 0x01	; 1
     b4e:	43 e0       	ldi	r20, 0x03	; 3
     b50:	61 e0       	ldi	r22, 0x01	; 1
     b52:	81 e0       	ldi	r24, 0x01	; 1
     b54:	92 e0       	ldi	r25, 0x02	; 2
     b56:	d5 d0       	rcall	.+426    	; 0xd02 <u8x8_DrawString>
     b58:	83 cf       	rjmp	.-250    	; 0xa60 <main+0x22>
     b5a:	86 b5       	in	r24, 0x26	; 38
	 
 }
 else {
	 // let the servo go back and forth from 2ms to 1ms
	 
	 OCR1B = ICR1 - 500; // 0 degree, Timer 1
     b5c:	97 b5       	in	r25, 0x27	; 39
     b5e:	84 5f       	subi	r24, 0xF4	; 244
     b60:	91 40       	sbci	r25, 0x01	; 1
     b62:	99 bd       	out	0x29, r25	; 41
     b64:	88 bd       	out	0x28, r24	; 40
     b66:	2f e2       	ldi	r18, 0x2F	; 47
	  u8x8_DrawString_at(1, 3, "E Gate Open");
     b68:	31 e0       	ldi	r19, 0x01	; 1
     b6a:	43 e0       	ldi	r20, 0x03	; 3
     b6c:	61 e0       	ldi	r22, 0x01	; 1
     b6e:	81 e0       	ldi	r24, 0x01	; 1
     b70:	92 e0       	ldi	r25, 0x02	; 2
     b72:	c7 d0       	rcall	.+398    	; 0xd02 <u8x8_DrawString>
     b74:	ef eb       	ldi	r30, 0xBF	; 191
     b76:	f7 e2       	ldi	r31, 0x27	; 39
     b78:	29 e0       	ldi	r18, 0x09	; 9
     b7a:	e1 50       	subi	r30, 0x01	; 1
     b7c:	f0 40       	sbci	r31, 0x00	; 0
     b7e:	20 40       	sbci	r18, 0x00	; 0
     b80:	e1 f7       	brne	.-8      	; 0xb7a <main+0x13c>
     b82:	00 c0       	rjmp	.+0      	; 0xb84 <main+0x146>
     b84:	00 00       	nop
     b86:	6c cf       	rjmp	.-296    	; 0xa60 <main+0x22>

00000b88 <u8x8_get_glyph_data>:
     b88:	cf 93       	push	r28
	 
 }
      


}
     b8a:	df 93       	push	r29
      x+=2;
      cnt++;
    }
  }
  return cnt;
}
     b8c:	dc 01       	movw	r26, r24
     b8e:	1c 96       	adiw	r26, 0x0c	; 12
     b90:	ed 91       	ld	r30, X+
     b92:	fc 91       	ld	r31, X
     b94:	1d 97       	sbiw	r26, 0x0d	; 13
     b96:	84 91       	lpm	r24, Z
     b98:	31 96       	adiw	r30, 0x01	; 1
     b9a:	e4 91       	lpm	r30, Z
     b9c:	68 17       	cp	r22, r24
     b9e:	38 f1       	brcs	.+78     	; 0xbee <u8x8_get_glyph_data+0x66>
     ba0:	e6 17       	cp	r30, r22
     ba2:	38 f1       	brcs	.+78     	; 0xbf2 <u8x8_get_glyph_data+0x6a>
     ba4:	26 2f       	mov	r18, r22
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	28 1b       	sub	r18, r24
     baa:	31 09       	sbc	r19, r1
     bac:	22 0f       	add	r18, r18
     bae:	33 1f       	adc	r19, r19
     bb0:	22 0f       	add	r18, r18
     bb2:	33 1f       	adc	r19, r19
     bb4:	22 0f       	add	r18, r18
     bb6:	33 1f       	adc	r19, r19
     bb8:	2e 5f       	subi	r18, 0xFE	; 254
     bba:	3f 4f       	sbci	r19, 0xFF	; 255
     bbc:	80 e0       	ldi	r24, 0x00	; 0
     bbe:	0e c0       	rjmp	.+28     	; 0xbdc <u8x8_get_glyph_data+0x54>
     bc0:	ea 01       	movw	r28, r20
     bc2:	c8 0f       	add	r28, r24
     bc4:	d1 1d       	adc	r29, r1
     bc6:	1c 96       	adiw	r26, 0x0c	; 12
     bc8:	ed 91       	ld	r30, X+
     bca:	fc 91       	ld	r31, X
     bcc:	1d 97       	sbiw	r26, 0x0d	; 13
     bce:	e2 0f       	add	r30, r18
     bd0:	f3 1f       	adc	r31, r19
     bd2:	e4 91       	lpm	r30, Z
     bd4:	e8 83       	st	Y, r30
     bd6:	2f 5f       	subi	r18, 0xFF	; 255
     bd8:	3f 4f       	sbci	r19, 0xFF	; 255
     bda:	8f 5f       	subi	r24, 0xFF	; 255
     bdc:	88 30       	cpi	r24, 0x08	; 8
     bde:	80 f3       	brcs	.-32     	; 0xbc0 <u8x8_get_glyph_data+0x38>
     be0:	0b c0       	rjmp	.+22     	; 0xbf8 <u8x8_get_glyph_data+0x70>
     be2:	fa 01       	movw	r30, r20
     be4:	e9 0f       	add	r30, r25
     be6:	f1 1d       	adc	r31, r1
     be8:	10 82       	st	Z, r1
     bea:	9f 5f       	subi	r25, 0xFF	; 255
     bec:	03 c0       	rjmp	.+6      	; 0xbf4 <u8x8_get_glyph_data+0x6c>
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	01 c0       	rjmp	.+2      	; 0xbf4 <u8x8_get_glyph_data+0x6c>
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	98 30       	cpi	r25, 0x08	; 8
     bf6:	a8 f3       	brcs	.-22     	; 0xbe2 <u8x8_get_glyph_data+0x5a>
     bf8:	51 96       	adiw	r26, 0x11	; 17
     bfa:	8c 91       	ld	r24, X
     bfc:	81 11       	cpse	r24, r1
     bfe:	09 c0       	rjmp	.+18     	; 0xc12 <u8x8_get_glyph_data+0x8a>
     c00:	0b c0       	rjmp	.+22     	; 0xc18 <u8x8_get_glyph_data+0x90>
     c02:	fa 01       	movw	r30, r20
     c04:	e8 0f       	add	r30, r24
     c06:	f1 1d       	adc	r31, r1
     c08:	90 81       	ld	r25, Z
     c0a:	90 95       	com	r25
     c0c:	90 83       	st	Z, r25
     c0e:	8f 5f       	subi	r24, 0xFF	; 255
     c10:	01 c0       	rjmp	.+2      	; 0xc14 <u8x8_get_glyph_data+0x8c>
     c12:	80 e0       	ldi	r24, 0x00	; 0
     c14:	88 30       	cpi	r24, 0x08	; 8
     c16:	a8 f3       	brcs	.-22     	; 0xc02 <u8x8_get_glyph_data+0x7a>
     c18:	df 91       	pop	r29
     c1a:	cf 91       	pop	r28
     c1c:	08 95       	ret

00000c1e <u8x8_ascii_next>:
     c1e:	66 23       	and	r22, r22
     c20:	29 f0       	breq	.+10     	; 0xc2c <u8x8_ascii_next+0xe>
     c22:	6a 30       	cpi	r22, 0x0A	; 10
     c24:	31 f0       	breq	.+12     	; 0xc32 <u8x8_ascii_next+0x14>
     c26:	86 2f       	mov	r24, r22
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	08 95       	ret
     c2c:	8f ef       	ldi	r24, 0xFF	; 255
     c2e:	9f ef       	ldi	r25, 0xFF	; 255
     c30:	08 95       	ret
     c32:	8f ef       	ldi	r24, 0xFF	; 255
     c34:	9f ef       	ldi	r25, 0xFF	; 255
     c36:	08 95       	ret

00000c38 <u8x8_SetFont>:
     c38:	fc 01       	movw	r30, r24
     c3a:	75 87       	std	Z+13, r23	; 0x0d
     c3c:	64 87       	std	Z+12, r22	; 0x0c
     c3e:	08 95       	ret

00000c40 <u8x8_DrawGlyph>:
     c40:	cf 92       	push	r12
     c42:	df 92       	push	r13
     c44:	ef 92       	push	r14
     c46:	ff 92       	push	r15
     c48:	0f 93       	push	r16
     c4a:	1f 93       	push	r17
     c4c:	cf 93       	push	r28
     c4e:	df 93       	push	r29
     c50:	cd b7       	in	r28, 0x3d	; 61
     c52:	de b7       	in	r29, 0x3e	; 62
     c54:	28 97       	sbiw	r28, 0x08	; 8
     c56:	0f b6       	in	r0, 0x3f	; 63
     c58:	f8 94       	cli
     c5a:	de bf       	out	0x3e, r29	; 62
     c5c:	0f be       	out	0x3f, r0	; 63
     c5e:	cd bf       	out	0x3d, r28	; 61
     c60:	7c 01       	movw	r14, r24
     c62:	d6 2e       	mov	r13, r22
     c64:	c4 2e       	mov	r12, r20
     c66:	ae 01       	movw	r20, r28
     c68:	4f 5f       	subi	r20, 0xFF	; 255
     c6a:	5f 4f       	sbci	r21, 0xFF	; 255
     c6c:	62 2f       	mov	r22, r18
     c6e:	8c df       	rcall	.-232    	; 0xb88 <u8x8_get_glyph_data>
     c70:	8e 01       	movw	r16, r28
     c72:	0f 5f       	subi	r16, 0xFF	; 255
     c74:	1f 4f       	sbci	r17, 0xFF	; 255
     c76:	21 e0       	ldi	r18, 0x01	; 1
     c78:	4c 2d       	mov	r20, r12
     c7a:	6d 2d       	mov	r22, r13
     c7c:	c7 01       	movw	r24, r14
     c7e:	ff d1       	rcall	.+1022   	; 0x107e <u8x8_DrawTile>
     c80:	28 96       	adiw	r28, 0x08	; 8
     c82:	0f b6       	in	r0, 0x3f	; 63
     c84:	f8 94       	cli
     c86:	de bf       	out	0x3e, r29	; 62
     c88:	0f be       	out	0x3f, r0	; 63
     c8a:	cd bf       	out	0x3d, r28	; 61
     c8c:	df 91       	pop	r29
     c8e:	cf 91       	pop	r28
     c90:	1f 91       	pop	r17
     c92:	0f 91       	pop	r16
     c94:	ff 90       	pop	r15
     c96:	ef 90       	pop	r14
     c98:	df 90       	pop	r13
     c9a:	cf 90       	pop	r12
     c9c:	08 95       	ret

00000c9e <u8x8_utf8_init>:
     c9e:	fc 01       	movw	r30, r24
     ca0:	15 8a       	std	Z+21, r1	; 0x15
     ca2:	08 95       	ret

00000ca4 <u8x8_draw_string>:
     ca4:	df 92       	push	r13
     ca6:	ef 92       	push	r14
     ca8:	ff 92       	push	r15
     caa:	0f 93       	push	r16
     cac:	1f 93       	push	r17
     cae:	cf 93       	push	r28
     cb0:	df 93       	push	r29
     cb2:	8c 01       	movw	r16, r24
     cb4:	f6 2e       	mov	r15, r22
     cb6:	d4 2e       	mov	r13, r20
     cb8:	e9 01       	movw	r28, r18
     cba:	f1 df       	rcall	.-30     	; 0xc9e <u8x8_utf8_init>
     cbc:	e1 2c       	mov	r14, r1
     cbe:	d8 01       	movw	r26, r16
     cc0:	12 96       	adiw	r26, 0x02	; 2
     cc2:	ed 91       	ld	r30, X+
     cc4:	fc 91       	ld	r31, X
     cc6:	13 97       	sbiw	r26, 0x03	; 3
     cc8:	68 81       	ld	r22, Y
     cca:	c8 01       	movw	r24, r16
     ccc:	09 95       	icall
     cce:	8f 3f       	cpi	r24, 0xFF	; 255
     cd0:	bf ef       	ldi	r27, 0xFF	; 255
     cd2:	9b 07       	cpc	r25, r27
     cd4:	69 f0       	breq	.+26     	; 0xcf0 <u8x8_draw_string+0x4c>
     cd6:	21 96       	adiw	r28, 0x01	; 1
     cd8:	8e 3f       	cpi	r24, 0xFE	; 254
     cda:	2f ef       	ldi	r18, 0xFF	; 255
     cdc:	92 07       	cpc	r25, r18
     cde:	79 f3       	breq	.-34     	; 0xcbe <u8x8_draw_string+0x1a>
     ce0:	28 2f       	mov	r18, r24
     ce2:	4d 2d       	mov	r20, r13
     ce4:	6f 2d       	mov	r22, r15
     ce6:	c8 01       	movw	r24, r16
     ce8:	ab df       	rcall	.-170    	; 0xc40 <u8x8_DrawGlyph>
     cea:	f3 94       	inc	r15
     cec:	e3 94       	inc	r14
     cee:	e7 cf       	rjmp	.-50     	; 0xcbe <u8x8_draw_string+0x1a>
     cf0:	8e 2d       	mov	r24, r14
     cf2:	df 91       	pop	r29
     cf4:	cf 91       	pop	r28
     cf6:	1f 91       	pop	r17
     cf8:	0f 91       	pop	r16
     cfa:	ff 90       	pop	r15
     cfc:	ef 90       	pop	r14
     cfe:	df 90       	pop	r13
     d00:	08 95       	ret

00000d02 <u8x8_DrawString>:
}


uint8_t u8x8_DrawString(u8x8_t *u8x8, uint8_t x, uint8_t y, const char *s)
{
  u8x8->next_cb = u8x8_ascii_next;
     d02:	ef e0       	ldi	r30, 0x0F	; 15
     d04:	f6 e0       	ldi	r31, 0x06	; 6
     d06:	dc 01       	movw	r26, r24
     d08:	13 96       	adiw	r26, 0x03	; 3
     d0a:	fc 93       	st	X, r31
     d0c:	ee 93       	st	-X, r30
     d0e:	12 97       	sbiw	r26, 0x02	; 2
  return u8x8_draw_string(u8x8, x, y, s);
     d10:	c9 cf       	rjmp	.-110    	; 0xca4 <u8x8_draw_string>
}
     d12:	08 95       	ret

00000d14 <u8x8_gpio_and_delay_atmega88>:
	return 1;
}

uint8_t u8x8_gpio_and_delay_atmega88(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
	switch(msg)
     d14:	46 2f       	mov	r20, r22
     d16:	50 e0       	ldi	r21, 0x00	; 0
     d18:	fa 01       	movw	r30, r20
     d1a:	b8 97       	sbiw	r30, 0x28	; 40
     d1c:	ec 32       	cpi	r30, 0x2C	; 44
     d1e:	f1 05       	cpc	r31, r1
     d20:	78 f4       	brcc	.+30     	; 0xd40 <u8x8_gpio_and_delay_atmega88+0x2c>
     d22:	ea 5b       	subi	r30, 0xBA	; 186
     d24:	ff 4f       	sbci	r31, 0xFF	; 255
     d26:	40 c4       	rjmp	.+2176   	; 0x15a8 <__tablejump2__>
		case U8X8_MSG_GPIO_I2C_CLOCK:       // arg_int=0: Output low at I2C clock pin
		break;                            // arg_int=1: Input dir with pullup high for I2C clock pin
		case U8X8_MSG_GPIO_I2C_DATA:            // arg_int=0: Output low at I2C data pin
		break;                            // arg_int=1: Input dir with pullup high for I2C data pin
		case U8X8_MSG_GPIO_MENU_SELECT:
		u8x8_SetGPIOResult(u8x8, /* get menu select pin state */ 0);
     d28:	fc 01       	movw	r30, r24
     d2a:	16 8a       	std	Z+22, r1	; 0x16
		break;
     d2c:	0c c0       	rjmp	.+24     	; 0xd46 <u8x8_gpio_and_delay_atmega88+0x32>
		case U8X8_MSG_GPIO_MENU_NEXT:
		u8x8_SetGPIOResult(u8x8, /* get menu next pin state */ 0);
     d2e:	fc 01       	movw	r30, r24
     d30:	16 8a       	std	Z+22, r1	; 0x16
		break;
     d32:	09 c0       	rjmp	.+18     	; 0xd46 <u8x8_gpio_and_delay_atmega88+0x32>
		case U8X8_MSG_GPIO_MENU_PREV:
		u8x8_SetGPIOResult(u8x8, /* get menu prev pin state */ 0);
     d34:	fc 01       	movw	r30, r24
     d36:	16 8a       	std	Z+22, r1	; 0x16
		break;
     d38:	06 c0       	rjmp	.+12     	; 0xd46 <u8x8_gpio_and_delay_atmega88+0x32>
		case U8X8_MSG_GPIO_MENU_HOME:
		u8x8_SetGPIOResult(u8x8, /* get menu home pin state */ 0);
     d3a:	fc 01       	movw	r30, r24
     d3c:	16 8a       	std	Z+22, r1	; 0x16
		break;
     d3e:	03 c0       	rjmp	.+6      	; 0xd46 <u8x8_gpio_and_delay_atmega88+0x32>
		default:
		u8x8_SetGPIOResult(u8x8, 1);          // default return value
     d40:	21 e0       	ldi	r18, 0x01	; 1
     d42:	fc 01       	movw	r30, r24
     d44:	26 8b       	std	Z+22, r18	; 0x16
		break;
	}
	return 1;
     d46:	81 e0       	ldi	r24, 0x01	; 1
     d48:	08 95       	ret

00000d4a <u8x8_byte_atmega88_i2c>:
	}
	u8x8_DrawString_at(x,y,u8x8_strBuffer);
}

uint8_t u8x8_byte_atmega88_i2c(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
     d4a:	0f 93       	push	r16
     d4c:	1f 93       	push	r17
     d4e:	cf 93       	push	r28
     d50:	c4 2f       	mov	r28, r20
     d52:	89 01       	movw	r16, r18
	uint8_t *data;
	
	switch(msg)
     d54:	68 31       	cpi	r22, 0x18	; 24
     d56:	a9 f0       	breq	.+42     	; 0xd82 <u8x8_byte_atmega88_i2c+0x38>
     d58:	28 f4       	brcc	.+10     	; 0xd64 <u8x8_byte_atmega88_i2c+0x1a>
     d5a:	64 31       	cpi	r22, 0x14	; 20
     d5c:	d1 f0       	breq	.+52     	; 0xd92 <u8x8_byte_atmega88_i2c+0x48>
     d5e:	67 31       	cpi	r22, 0x17	; 23
     d60:	61 f0       	breq	.+24     	; 0xd7a <u8x8_byte_atmega88_i2c+0x30>
     d62:	04 c0       	rjmp	.+8      	; 0xd6c <u8x8_byte_atmega88_i2c+0x22>
     d64:	69 31       	cpi	r22, 0x19	; 25
     d66:	91 f0       	breq	.+36     	; 0xd8c <u8x8_byte_atmega88_i2c+0x42>
     d68:	60 32       	cpi	r22, 0x20	; 32
     d6a:	99 f0       	breq	.+38     	; 0xd92 <u8x8_byte_atmega88_i2c+0x48>
		break;
		case U8X8_MSG_BYTE_END_TRANSFER:
		i2c_stop();
		break;
		default:
		return 0;
     d6c:	80 e0       	ldi	r24, 0x00	; 0
     d6e:	12 c0       	rjmp	.+36     	; 0xd94 <u8x8_byte_atmega88_i2c+0x4a>
		case U8X8_MSG_BYTE_SEND:
		data = (uint8_t *)arg_ptr;
		
		while( arg_int > 0 )
		{
			i2c_write(*data);
     d70:	f8 01       	movw	r30, r16
     d72:	81 91       	ld	r24, Z+
     d74:	8f 01       	movw	r16, r30
     d76:	7c dd       	rcall	.-1288   	; 0x870 <i2c_write>
			data++;
			arg_int--;
     d78:	c1 50       	subi	r28, 0x01	; 1
	switch(msg)
	{
		case U8X8_MSG_BYTE_SEND:
		data = (uint8_t *)arg_ptr;
		
		while( arg_int > 0 )
     d7a:	c1 11       	cpse	r28, r1
     d7c:	f9 cf       	rjmp	.-14     	; 0xd70 <u8x8_byte_atmega88_i2c+0x26>
		i2c_stop();
		break;
		default:
		return 0;
	}
	return 1;
     d7e:	81 e0       	ldi	r24, 0x01	; 1
     d80:	09 c0       	rjmp	.+18     	; 0xd94 <u8x8_byte_atmega88_i2c+0x4a>
		//i2c_init(u8x8);
		break;
		case U8X8_MSG_BYTE_SET_DC:
		break;
		case U8X8_MSG_BYTE_START_TRANSFER:
		i2c_start(u8x8_GetI2CAddress(u8x8));	// TODO: muss Adresse geshifftet werden?
     d82:	fc 01       	movw	r30, r24
     d84:	82 89       	ldd	r24, Z+18	; 0x12
     d86:	4e dd       	rcall	.-1380   	; 0x824 <i2c_start>
		//i2c_start(0x78);
		////i2c_write_byte(u8x8, u8x8_GetI2CAddress(u8x8));
		//i2c_write_byte(u8x8, 0x078);
		break;
     d88:	81 e0       	ldi	r24, 0x01	; 1
		case U8X8_MSG_BYTE_END_TRANSFER:
		i2c_stop();
     d8a:	04 c0       	rjmp	.+8      	; 0xd94 <u8x8_byte_atmega88_i2c+0x4a>
     d8c:	83 dd       	rcall	.-1274   	; 0x894 <i2c_stop>
		break;
		default:
		return 0;
	}
	return 1;
     d8e:	81 e0       	ldi	r24, 0x01	; 1
		////i2c_write_byte(u8x8, u8x8_GetI2CAddress(u8x8));
		//i2c_write_byte(u8x8, 0x078);
		break;
		case U8X8_MSG_BYTE_END_TRANSFER:
		i2c_stop();
		break;
     d90:	01 c0       	rjmp	.+2      	; 0xd94 <u8x8_byte_atmega88_i2c+0x4a>
		default:
		return 0;
	}
	return 1;
     d92:	81 e0       	ldi	r24, 0x01	; 1
}
     d94:	cf 91       	pop	r28
     d96:	1f 91       	pop	r17
     d98:	0f 91       	pop	r16
     d9a:	08 95       	ret

00000d9c <u8x8_init_atmega88>:
//////////////////////////////////////////////////////////////////////////
// CODE
//////////////////////////////////////////////////////////////////////////


uint8_t u8x8_init_atmega88(void) {
     d9c:	0f 93       	push	r16
     d9e:	1f 93       	push	r17
	u8x8_Setup(&u8x8_ssd1306_s, u8x8_d_ssd1306_128x64_vcomh0, u8x8_cad_ssd13xx_i2c, u8x8_byte_atmega88_i2c, u8x8_gpio_and_delay_atmega88);
     da0:	0a e8       	ldi	r16, 0x8A	; 138
     da2:	16 e0       	ldi	r17, 0x06	; 6
     da4:	25 ea       	ldi	r18, 0xA5	; 165
     da6:	36 e0       	ldi	r19, 0x06	; 6
     da8:	4b eb       	ldi	r20, 0xBB	; 187
     daa:	57 e0       	ldi	r21, 0x07	; 7
     dac:	60 e5       	ldi	r22, 0x50	; 80
     dae:	79 e0       	ldi	r23, 0x09	; 9
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	92 e0       	ldi	r25, 0x02	; 2
     db4:	b3 d2       	rcall	.+1382   	; 0x131c <u8x8_Setup>
	
	u8x8_InitDisplay(&u8x8_ssd1306_s);
     db6:	81 e0       	ldi	r24, 0x01	; 1
     db8:	92 e0       	ldi	r25, 0x02	; 2
     dba:	8f d1       	rcall	.+798    	; 0x10da <u8x8_InitDisplay>
	u8x8_SetPowerSave(&u8x8_ssd1306_s,0);
     dbc:	60 e0       	ldi	r22, 0x00	; 0
     dbe:	81 e0       	ldi	r24, 0x01	; 1
     dc0:	92 e0       	ldi	r25, 0x02	; 2
     dc2:	96 d1       	rcall	.+812    	; 0x10f0 <u8x8_SetPowerSave>
	u8x8_ClearDisplay(&u8x8_ssd1306_s);
     dc4:	81 e0       	ldi	r24, 0x01	; 1
     dc6:	92 e0       	ldi	r25, 0x02	; 2
     dc8:	d5 d1       	rcall	.+938    	; 0x1174 <u8x8_ClearDisplay>
     dca:	64 ee       	ldi	r22, 0xE4	; 228
	u8x8_SetFont(&u8x8_ssd1306_s, u8x8_font_amstrad_cpc_extended_f);
     dcc:	70 e0       	ldi	r23, 0x00	; 0
     dce:	81 e0       	ldi	r24, 0x01	; 1
     dd0:	92 e0       	ldi	r25, 0x02	; 2
     dd2:	32 df       	rcall	.-412    	; 0xc38 <u8x8_SetFont>
     dd4:	80 e0       	ldi	r24, 0x00	; 0
	
	return 0x00;
}
     dd6:	1f 91       	pop	r17
     dd8:	0f 91       	pop	r16
     dda:	08 95       	ret

00000ddc <u8x8_byte_SendBytes>:
     ddc:	9a 01       	movw	r18, r20
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SET_DC, dc, NULL);
}

uint8_t u8x8_byte_SendBytes(u8x8_t *u8x8, uint8_t cnt, uint8_t *data)
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SEND, cnt, (void *)data);
     dde:	dc 01       	movw	r26, r24
     de0:	18 96       	adiw	r26, 0x08	; 8
     de2:	ed 91       	ld	r30, X+
     de4:	fc 91       	ld	r31, X
     de6:	19 97       	sbiw	r26, 0x09	; 9
     de8:	46 2f       	mov	r20, r22
     dea:	67 e1       	ldi	r22, 0x17	; 23
     dec:	09 95       	icall
}
     dee:	08 95       	ret

00000df0 <u8x8_byte_SendByte>:

uint8_t u8x8_byte_SendByte(u8x8_t *u8x8, uint8_t byte)
{
     df0:	cf 93       	push	r28
     df2:	df 93       	push	r29
     df4:	1f 92       	push	r1
     df6:	cd b7       	in	r28, 0x3d	; 61
     df8:	de b7       	in	r29, 0x3e	; 62
     dfa:	69 83       	std	Y+1, r22	; 0x01
  return u8x8_byte_SendBytes(u8x8, 1, &byte);
     dfc:	ae 01       	movw	r20, r28
     dfe:	4f 5f       	subi	r20, 0xFF	; 255
     e00:	5f 4f       	sbci	r21, 0xFF	; 255
     e02:	61 e0       	ldi	r22, 0x01	; 1
     e04:	eb df       	rcall	.-42     	; 0xddc <u8x8_byte_SendBytes>
}
     e06:	0f 90       	pop	r0
     e08:	df 91       	pop	r29
     e0a:	cf 91       	pop	r28
     e0c:	08 95       	ret

00000e0e <u8x8_byte_StartTransfer>:

uint8_t u8x8_byte_StartTransfer(u8x8_t *u8x8)
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_START_TRANSFER, 0, NULL);
     e0e:	dc 01       	movw	r26, r24
     e10:	18 96       	adiw	r26, 0x08	; 8
     e12:	ed 91       	ld	r30, X+
     e14:	fc 91       	ld	r31, X
     e16:	19 97       	sbiw	r26, 0x09	; 9
     e18:	20 e0       	ldi	r18, 0x00	; 0
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	40 e0       	ldi	r20, 0x00	; 0
     e1e:	68 e1       	ldi	r22, 0x18	; 24
     e20:	09 95       	icall
}
     e22:	08 95       	ret

00000e24 <u8x8_byte_EndTransfer>:

uint8_t u8x8_byte_EndTransfer(u8x8_t *u8x8)
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_END_TRANSFER, 0, NULL);
     e24:	dc 01       	movw	r26, r24
     e26:	18 96       	adiw	r26, 0x08	; 8
     e28:	ed 91       	ld	r30, X+
     e2a:	fc 91       	ld	r31, X
     e2c:	19 97       	sbiw	r26, 0x09	; 9
     e2e:	20 e0       	ldi	r18, 0x00	; 0
     e30:	30 e0       	ldi	r19, 0x00	; 0
     e32:	40 e0       	ldi	r20, 0x00	; 0
     e34:	69 e1       	ldi	r22, 0x19	; 25
     e36:	09 95       	icall
}
     e38:	08 95       	ret

00000e3a <u8x8_i2c_data_transfer>:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    default:
      return 0;
  }
  return 1;
}
     e3a:	ef 92       	push	r14
     e3c:	ff 92       	push	r15
     e3e:	1f 93       	push	r17
     e40:	cf 93       	push	r28
     e42:	df 93       	push	r29
     e44:	ec 01       	movw	r28, r24
     e46:	16 2f       	mov	r17, r22
     e48:	7a 01       	movw	r14, r20
     e4a:	e1 df       	rcall	.-62     	; 0xe0e <u8x8_byte_StartTransfer>
     e4c:	60 e4       	ldi	r22, 0x40	; 64
     e4e:	ce 01       	movw	r24, r28
     e50:	cf df       	rcall	.-98     	; 0xdf0 <u8x8_byte_SendByte>
     e52:	e8 85       	ldd	r30, Y+8	; 0x08
     e54:	f9 85       	ldd	r31, Y+9	; 0x09
     e56:	97 01       	movw	r18, r14
     e58:	41 2f       	mov	r20, r17
     e5a:	67 e1       	ldi	r22, 0x17	; 23
     e5c:	ce 01       	movw	r24, r28
     e5e:	09 95       	icall
     e60:	ce 01       	movw	r24, r28
     e62:	e0 df       	rcall	.-64     	; 0xe24 <u8x8_byte_EndTransfer>
     e64:	df 91       	pop	r29
     e66:	cf 91       	pop	r28
     e68:	1f 91       	pop	r17
     e6a:	ff 90       	pop	r15
     e6c:	ef 90       	pop	r14
     e6e:	08 95       	ret

00000e70 <u8x8_cad_SendCmd>:
     e70:	46 2f       	mov	r20, r22
     e72:	dc 01       	movw	r26, r24
     e74:	16 96       	adiw	r26, 0x06	; 6
     e76:	ed 91       	ld	r30, X+
     e78:	fc 91       	ld	r31, X
     e7a:	17 97       	sbiw	r26, 0x07	; 7
     e7c:	20 e0       	ldi	r18, 0x00	; 0
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	65 e1       	ldi	r22, 0x15	; 21
     e82:	09 95       	icall
     e84:	08 95       	ret

00000e86 <u8x8_cad_SendArg>:
     e86:	46 2f       	mov	r20, r22
     e88:	dc 01       	movw	r26, r24
     e8a:	16 96       	adiw	r26, 0x06	; 6
     e8c:	ed 91       	ld	r30, X+
     e8e:	fc 91       	ld	r31, X
     e90:	17 97       	sbiw	r26, 0x07	; 7
     e92:	20 e0       	ldi	r18, 0x00	; 0
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	66 e1       	ldi	r22, 0x16	; 22
     e98:	09 95       	icall
     e9a:	08 95       	ret

00000e9c <u8x8_cad_SendData>:
     e9c:	9a 01       	movw	r18, r20
     e9e:	dc 01       	movw	r26, r24
     ea0:	16 96       	adiw	r26, 0x06	; 6
     ea2:	ed 91       	ld	r30, X+
     ea4:	fc 91       	ld	r31, X
     ea6:	17 97       	sbiw	r26, 0x07	; 7
     ea8:	46 2f       	mov	r20, r22
     eaa:	67 e1       	ldi	r22, 0x17	; 23
     eac:	09 95       	icall
     eae:	08 95       	ret

00000eb0 <u8x8_cad_StartTransfer>:
     eb0:	dc 01       	movw	r26, r24
     eb2:	16 96       	adiw	r26, 0x06	; 6
     eb4:	ed 91       	ld	r30, X+
     eb6:	fc 91       	ld	r31, X
     eb8:	17 97       	sbiw	r26, 0x07	; 7
     eba:	20 e0       	ldi	r18, 0x00	; 0
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	40 e0       	ldi	r20, 0x00	; 0
     ec0:	68 e1       	ldi	r22, 0x18	; 24
     ec2:	09 95       	icall
     ec4:	08 95       	ret

00000ec6 <u8x8_cad_EndTransfer>:
     ec6:	dc 01       	movw	r26, r24
     ec8:	16 96       	adiw	r26, 0x06	; 6
     eca:	ed 91       	ld	r30, X+
     ecc:	fc 91       	ld	r31, X
     ece:	17 97       	sbiw	r26, 0x07	; 7
     ed0:	20 e0       	ldi	r18, 0x00	; 0
     ed2:	30 e0       	ldi	r19, 0x00	; 0
     ed4:	40 e0       	ldi	r20, 0x00	; 0
     ed6:	69 e1       	ldi	r22, 0x19	; 25
     ed8:	09 95       	icall
     eda:	08 95       	ret

00000edc <u8x8_cad_SendSequence>:
     edc:	ef 92       	push	r14
     ede:	ff 92       	push	r15
     ee0:	0f 93       	push	r16
     ee2:	1f 93       	push	r17
     ee4:	cf 93       	push	r28
     ee6:	df 93       	push	r29
     ee8:	1f 92       	push	r1
     eea:	cd b7       	in	r28, 0x3d	; 61
     eec:	de b7       	in	r29, 0x3e	; 62
     eee:	7c 01       	movw	r14, r24
     ef0:	8b 01       	movw	r16, r22
     ef2:	d8 01       	movw	r26, r16
     ef4:	6d 91       	ld	r22, X+
     ef6:	8d 01       	movw	r16, r26
     ef8:	67 31       	cpi	r22, 0x17	; 23
     efa:	b9 f0       	breq	.+46     	; 0xf2a <u8x8_cad_SendSequence+0x4e>
     efc:	18 f4       	brcc	.+6      	; 0xf04 <u8x8_cad_SendSequence+0x28>
     efe:	65 31       	cpi	r22, 0x15	; 21
     f00:	30 f4       	brcc	.+12     	; 0xf0e <u8x8_cad_SendSequence+0x32>
     f02:	31 c0       	rjmp	.+98     	; 0xf66 <u8x8_cad_SendSequence+0x8a>
     f04:	6a 31       	cpi	r22, 0x1A	; 26
     f06:	e0 f0       	brcs	.+56     	; 0xf40 <u8x8_cad_SendSequence+0x64>
     f08:	6e 3f       	cpi	r22, 0xFE	; 254
     f0a:	29 f1       	breq	.+74     	; 0xf56 <u8x8_cad_SendSequence+0x7a>
     f0c:	2c c0       	rjmp	.+88     	; 0xf66 <u8x8_cad_SendSequence+0x8a>
     f0e:	fd 01       	movw	r30, r26
     f10:	41 91       	ld	r20, Z+
     f12:	8f 01       	movw	r16, r30
     f14:	49 83       	std	Y+1, r20	; 0x01
     f16:	d7 01       	movw	r26, r14
     f18:	16 96       	adiw	r26, 0x06	; 6
     f1a:	ed 91       	ld	r30, X+
     f1c:	fc 91       	ld	r31, X
     f1e:	17 97       	sbiw	r26, 0x07	; 7
     f20:	20 e0       	ldi	r18, 0x00	; 0
     f22:	30 e0       	ldi	r19, 0x00	; 0
     f24:	c7 01       	movw	r24, r14
     f26:	09 95       	icall
     f28:	e4 cf       	rjmp	.-56     	; 0xef2 <u8x8_cad_SendSequence+0x16>
     f2a:	fd 01       	movw	r30, r26
     f2c:	81 91       	ld	r24, Z+
     f2e:	8f 01       	movw	r16, r30
     f30:	89 83       	std	Y+1, r24	; 0x01
     f32:	ae 01       	movw	r20, r28
     f34:	4f 5f       	subi	r20, 0xFF	; 255
     f36:	5f 4f       	sbci	r21, 0xFF	; 255
     f38:	61 e0       	ldi	r22, 0x01	; 1
     f3a:	c7 01       	movw	r24, r14
     f3c:	af df       	rcall	.-162    	; 0xe9c <u8x8_cad_SendData>
     f3e:	d9 cf       	rjmp	.-78     	; 0xef2 <u8x8_cad_SendSequence+0x16>
     f40:	d7 01       	movw	r26, r14
     f42:	16 96       	adiw	r26, 0x06	; 6
     f44:	ed 91       	ld	r30, X+
     f46:	fc 91       	ld	r31, X
     f48:	17 97       	sbiw	r26, 0x07	; 7
     f4a:	20 e0       	ldi	r18, 0x00	; 0
     f4c:	30 e0       	ldi	r19, 0x00	; 0
     f4e:	40 e0       	ldi	r20, 0x00	; 0
     f50:	c7 01       	movw	r24, r14
     f52:	09 95       	icall
     f54:	ce cf       	rjmp	.-100    	; 0xef2 <u8x8_cad_SendSequence+0x16>
     f56:	fd 01       	movw	r30, r26
     f58:	41 91       	ld	r20, Z+
     f5a:	8f 01       	movw	r16, r30
     f5c:	49 83       	std	Y+1, r20	; 0x01
     f5e:	69 e2       	ldi	r22, 0x29	; 41
     f60:	c7 01       	movw	r24, r14
     f62:	bd d1       	rcall	.+890    	; 0x12de <u8x8_gpio_call>
     f64:	c6 cf       	rjmp	.-116    	; 0xef2 <u8x8_cad_SendSequence+0x16>
     f66:	0f 90       	pop	r0
     f68:	df 91       	pop	r29
     f6a:	cf 91       	pop	r28
     f6c:	1f 91       	pop	r17
     f6e:	0f 91       	pop	r16
     f70:	ff 90       	pop	r15
     f72:	ef 90       	pop	r14
     f74:	08 95       	ret

00000f76 <u8x8_cad_ssd13xx_i2c>:
    u8x8->byte_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, arg_int, arg_ptr);
    u8x8_byte_EndTransfer(u8x8);
}

uint8_t u8x8_cad_ssd13xx_i2c(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
     f76:	ef 92       	push	r14
     f78:	ff 92       	push	r15
     f7a:	0f 93       	push	r16
     f7c:	1f 93       	push	r17
     f7e:	cf 93       	push	r28
     f80:	7c 01       	movw	r14, r24
     f82:	c4 2f       	mov	r28, r20
     f84:	89 01       	movw	r16, r18
  uint8_t *p;
  switch(msg)
     f86:	67 31       	cpi	r22, 0x17	; 23
     f88:	28 f4       	brcc	.+10     	; 0xf94 <u8x8_cad_ssd13xx_i2c+0x1e>
     f8a:	65 31       	cpi	r22, 0x15	; 21
     f8c:	48 f4       	brcc	.+18     	; 0xfa0 <u8x8_cad_ssd13xx_i2c+0x2a>
     f8e:	64 31       	cpi	r22, 0x14	; 20
     f90:	09 f1       	breq	.+66     	; 0xfd4 <u8x8_cad_ssd13xx_i2c+0x5e>
     f92:	04 c0       	rjmp	.+8      	; 0xf9c <u8x8_cad_ssd13xx_i2c+0x26>
     f94:	67 31       	cpi	r22, 0x17	; 23
     f96:	b1 f0       	breq	.+44     	; 0xfc4 <u8x8_cad_ssd13xx_i2c+0x4e>
     f98:	6a 31       	cpi	r22, 0x1A	; 26
     f9a:	78 f1       	brcs	.+94     	; 0xffa <u8x8_cad_ssd13xx_i2c+0x84>
    case U8X8_MSG_CAD_START_TRANSFER:
    case U8X8_MSG_CAD_END_TRANSFER:
      /* cad transfer commands are ignored */
      break;
    default:
      return 0;
     f9c:	80 e0       	ldi	r24, 0x00	; 0
     f9e:	2e c0       	rjmp	.+92     	; 0xffc <u8x8_cad_ssd13xx_i2c+0x86>
  {
    case U8X8_MSG_CAD_SEND_CMD:
    case U8X8_MSG_CAD_SEND_ARG:
      /* 7 Nov 2016: Can this be improved?  */
      //u8x8_byte_SetDC(u8x8, 0);
      u8x8_byte_StartTransfer(u8x8);
     fa0:	36 df       	rcall	.-404    	; 0xe0e <u8x8_byte_StartTransfer>
      //u8x8_byte_SendByte(u8x8, u8x8_GetI2CAddress(u8x8));
      u8x8_byte_SendByte(u8x8, 0x000);
     fa2:	60 e0       	ldi	r22, 0x00	; 0
     fa4:	c7 01       	movw	r24, r14
     fa6:	24 df       	rcall	.-440    	; 0xdf0 <u8x8_byte_SendByte>
      u8x8_byte_SendByte(u8x8, arg_int);
     fa8:	6c 2f       	mov	r22, r28
     faa:	c7 01       	movw	r24, r14
      u8x8_byte_EndTransfer(u8x8);      
     fac:	21 df       	rcall	.-446    	; 0xdf0 <u8x8_byte_SendByte>
     fae:	c7 01       	movw	r24, r14
     fb0:	39 df       	rcall	.-398    	; 0xe24 <u8x8_byte_EndTransfer>
      /* cad transfer commands are ignored */
      break;
    default:
      return 0;
  }
  return 1;
     fb2:	81 e0       	ldi	r24, 0x01	; 1
      /* so this is done here. Even further, only 24 bytes will be sent, */
      /* because there will be another byte (DC) required during the transfer */
      p = arg_ptr;
       while( arg_int > 24 )
      {
	u8x8_i2c_data_transfer(u8x8, 24, p);
     fb4:	23 c0       	rjmp	.+70     	; 0xffc <u8x8_cad_ssd13xx_i2c+0x86>
     fb6:	a8 01       	movw	r20, r16
     fb8:	68 e1       	ldi	r22, 0x18	; 24
     fba:	c7 01       	movw	r24, r14
     fbc:	3e df       	rcall	.-388    	; 0xe3a <u8x8_i2c_data_transfer>
	arg_int-=24;
     fbe:	c8 51       	subi	r28, 0x18	; 24
	p+=24;
     fc0:	08 5e       	subi	r16, 0xE8	; 232
     fc2:	1f 4f       	sbci	r17, 0xFF	; 255
      /* I guess this is related to the size of the Wire buffers in Arduino */
      /* Unfortunately, this can not be handled in the byte level drivers, */
      /* so this is done here. Even further, only 24 bytes will be sent, */
      /* because there will be another byte (DC) required during the transfer */
      p = arg_ptr;
       while( arg_int > 24 )
     fc4:	c9 31       	cpi	r28, 0x19	; 25
      {
	u8x8_i2c_data_transfer(u8x8, 24, p);
	arg_int-=24;
	p+=24;
      }
      u8x8_i2c_data_transfer(u8x8, arg_int, p);
     fc6:	b8 f7       	brcc	.-18     	; 0xfb6 <u8x8_cad_ssd13xx_i2c+0x40>
     fc8:	a8 01       	movw	r20, r16
     fca:	6c 2f       	mov	r22, r28
     fcc:	c7 01       	movw	r24, r14
     fce:	35 df       	rcall	.-406    	; 0xe3a <u8x8_i2c_data_transfer>
      /* cad transfer commands are ignored */
      break;
    default:
      return 0;
  }
  return 1;
     fd0:	81 e0       	ldi	r24, 0x01	; 1
	u8x8_i2c_data_transfer(u8x8, 24, p);
	arg_int-=24;
	p+=24;
      }
      u8x8_i2c_data_transfer(u8x8, arg_int, p);
      break;
     fd2:	14 c0       	rjmp	.+40     	; 0xffc <u8x8_cad_ssd13xx_i2c+0x86>
    case U8X8_MSG_CAD_INIT:
      /* apply default i2c adr if required so that the start transfer msg can use this */
      if ( u8x8->i2c_address == 255 )
     fd4:	dc 01       	movw	r26, r24
     fd6:	52 96       	adiw	r26, 0x12	; 18
     fd8:	8c 91       	ld	r24, X
     fda:	52 97       	sbiw	r26, 0x12	; 18
     fdc:	8f 3f       	cpi	r24, 0xFF	; 255
     fde:	19 f4       	brne	.+6      	; 0xfe6 <u8x8_cad_ssd13xx_i2c+0x70>
	u8x8->i2c_address = 0x078;
     fe0:	88 e7       	ldi	r24, 0x78	; 120
     fe2:	52 96       	adiw	r26, 0x12	; 18
     fe4:	8c 93       	st	X, r24
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
     fe6:	d7 01       	movw	r26, r14
     fe8:	18 96       	adiw	r26, 0x08	; 8
     fea:	ed 91       	ld	r30, X+
     fec:	fc 91       	ld	r31, X
     fee:	19 97       	sbiw	r26, 0x09	; 9
     ff0:	98 01       	movw	r18, r16
     ff2:	4c 2f       	mov	r20, r28
     ff4:	c7 01       	movw	r24, r14
     ff6:	09 95       	icall
     ff8:	01 c0       	rjmp	.+2      	; 0xffc <u8x8_cad_ssd13xx_i2c+0x86>
      /* cad transfer commands are ignored */
      break;
    default:
      return 0;
  }
  return 1;
     ffa:	81 e0       	ldi	r24, 0x01	; 1
}
     ffc:	cf 91       	pop	r28
     ffe:	1f 91       	pop	r17
    1000:	0f 91       	pop	r16
    1002:	ff 90       	pop	r15
    1004:	ef 90       	pop	r14
    1006:	08 95       	ret

00001008 <u8x8_d_helper_display_setup_memory>:
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_CONTRAST, value, NULL);  
}

void u8x8_RefreshDisplay(u8x8_t *u8x8)
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_REFRESH, 0, NULL);  
    1008:	fc 01       	movw	r30, r24
    100a:	71 83       	std	Z+1, r23	; 0x01
    100c:	60 83       	st	Z, r22
    100e:	fb 01       	movw	r30, r22
    1010:	22 89       	ldd	r18, Z+18	; 0x12
    1012:	fc 01       	movw	r30, r24
    1014:	20 8b       	std	Z+16, r18	; 0x10
    1016:	08 95       	ret

00001018 <u8x8_d_helper_display_init>:
    1018:	cf 93       	push	r28
    101a:	df 93       	push	r29
    101c:	ec 01       	movw	r28, r24
    101e:	ea 85       	ldd	r30, Y+10	; 0x0a
    1020:	fb 85       	ldd	r31, Y+11	; 0x0b
    1022:	20 e0       	ldi	r18, 0x00	; 0
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	40 e0       	ldi	r20, 0x00	; 0
    1028:	68 e2       	ldi	r22, 0x28	; 40
    102a:	09 95       	icall
    102c:	ee 81       	ldd	r30, Y+6	; 0x06
    102e:	ff 81       	ldd	r31, Y+7	; 0x07
    1030:	20 e0       	ldi	r18, 0x00	; 0
    1032:	30 e0       	ldi	r19, 0x00	; 0
    1034:	40 e0       	ldi	r20, 0x00	; 0
    1036:	64 e1       	ldi	r22, 0x14	; 20
    1038:	ce 01       	movw	r24, r28
    103a:	09 95       	icall
    103c:	41 e0       	ldi	r20, 0x01	; 1
    103e:	6b e4       	ldi	r22, 0x4B	; 75
    1040:	ce 01       	movw	r24, r28
    1042:	4d d1       	rcall	.+666    	; 0x12de <u8x8_gpio_call>
    1044:	e8 81       	ld	r30, Y
    1046:	f9 81       	ldd	r31, Y+1	; 0x01
    1048:	44 81       	ldd	r20, Z+4	; 0x04
    104a:	69 e2       	ldi	r22, 0x29	; 41
    104c:	ce 01       	movw	r24, r28
    104e:	47 d1       	rcall	.+654    	; 0x12de <u8x8_gpio_call>
    1050:	40 e0       	ldi	r20, 0x00	; 0
    1052:	6b e4       	ldi	r22, 0x4B	; 75
    1054:	ce 01       	movw	r24, r28
    1056:	43 d1       	rcall	.+646    	; 0x12de <u8x8_gpio_call>
    1058:	e8 81       	ld	r30, Y
    105a:	f9 81       	ldd	r31, Y+1	; 0x01
    105c:	44 81       	ldd	r20, Z+4	; 0x04
    105e:	69 e2       	ldi	r22, 0x29	; 41
    1060:	ce 01       	movw	r24, r28
    1062:	3d d1       	rcall	.+634    	; 0x12de <u8x8_gpio_call>
    1064:	41 e0       	ldi	r20, 0x01	; 1
    1066:	6b e4       	ldi	r22, 0x4B	; 75
    1068:	ce 01       	movw	r24, r28
    106a:	39 d1       	rcall	.+626    	; 0x12de <u8x8_gpio_call>
    106c:	e8 81       	ld	r30, Y
    106e:	f9 81       	ldd	r31, Y+1	; 0x01
    1070:	45 81       	ldd	r20, Z+5	; 0x05
    1072:	69 e2       	ldi	r22, 0x29	; 41
    1074:	ce 01       	movw	r24, r28
    1076:	33 d1       	rcall	.+614    	; 0x12de <u8x8_gpio_call>
    1078:	df 91       	pop	r29
    107a:	cf 91       	pop	r28
    107c:	08 95       	ret

0000107e <u8x8_DrawTile>:
    107e:	0f 93       	push	r16
    1080:	1f 93       	push	r17
    1082:	cf 93       	push	r28
    1084:	df 93       	push	r29
    1086:	00 d0       	rcall	.+0      	; 0x1088 <u8x8_DrawTile+0xa>
    1088:	00 d0       	rcall	.+0      	; 0x108a <u8x8_DrawTile+0xc>
    108a:	1f 92       	push	r1
    108c:	cd b7       	in	r28, 0x3d	; 61
    108e:	de b7       	in	r29, 0x3e	; 62
    1090:	6c 83       	std	Y+4, r22	; 0x04
    1092:	4d 83       	std	Y+5, r20	; 0x05
    1094:	2b 83       	std	Y+3, r18	; 0x03
    1096:	1a 83       	std	Y+2, r17	; 0x02
    1098:	09 83       	std	Y+1, r16	; 0x01
    109a:	dc 01       	movw	r26, r24
    109c:	14 96       	adiw	r26, 0x04	; 4
    109e:	ed 91       	ld	r30, X+
    10a0:	fc 91       	ld	r31, X
    10a2:	15 97       	sbiw	r26, 0x05	; 5
    10a4:	9e 01       	movw	r18, r28
    10a6:	2f 5f       	subi	r18, 0xFF	; 255
    10a8:	3f 4f       	sbci	r19, 0xFF	; 255
    10aa:	41 e0       	ldi	r20, 0x01	; 1
    10ac:	6f e0       	ldi	r22, 0x0F	; 15
    10ae:	09 95       	icall
    10b0:	0f 90       	pop	r0
    10b2:	0f 90       	pop	r0
    10b4:	0f 90       	pop	r0
    10b6:	0f 90       	pop	r0
    10b8:	0f 90       	pop	r0
    10ba:	df 91       	pop	r29
    10bc:	cf 91       	pop	r28
    10be:	1f 91       	pop	r17
    10c0:	0f 91       	pop	r16
    10c2:	08 95       	ret

000010c4 <u8x8_SetupMemory>:
    10c4:	dc 01       	movw	r26, r24
    10c6:	14 96       	adiw	r26, 0x04	; 4
    10c8:	ed 91       	ld	r30, X+
    10ca:	fc 91       	ld	r31, X
    10cc:	15 97       	sbiw	r26, 0x05	; 5
    10ce:	20 e0       	ldi	r18, 0x00	; 0
    10d0:	30 e0       	ldi	r19, 0x00	; 0
    10d2:	40 e0       	ldi	r20, 0x00	; 0
    10d4:	69 e0       	ldi	r22, 0x09	; 9
    10d6:	09 95       	icall
    10d8:	08 95       	ret

000010da <u8x8_InitDisplay>:
    10da:	dc 01       	movw	r26, r24
    10dc:	14 96       	adiw	r26, 0x04	; 4
    10de:	ed 91       	ld	r30, X+
    10e0:	fc 91       	ld	r31, X
    10e2:	15 97       	sbiw	r26, 0x05	; 5
    10e4:	20 e0       	ldi	r18, 0x00	; 0
    10e6:	30 e0       	ldi	r19, 0x00	; 0
    10e8:	40 e0       	ldi	r20, 0x00	; 0
    10ea:	6a e0       	ldi	r22, 0x0A	; 10
    10ec:	09 95       	icall
    10ee:	08 95       	ret

000010f0 <u8x8_SetPowerSave>:
    10f0:	46 2f       	mov	r20, r22
    10f2:	dc 01       	movw	r26, r24
    10f4:	14 96       	adiw	r26, 0x04	; 4
    10f6:	ed 91       	ld	r30, X+
    10f8:	fc 91       	ld	r31, X
    10fa:	15 97       	sbiw	r26, 0x05	; 5
    10fc:	20 e0       	ldi	r18, 0x00	; 0
    10fe:	30 e0       	ldi	r19, 0x00	; 0
    1100:	6b e0       	ldi	r22, 0x0B	; 11
    1102:	09 95       	icall
    1104:	08 95       	ret

00001106 <u8x8_ClearDisplayWithTile>:
}

void u8x8_ClearDisplayWithTile(u8x8_t *u8x8, const uint8_t *buf)
{
    1106:	cf 92       	push	r12
    1108:	df 92       	push	r13
    110a:	ff 92       	push	r15
    110c:	0f 93       	push	r16
    110e:	1f 93       	push	r17
    1110:	cf 93       	push	r28
    1112:	df 93       	push	r29
    1114:	00 d0       	rcall	.+0      	; 0x1116 <u8x8_ClearDisplayWithTile+0x10>
    1116:	00 d0       	rcall	.+0      	; 0x1118 <u8x8_ClearDisplayWithTile+0x12>
    1118:	1f 92       	push	r1
    111a:	cd b7       	in	r28, 0x3d	; 61
    111c:	de b7       	in	r29, 0x3e	; 62
    111e:	8c 01       	movw	r16, r24
  u8x8_tile_t tile;
  uint8_t h;

  tile.x_pos = 0;
    1120:	1c 82       	std	Y+4, r1	; 0x04
  tile.cnt = 1;
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	8b 83       	std	Y+3, r24	; 0x03
  tile.tile_ptr = (uint8_t *)buf;		/* tile_ptr should be const, but isn't */
    1126:	7a 83       	std	Y+2, r23	; 0x02
    1128:	69 83       	std	Y+1, r22	; 0x01
  
  h = u8x8->display_info->tile_height;
    112a:	d8 01       	movw	r26, r16
    112c:	ed 91       	ld	r30, X+
    112e:	fc 91       	ld	r31, X
    1130:	f1 88       	ldd	r15, Z+17	; 0x11
  tile.y_pos = 0;
    1132:	1d 82       	std	Y+5, r1	; 0x05
  do
  {
    u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_DRAW_TILE, u8x8->display_info->tile_width, (void *)&tile);
    1134:	f8 01       	movw	r30, r16
    1136:	c4 80       	ldd	r12, Z+4	; 0x04
    1138:	d5 80       	ldd	r13, Z+5	; 0x05
    113a:	a0 81       	ld	r26, Z
    113c:	b1 81       	ldd	r27, Z+1	; 0x01
    113e:	9e 01       	movw	r18, r28
    1140:	2f 5f       	subi	r18, 0xFF	; 255
    1142:	3f 4f       	sbci	r19, 0xFF	; 255
    1144:	50 96       	adiw	r26, 0x10	; 16
    1146:	4c 91       	ld	r20, X
    1148:	6f e0       	ldi	r22, 0x0F	; 15
    114a:	c8 01       	movw	r24, r16
    114c:	f6 01       	movw	r30, r12
    114e:	09 95       	icall
    tile.y_pos++;
    1150:	8d 81       	ldd	r24, Y+5	; 0x05
    1152:	8f 5f       	subi	r24, 0xFF	; 255
    1154:	8d 83       	std	Y+5, r24	; 0x05
  } while( tile.y_pos < h );
    1156:	8f 15       	cp	r24, r15
    1158:	68 f3       	brcs	.-38     	; 0x1134 <u8x8_ClearDisplayWithTile+0x2e>
}
    115a:	0f 90       	pop	r0
    115c:	0f 90       	pop	r0
    115e:	0f 90       	pop	r0
    1160:	0f 90       	pop	r0
    1162:	0f 90       	pop	r0
    1164:	df 91       	pop	r29
    1166:	cf 91       	pop	r28
    1168:	1f 91       	pop	r17
    116a:	0f 91       	pop	r16
    116c:	ff 90       	pop	r15
    116e:	df 90       	pop	r13
    1170:	cf 90       	pop	r12
    1172:	08 95       	ret

00001174 <u8x8_ClearDisplay>:

void u8x8_ClearDisplay(u8x8_t *u8x8)
{
    1174:	cf 93       	push	r28
    1176:	df 93       	push	r29
    1178:	cd b7       	in	r28, 0x3d	; 61
    117a:	de b7       	in	r29, 0x3e	; 62
    117c:	28 97       	sbiw	r28, 0x08	; 8
    117e:	0f b6       	in	r0, 0x3f	; 63
    1180:	f8 94       	cli
    1182:	de bf       	out	0x3e, r29	; 62
    1184:	0f be       	out	0x3f, r0	; 63
    1186:	cd bf       	out	0x3d, r28	; 61
  uint8_t buf[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };
    1188:	be 01       	movw	r22, r28
    118a:	6f 5f       	subi	r22, 0xFF	; 255
    118c:	7f 4f       	sbci	r23, 0xFF	; 255
    118e:	28 e0       	ldi	r18, 0x08	; 8
    1190:	fb 01       	movw	r30, r22
    1192:	11 92       	st	Z+, r1
    1194:	2a 95       	dec	r18
    1196:	e9 f7       	brne	.-6      	; 0x1192 <u8x8_ClearDisplay+0x1e>
  //uint8_t buf[8] = { 0xFF, 0, 0xFF, 0, 0, 0, 0, 0 };
  u8x8_ClearDisplayWithTile(u8x8, buf);
    1198:	b6 df       	rcall	.-148    	; 0x1106 <u8x8_ClearDisplayWithTile>
}
    119a:	28 96       	adiw	r28, 0x08	; 8
    119c:	0f b6       	in	r0, 0x3f	; 63
    119e:	f8 94       	cli
    11a0:	de bf       	out	0x3e, r29	; 62
    11a2:	0f be       	out	0x3f, r0	; 63
    11a4:	cd bf       	out	0x3d, r28	; 61
    11a6:	df 91       	pop	r29
    11a8:	cf 91       	pop	r28
    11aa:	08 95       	ret

000011ac <u8x8_d_ssd1306_sh1106_generic>:
      break;
    default:
      return 0;
  }
  return 1;
}
    11ac:	ef 92       	push	r14
    11ae:	ff 92       	push	r15
    11b0:	0f 93       	push	r16
    11b2:	1f 93       	push	r17
    11b4:	cf 93       	push	r28
    11b6:	df 93       	push	r29
    11b8:	8c 01       	movw	r16, r24
    11ba:	c4 2f       	mov	r28, r20
    11bc:	79 01       	movw	r14, r18
    11be:	6d 30       	cpi	r22, 0x0D	; 13
    11c0:	a9 f0       	breq	.+42     	; 0x11ec <u8x8_d_ssd1306_sh1106_generic+0x40>
    11c2:	18 f4       	brcc	.+6      	; 0x11ca <u8x8_d_ssd1306_sh1106_generic+0x1e>
    11c4:	6b 30       	cpi	r22, 0x0B	; 11
    11c6:	31 f0       	breq	.+12     	; 0x11d4 <u8x8_d_ssd1306_sh1106_generic+0x28>
    11c8:	63 c0       	rjmp	.+198    	; 0x1290 <u8x8_d_ssd1306_sh1106_generic+0xe4>
    11ca:	6e 30       	cpi	r22, 0x0E	; 14
    11cc:	49 f1       	breq	.+82     	; 0x1220 <u8x8_d_ssd1306_sh1106_generic+0x74>
    11ce:	6f 30       	cpi	r22, 0x0F	; 15
    11d0:	91 f1       	breq	.+100    	; 0x1236 <u8x8_d_ssd1306_sh1106_generic+0x8a>
    11d2:	5e c0       	rjmp	.+188    	; 0x1290 <u8x8_d_ssd1306_sh1106_generic+0xe4>
    11d4:	41 11       	cpse	r20, r1
    11d6:	05 c0       	rjmp	.+10     	; 0x11e2 <u8x8_d_ssd1306_sh1106_generic+0x36>
    11d8:	66 e6       	ldi	r22, 0x66	; 102
    11da:	71 e0       	ldi	r23, 0x01	; 1
    11dc:	7f de       	rcall	.-770    	; 0xedc <u8x8_cad_SendSequence>
    11de:	81 e0       	ldi	r24, 0x01	; 1
    11e0:	58 c0       	rjmp	.+176    	; 0x1292 <u8x8_d_ssd1306_sh1106_generic+0xe6>
    11e2:	61 e6       	ldi	r22, 0x61	; 97
    11e4:	71 e0       	ldi	r23, 0x01	; 1
    11e6:	7a de       	rcall	.-780    	; 0xedc <u8x8_cad_SendSequence>
    11e8:	81 e0       	ldi	r24, 0x01	; 1
    11ea:	53 c0       	rjmp	.+166    	; 0x1292 <u8x8_d_ssd1306_sh1106_generic+0xe6>
    11ec:	41 11       	cpse	r20, r1
    11ee:	0c c0       	rjmp	.+24     	; 0x1208 <u8x8_d_ssd1306_sh1106_generic+0x5c>
    11f0:	6a e5       	ldi	r22, 0x5A	; 90
    11f2:	71 e0       	ldi	r23, 0x01	; 1
    11f4:	73 de       	rcall	.-794    	; 0xedc <u8x8_cad_SendSequence>
    11f6:	d8 01       	movw	r26, r16
    11f8:	ed 91       	ld	r30, X+
    11fa:	fc 91       	ld	r31, X
    11fc:	11 97       	sbiw	r26, 0x01	; 1
    11fe:	82 89       	ldd	r24, Z+18	; 0x12
    1200:	50 96       	adiw	r26, 0x10	; 16
    1202:	8c 93       	st	X, r24
    1204:	81 e0       	ldi	r24, 0x01	; 1
    1206:	45 c0       	rjmp	.+138    	; 0x1292 <u8x8_d_ssd1306_sh1106_generic+0xe6>
    1208:	63 e5       	ldi	r22, 0x53	; 83
    120a:	71 e0       	ldi	r23, 0x01	; 1
    120c:	67 de       	rcall	.-818    	; 0xedc <u8x8_cad_SendSequence>
    120e:	d8 01       	movw	r26, r16
    1210:	ed 91       	ld	r30, X+
    1212:	fc 91       	ld	r31, X
    1214:	11 97       	sbiw	r26, 0x01	; 1
    1216:	83 89       	ldd	r24, Z+19	; 0x13
    1218:	50 96       	adiw	r26, 0x10	; 16
    121a:	8c 93       	st	X, r24
    121c:	81 e0       	ldi	r24, 0x01	; 1
    121e:	39 c0       	rjmp	.+114    	; 0x1292 <u8x8_d_ssd1306_sh1106_generic+0xe6>
    1220:	47 de       	rcall	.-882    	; 0xeb0 <u8x8_cad_StartTransfer>
    1222:	61 e8       	ldi	r22, 0x81	; 129
    1224:	c8 01       	movw	r24, r16
    1226:	24 de       	rcall	.-952    	; 0xe70 <u8x8_cad_SendCmd>
    1228:	6c 2f       	mov	r22, r28
    122a:	c8 01       	movw	r24, r16
    122c:	2c de       	rcall	.-936    	; 0xe86 <u8x8_cad_SendArg>
    122e:	c8 01       	movw	r24, r16
    1230:	4a de       	rcall	.-876    	; 0xec6 <u8x8_cad_EndTransfer>
    1232:	81 e0       	ldi	r24, 0x01	; 1
    1234:	2e c0       	rjmp	.+92     	; 0x1292 <u8x8_d_ssd1306_sh1106_generic+0xe6>
    1236:	3c de       	rcall	.-904    	; 0xeb0 <u8x8_cad_StartTransfer>
    1238:	f7 01       	movw	r30, r14
    123a:	d3 81       	ldd	r29, Z+3	; 0x03
    123c:	dd 0f       	add	r29, r29
    123e:	dd 0f       	add	r29, r29
    1240:	dd 0f       	add	r29, r29
    1242:	d8 01       	movw	r26, r16
    1244:	50 96       	adiw	r26, 0x10	; 16
    1246:	8c 91       	ld	r24, X
    1248:	d8 0f       	add	r29, r24
    124a:	60 e4       	ldi	r22, 0x40	; 64
    124c:	c8 01       	movw	r24, r16
    124e:	10 de       	rcall	.-992    	; 0xe70 <u8x8_cad_SendCmd>
    1250:	6d 2f       	mov	r22, r29
    1252:	62 95       	swap	r22
    1254:	6f 70       	andi	r22, 0x0F	; 15
    1256:	60 61       	ori	r22, 0x10	; 16
    1258:	c8 01       	movw	r24, r16
    125a:	0a de       	rcall	.-1004   	; 0xe70 <u8x8_cad_SendCmd>
    125c:	6d 2f       	mov	r22, r29
    125e:	6f 70       	andi	r22, 0x0F	; 15
    1260:	c8 01       	movw	r24, r16
    1262:	11 de       	rcall	.-990    	; 0xe86 <u8x8_cad_SendArg>
    1264:	f7 01       	movw	r30, r14
    1266:	64 81       	ldd	r22, Z+4	; 0x04
    1268:	60 6b       	ori	r22, 0xB0	; 176
    126a:	c8 01       	movw	r24, r16
    126c:	0c de       	rcall	.-1000   	; 0xe86 <u8x8_cad_SendArg>
    126e:	d7 01       	movw	r26, r14
    1270:	12 96       	adiw	r26, 0x02	; 2
    1272:	6c 91       	ld	r22, X
    1274:	12 97       	sbiw	r26, 0x02	; 2
    1276:	4d 91       	ld	r20, X+
    1278:	5c 91       	ld	r21, X
    127a:	66 0f       	add	r22, r22
    127c:	66 0f       	add	r22, r22
    127e:	66 0f       	add	r22, r22
    1280:	c8 01       	movw	r24, r16
    1282:	0c de       	rcall	.-1000   	; 0xe9c <u8x8_cad_SendData>
    1284:	c1 50       	subi	r28, 0x01	; 1
    1286:	99 f7       	brne	.-26     	; 0x126e <u8x8_d_ssd1306_sh1106_generic+0xc2>
    1288:	c8 01       	movw	r24, r16
    128a:	1d de       	rcall	.-966    	; 0xec6 <u8x8_cad_EndTransfer>
    128c:	81 e0       	ldi	r24, 0x01	; 1
    128e:	01 c0       	rjmp	.+2      	; 0x1292 <u8x8_d_ssd1306_sh1106_generic+0xe6>
    1290:	80 e0       	ldi	r24, 0x00	; 0
    1292:	df 91       	pop	r29
    1294:	cf 91       	pop	r28
    1296:	1f 91       	pop	r17
    1298:	0f 91       	pop	r16
    129a:	ff 90       	pop	r15
    129c:	ef 90       	pop	r14
    129e:	08 95       	ret

000012a0 <u8x8_d_ssd1306_128x64_vcomh0>:

uint8_t u8x8_d_ssd1306_128x64_vcomh0(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    12a0:	0f 93       	push	r16
    12a2:	1f 93       	push	r17
    12a4:	cf 93       	push	r28
    12a6:	8c 01       	movw	r16, r24
    12a8:	c6 2f       	mov	r28, r22
    
  if ( u8x8_d_ssd1306_sh1106_generic(u8x8, msg, arg_int, arg_ptr) != 0 )
    12aa:	80 df       	rcall	.-256    	; 0x11ac <u8x8_d_ssd1306_sh1106_generic>
    12ac:	81 11       	cpse	r24, r1
    12ae:	12 c0       	rjmp	.+36     	; 0x12d4 <u8x8_d_ssd1306_128x64_vcomh0+0x34>
    return 1;
  
  switch(msg)
    12b0:	c9 30       	cpi	r28, 0x09	; 9
    12b2:	51 f0       	breq	.+20     	; 0x12c8 <u8x8_d_ssd1306_128x64_vcomh0+0x28>
    12b4:	ca 30       	cpi	r28, 0x0A	; 10
    12b6:	79 f4       	brne	.+30     	; 0x12d6 <u8x8_d_ssd1306_128x64_vcomh0+0x36>
  {
    case U8X8_MSG_DISPLAY_INIT:
      u8x8_d_helper_display_init(u8x8);
    12b8:	c8 01       	movw	r24, r16
    12ba:	ae de       	rcall	.-676    	; 0x1018 <u8x8_d_helper_display_init>
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_vcomh0_init_seq);    
    12bc:	6b e6       	ldi	r22, 0x6B	; 107
    12be:	71 e0       	ldi	r23, 0x01	; 1
    12c0:	c8 01       	movw	r24, r16
    12c2:	0c de       	rcall	.-1000   	; 0xedc <u8x8_cad_SendSequence>
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_ssd1306_128x64_noname_display_info);
      break;
    default:
      return 0;
  }
  return 1;
    12c4:	81 e0       	ldi	r24, 0x01	; 1
  switch(msg)
  {
    case U8X8_MSG_DISPLAY_INIT:
      u8x8_d_helper_display_init(u8x8);
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_vcomh0_init_seq);    
      break;
    12c6:	07 c0       	rjmp	.+14     	; 0x12d6 <u8x8_d_ssd1306_128x64_vcomh0+0x36>
    case U8X8_MSG_DISPLAY_SETUP_MEMORY:
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_ssd1306_128x64_noname_display_info);
    12c8:	6b e3       	ldi	r22, 0x3B	; 59
    12ca:	71 e0       	ldi	r23, 0x01	; 1
    12cc:	c8 01       	movw	r24, r16
    12ce:	9c de       	rcall	.-712    	; 0x1008 <u8x8_d_helper_display_setup_memory>
      break;
    default:
      return 0;
  }
  return 1;
    12d0:	81 e0       	ldi	r24, 0x01	; 1
      u8x8_d_helper_display_init(u8x8);
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_vcomh0_init_seq);    
      break;
    case U8X8_MSG_DISPLAY_SETUP_MEMORY:
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_ssd1306_128x64_noname_display_info);
      break;
    12d2:	01 c0       	rjmp	.+2      	; 0x12d6 <u8x8_d_ssd1306_128x64_vcomh0+0x36>

uint8_t u8x8_d_ssd1306_128x64_vcomh0(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    
  if ( u8x8_d_ssd1306_sh1106_generic(u8x8, msg, arg_int, arg_ptr) != 0 )
    return 1;
    12d4:	81 e0       	ldi	r24, 0x01	; 1
      break;
    default:
      return 0;
  }
  return 1;
}
    12d6:	cf 91       	pop	r28
    12d8:	1f 91       	pop	r17
    12da:	0f 91       	pop	r16
    12dc:	08 95       	ret

000012de <u8x8_gpio_call>:
#include "u8x8.h"


void u8x8_gpio_call(u8x8_t *u8x8, uint8_t msg, uint8_t arg)
{
  u8x8->gpio_and_delay_cb(u8x8, msg, arg, NULL);
    12de:	dc 01       	movw	r26, r24
    12e0:	1a 96       	adiw	r26, 0x0a	; 10
    12e2:	ed 91       	ld	r30, X+
    12e4:	fc 91       	ld	r31, X
    12e6:	1b 97       	sbiw	r26, 0x0b	; 11
    12e8:	20 e0       	ldi	r18, 0x00	; 0
    12ea:	30 e0       	ldi	r19, 0x00	; 0
    12ec:	09 95       	icall
    12ee:	08 95       	ret

000012f0 <u8x8_dummy_cb>:

uint8_t u8x8_dummy_cb(U8X8_UNUSED u8x8_t *u8x8, U8X8_UNUSED uint8_t msg, U8X8_UNUSED uint8_t arg_int, U8X8_UNUSED void *arg_ptr)
{
  /* the dummy callback will not handle any message and will fail for all messages */
  return 0;
}
    12f0:	80 e0       	ldi	r24, 0x00	; 0
    12f2:	08 95       	ret

000012f4 <u8x8_SetupDefaults>:
    Setup u8x8
  Args:
    u8x8	An empty u8x8 structure
*/
void u8x8_SetupDefaults(u8x8_t *u8x8)
{
    12f4:	fc 01       	movw	r30, r24
    u8x8->display_info = NULL;
    12f6:	11 82       	std	Z+1, r1	; 0x01
    12f8:	10 82       	st	Z, r1
    u8x8->display_cb = u8x8_dummy_cb;
    12fa:	88 e7       	ldi	r24, 0x78	; 120
    12fc:	99 e0       	ldi	r25, 0x09	; 9
    12fe:	95 83       	std	Z+5, r25	; 0x05
    1300:	84 83       	std	Z+4, r24	; 0x04
    u8x8->cad_cb = u8x8_dummy_cb;
    1302:	97 83       	std	Z+7, r25	; 0x07
    1304:	86 83       	std	Z+6, r24	; 0x06
    u8x8->byte_cb = u8x8_dummy_cb;
    1306:	91 87       	std	Z+9, r25	; 0x09
    1308:	80 87       	std	Z+8, r24	; 0x08
    u8x8->gpio_and_delay_cb = u8x8_dummy_cb;
    130a:	93 87       	std	Z+11, r25	; 0x0b
    130c:	82 87       	std	Z+10, r24	; 0x0a
    u8x8->is_font_inverse_mode = 0;
    130e:	11 8a       	std	Z+17, r1	; 0x11
    u8x8->device_address = 0;
    1310:	14 8a       	std	Z+20, r1	; 0x14
    u8x8->utf8_state = 0;		/* also reset by u8x8_utf8_init */
    1312:	15 8a       	std	Z+21, r1	; 0x15
    u8x8->i2c_address = 255;
    1314:	8f ef       	ldi	r24, 0xFF	; 255
    1316:	82 8b       	std	Z+18, r24	; 0x12
    u8x8->debounce_default_pin_state = 255;	/* assume all low active buttons */
    1318:	87 8b       	std	Z+23, r24	; 0x17
    131a:	08 95       	ret

0000131c <u8x8_Setup>:
    byte_cb			Display controller/communication specific callback funtion
    gpio_and_delay_cb	Environment specific callback function

*/
void u8x8_Setup(u8x8_t *u8x8, u8x8_msg_cb display_cb, u8x8_msg_cb cad_cb, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)
{
    131c:	af 92       	push	r10
    131e:	bf 92       	push	r11
    1320:	cf 92       	push	r12
    1322:	df 92       	push	r13
    1324:	ef 92       	push	r14
    1326:	ff 92       	push	r15
    1328:	0f 93       	push	r16
    132a:	1f 93       	push	r17
    132c:	cf 93       	push	r28
    132e:	df 93       	push	r29
    1330:	ec 01       	movw	r28, r24
    1332:	5b 01       	movw	r10, r22
    1334:	6a 01       	movw	r12, r20
    1336:	79 01       	movw	r14, r18
  /* setup defaults and reset pins to U8X8_PIN_NONE */
  u8x8_SetupDefaults(u8x8);
    1338:	dd df       	rcall	.-70     	; 0x12f4 <u8x8_SetupDefaults>

  /* setup specific callbacks */
  u8x8->display_cb = display_cb;
    133a:	bd 82       	std	Y+5, r11	; 0x05
    133c:	ac 82       	std	Y+4, r10	; 0x04
  u8x8->cad_cb = cad_cb;
    133e:	df 82       	std	Y+7, r13	; 0x07
    1340:	ce 82       	std	Y+6, r12	; 0x06
  u8x8->byte_cb = byte_cb;
    1342:	f9 86       	std	Y+9, r15	; 0x09
    1344:	e8 86       	std	Y+8, r14	; 0x08
  u8x8->gpio_and_delay_cb = gpio_and_delay_cb;
    1346:	1b 87       	std	Y+11, r17	; 0x0b
    1348:	0a 87       	std	Y+10, r16	; 0x0a

  /* setup display info */
  u8x8_SetupMemory(u8x8);
    134a:	ce 01       	movw	r24, r28
    134c:	bb de       	rcall	.-650    	; 0x10c4 <u8x8_SetupMemory>
}
    134e:	df 91       	pop	r29
    1350:	cf 91       	pop	r28
    1352:	1f 91       	pop	r17
    1354:	0f 91       	pop	r16
    1356:	ff 90       	pop	r15
    1358:	ef 90       	pop	r14
    135a:	df 90       	pop	r13
    135c:	cf 90       	pop	r12
    135e:	bf 90       	pop	r11
    1360:	af 90       	pop	r10
    1362:	08 95       	ret

00001364 <__fixsfsi>:
    1364:	04 d0       	rcall	.+8      	; 0x136e <__fixunssfsi>
    1366:	68 94       	set
    1368:	b1 11       	cpse	r27, r1
    136a:	8d c0       	rjmp	.+282    	; 0x1486 <__fp_szero>
    136c:	08 95       	ret

0000136e <__fixunssfsi>:
    136e:	70 d0       	rcall	.+224    	; 0x1450 <__fp_splitA>
    1370:	88 f0       	brcs	.+34     	; 0x1394 <__fixunssfsi+0x26>
    1372:	9f 57       	subi	r25, 0x7F	; 127
    1374:	90 f0       	brcs	.+36     	; 0x139a <__fixunssfsi+0x2c>
    1376:	b9 2f       	mov	r27, r25
    1378:	99 27       	eor	r25, r25
    137a:	b7 51       	subi	r27, 0x17	; 23
    137c:	a0 f0       	brcs	.+40     	; 0x13a6 <__fixunssfsi+0x38>
    137e:	d1 f0       	breq	.+52     	; 0x13b4 <__fixunssfsi+0x46>
    1380:	66 0f       	add	r22, r22
    1382:	77 1f       	adc	r23, r23
    1384:	88 1f       	adc	r24, r24
    1386:	99 1f       	adc	r25, r25
    1388:	1a f0       	brmi	.+6      	; 0x1390 <__fixunssfsi+0x22>
    138a:	ba 95       	dec	r27
    138c:	c9 f7       	brne	.-14     	; 0x1380 <__fixunssfsi+0x12>
    138e:	12 c0       	rjmp	.+36     	; 0x13b4 <__fixunssfsi+0x46>
    1390:	b1 30       	cpi	r27, 0x01	; 1
    1392:	81 f0       	breq	.+32     	; 0x13b4 <__fixunssfsi+0x46>
    1394:	77 d0       	rcall	.+238    	; 0x1484 <__fp_zero>
    1396:	b1 e0       	ldi	r27, 0x01	; 1
    1398:	08 95       	ret
    139a:	74 c0       	rjmp	.+232    	; 0x1484 <__fp_zero>
    139c:	67 2f       	mov	r22, r23
    139e:	78 2f       	mov	r23, r24
    13a0:	88 27       	eor	r24, r24
    13a2:	b8 5f       	subi	r27, 0xF8	; 248
    13a4:	39 f0       	breq	.+14     	; 0x13b4 <__fixunssfsi+0x46>
    13a6:	b9 3f       	cpi	r27, 0xF9	; 249
    13a8:	cc f3       	brlt	.-14     	; 0x139c <__fixunssfsi+0x2e>
    13aa:	86 95       	lsr	r24
    13ac:	77 95       	ror	r23
    13ae:	67 95       	ror	r22
    13b0:	b3 95       	inc	r27
    13b2:	d9 f7       	brne	.-10     	; 0x13aa <__fixunssfsi+0x3c>
    13b4:	3e f4       	brtc	.+14     	; 0x13c4 <__fixunssfsi+0x56>
    13b6:	90 95       	com	r25
    13b8:	80 95       	com	r24
    13ba:	70 95       	com	r23
    13bc:	61 95       	neg	r22
    13be:	7f 4f       	sbci	r23, 0xFF	; 255
    13c0:	8f 4f       	sbci	r24, 0xFF	; 255
    13c2:	9f 4f       	sbci	r25, 0xFF	; 255
    13c4:	08 95       	ret

000013c6 <__floatunsisf>:
    13c6:	e8 94       	clt
    13c8:	09 c0       	rjmp	.+18     	; 0x13dc <__floatsisf+0x12>

000013ca <__floatsisf>:
    13ca:	97 fb       	bst	r25, 7
    13cc:	3e f4       	brtc	.+14     	; 0x13dc <__floatsisf+0x12>
    13ce:	90 95       	com	r25
    13d0:	80 95       	com	r24
    13d2:	70 95       	com	r23
    13d4:	61 95       	neg	r22
    13d6:	7f 4f       	sbci	r23, 0xFF	; 255
    13d8:	8f 4f       	sbci	r24, 0xFF	; 255
    13da:	9f 4f       	sbci	r25, 0xFF	; 255
    13dc:	99 23       	and	r25, r25
    13de:	a9 f0       	breq	.+42     	; 0x140a <__floatsisf+0x40>
    13e0:	f9 2f       	mov	r31, r25
    13e2:	96 e9       	ldi	r25, 0x96	; 150
    13e4:	bb 27       	eor	r27, r27
    13e6:	93 95       	inc	r25
    13e8:	f6 95       	lsr	r31
    13ea:	87 95       	ror	r24
    13ec:	77 95       	ror	r23
    13ee:	67 95       	ror	r22
    13f0:	b7 95       	ror	r27
    13f2:	f1 11       	cpse	r31, r1
    13f4:	f8 cf       	rjmp	.-16     	; 0x13e6 <__floatsisf+0x1c>
    13f6:	fa f4       	brpl	.+62     	; 0x1436 <__floatsisf+0x6c>
    13f8:	bb 0f       	add	r27, r27
    13fa:	11 f4       	brne	.+4      	; 0x1400 <__floatsisf+0x36>
    13fc:	60 ff       	sbrs	r22, 0
    13fe:	1b c0       	rjmp	.+54     	; 0x1436 <__floatsisf+0x6c>
    1400:	6f 5f       	subi	r22, 0xFF	; 255
    1402:	7f 4f       	sbci	r23, 0xFF	; 255
    1404:	8f 4f       	sbci	r24, 0xFF	; 255
    1406:	9f 4f       	sbci	r25, 0xFF	; 255
    1408:	16 c0       	rjmp	.+44     	; 0x1436 <__floatsisf+0x6c>
    140a:	88 23       	and	r24, r24
    140c:	11 f0       	breq	.+4      	; 0x1412 <__floatsisf+0x48>
    140e:	96 e9       	ldi	r25, 0x96	; 150
    1410:	11 c0       	rjmp	.+34     	; 0x1434 <__floatsisf+0x6a>
    1412:	77 23       	and	r23, r23
    1414:	21 f0       	breq	.+8      	; 0x141e <__floatsisf+0x54>
    1416:	9e e8       	ldi	r25, 0x8E	; 142
    1418:	87 2f       	mov	r24, r23
    141a:	76 2f       	mov	r23, r22
    141c:	05 c0       	rjmp	.+10     	; 0x1428 <__floatsisf+0x5e>
    141e:	66 23       	and	r22, r22
    1420:	71 f0       	breq	.+28     	; 0x143e <__floatsisf+0x74>
    1422:	96 e8       	ldi	r25, 0x86	; 134
    1424:	86 2f       	mov	r24, r22
    1426:	70 e0       	ldi	r23, 0x00	; 0
    1428:	60 e0       	ldi	r22, 0x00	; 0
    142a:	2a f0       	brmi	.+10     	; 0x1436 <__floatsisf+0x6c>
    142c:	9a 95       	dec	r25
    142e:	66 0f       	add	r22, r22
    1430:	77 1f       	adc	r23, r23
    1432:	88 1f       	adc	r24, r24
    1434:	da f7       	brpl	.-10     	; 0x142c <__floatsisf+0x62>
    1436:	88 0f       	add	r24, r24
    1438:	96 95       	lsr	r25
    143a:	87 95       	ror	r24
    143c:	97 f9       	bld	r25, 7
    143e:	08 95       	ret

00001440 <__fp_split3>:
    1440:	57 fd       	sbrc	r21, 7
    1442:	90 58       	subi	r25, 0x80	; 128
    1444:	44 0f       	add	r20, r20
    1446:	55 1f       	adc	r21, r21
    1448:	59 f0       	breq	.+22     	; 0x1460 <__fp_splitA+0x10>
    144a:	5f 3f       	cpi	r21, 0xFF	; 255
    144c:	71 f0       	breq	.+28     	; 0x146a <__fp_splitA+0x1a>
    144e:	47 95       	ror	r20

00001450 <__fp_splitA>:
    1450:	88 0f       	add	r24, r24
    1452:	97 fb       	bst	r25, 7
    1454:	99 1f       	adc	r25, r25
    1456:	61 f0       	breq	.+24     	; 0x1470 <__fp_splitA+0x20>
    1458:	9f 3f       	cpi	r25, 0xFF	; 255
    145a:	79 f0       	breq	.+30     	; 0x147a <__fp_splitA+0x2a>
    145c:	87 95       	ror	r24
    145e:	08 95       	ret
    1460:	12 16       	cp	r1, r18
    1462:	13 06       	cpc	r1, r19
    1464:	14 06       	cpc	r1, r20
    1466:	55 1f       	adc	r21, r21
    1468:	f2 cf       	rjmp	.-28     	; 0x144e <__fp_split3+0xe>
    146a:	46 95       	lsr	r20
    146c:	f1 df       	rcall	.-30     	; 0x1450 <__fp_splitA>
    146e:	08 c0       	rjmp	.+16     	; 0x1480 <__fp_splitA+0x30>
    1470:	16 16       	cp	r1, r22
    1472:	17 06       	cpc	r1, r23
    1474:	18 06       	cpc	r1, r24
    1476:	99 1f       	adc	r25, r25
    1478:	f1 cf       	rjmp	.-30     	; 0x145c <__fp_splitA+0xc>
    147a:	86 95       	lsr	r24
    147c:	71 05       	cpc	r23, r1
    147e:	61 05       	cpc	r22, r1
    1480:	08 94       	sec
    1482:	08 95       	ret

00001484 <__fp_zero>:
    1484:	e8 94       	clt

00001486 <__fp_szero>:
    1486:	bb 27       	eor	r27, r27
    1488:	66 27       	eor	r22, r22
    148a:	77 27       	eor	r23, r23
    148c:	cb 01       	movw	r24, r22
    148e:	97 f9       	bld	r25, 7
    1490:	08 95       	ret

00001492 <__mulsf3>:
    1492:	0b d0       	rcall	.+22     	; 0x14aa <__mulsf3x>
    1494:	78 c0       	rjmp	.+240    	; 0x1586 <__fp_round>
    1496:	69 d0       	rcall	.+210    	; 0x156a <__fp_pscA>
    1498:	28 f0       	brcs	.+10     	; 0x14a4 <__mulsf3+0x12>
    149a:	6e d0       	rcall	.+220    	; 0x1578 <__fp_pscB>
    149c:	18 f0       	brcs	.+6      	; 0x14a4 <__mulsf3+0x12>
    149e:	95 23       	and	r25, r21
    14a0:	09 f0       	breq	.+2      	; 0x14a4 <__mulsf3+0x12>
    14a2:	5a c0       	rjmp	.+180    	; 0x1558 <__fp_inf>
    14a4:	5f c0       	rjmp	.+190    	; 0x1564 <__fp_nan>
    14a6:	11 24       	eor	r1, r1
    14a8:	ee cf       	rjmp	.-36     	; 0x1486 <__fp_szero>

000014aa <__mulsf3x>:
    14aa:	ca df       	rcall	.-108    	; 0x1440 <__fp_split3>
    14ac:	a0 f3       	brcs	.-24     	; 0x1496 <__mulsf3+0x4>

000014ae <__mulsf3_pse>:
    14ae:	95 9f       	mul	r25, r21
    14b0:	d1 f3       	breq	.-12     	; 0x14a6 <__mulsf3+0x14>
    14b2:	95 0f       	add	r25, r21
    14b4:	50 e0       	ldi	r21, 0x00	; 0
    14b6:	55 1f       	adc	r21, r21
    14b8:	62 9f       	mul	r22, r18
    14ba:	f0 01       	movw	r30, r0
    14bc:	72 9f       	mul	r23, r18
    14be:	bb 27       	eor	r27, r27
    14c0:	f0 0d       	add	r31, r0
    14c2:	b1 1d       	adc	r27, r1
    14c4:	63 9f       	mul	r22, r19
    14c6:	aa 27       	eor	r26, r26
    14c8:	f0 0d       	add	r31, r0
    14ca:	b1 1d       	adc	r27, r1
    14cc:	aa 1f       	adc	r26, r26
    14ce:	64 9f       	mul	r22, r20
    14d0:	66 27       	eor	r22, r22
    14d2:	b0 0d       	add	r27, r0
    14d4:	a1 1d       	adc	r26, r1
    14d6:	66 1f       	adc	r22, r22
    14d8:	82 9f       	mul	r24, r18
    14da:	22 27       	eor	r18, r18
    14dc:	b0 0d       	add	r27, r0
    14de:	a1 1d       	adc	r26, r1
    14e0:	62 1f       	adc	r22, r18
    14e2:	73 9f       	mul	r23, r19
    14e4:	b0 0d       	add	r27, r0
    14e6:	a1 1d       	adc	r26, r1
    14e8:	62 1f       	adc	r22, r18
    14ea:	83 9f       	mul	r24, r19
    14ec:	a0 0d       	add	r26, r0
    14ee:	61 1d       	adc	r22, r1
    14f0:	22 1f       	adc	r18, r18
    14f2:	74 9f       	mul	r23, r20
    14f4:	33 27       	eor	r19, r19
    14f6:	a0 0d       	add	r26, r0
    14f8:	61 1d       	adc	r22, r1
    14fa:	23 1f       	adc	r18, r19
    14fc:	84 9f       	mul	r24, r20
    14fe:	60 0d       	add	r22, r0
    1500:	21 1d       	adc	r18, r1
    1502:	82 2f       	mov	r24, r18
    1504:	76 2f       	mov	r23, r22
    1506:	6a 2f       	mov	r22, r26
    1508:	11 24       	eor	r1, r1
    150a:	9f 57       	subi	r25, 0x7F	; 127
    150c:	50 40       	sbci	r21, 0x00	; 0
    150e:	8a f0       	brmi	.+34     	; 0x1532 <__mulsf3_pse+0x84>
    1510:	e1 f0       	breq	.+56     	; 0x154a <__mulsf3_pse+0x9c>
    1512:	88 23       	and	r24, r24
    1514:	4a f0       	brmi	.+18     	; 0x1528 <__mulsf3_pse+0x7a>
    1516:	ee 0f       	add	r30, r30
    1518:	ff 1f       	adc	r31, r31
    151a:	bb 1f       	adc	r27, r27
    151c:	66 1f       	adc	r22, r22
    151e:	77 1f       	adc	r23, r23
    1520:	88 1f       	adc	r24, r24
    1522:	91 50       	subi	r25, 0x01	; 1
    1524:	50 40       	sbci	r21, 0x00	; 0
    1526:	a9 f7       	brne	.-22     	; 0x1512 <__mulsf3_pse+0x64>
    1528:	9e 3f       	cpi	r25, 0xFE	; 254
    152a:	51 05       	cpc	r21, r1
    152c:	70 f0       	brcs	.+28     	; 0x154a <__mulsf3_pse+0x9c>
    152e:	14 c0       	rjmp	.+40     	; 0x1558 <__fp_inf>
    1530:	aa cf       	rjmp	.-172    	; 0x1486 <__fp_szero>
    1532:	5f 3f       	cpi	r21, 0xFF	; 255
    1534:	ec f3       	brlt	.-6      	; 0x1530 <__mulsf3_pse+0x82>
    1536:	98 3e       	cpi	r25, 0xE8	; 232
    1538:	dc f3       	brlt	.-10     	; 0x1530 <__mulsf3_pse+0x82>
    153a:	86 95       	lsr	r24
    153c:	77 95       	ror	r23
    153e:	67 95       	ror	r22
    1540:	b7 95       	ror	r27
    1542:	f7 95       	ror	r31
    1544:	e7 95       	ror	r30
    1546:	9f 5f       	subi	r25, 0xFF	; 255
    1548:	c1 f7       	brne	.-16     	; 0x153a <__mulsf3_pse+0x8c>
    154a:	fe 2b       	or	r31, r30
    154c:	88 0f       	add	r24, r24
    154e:	91 1d       	adc	r25, r1
    1550:	96 95       	lsr	r25
    1552:	87 95       	ror	r24
    1554:	97 f9       	bld	r25, 7
    1556:	08 95       	ret

00001558 <__fp_inf>:
    1558:	97 f9       	bld	r25, 7
    155a:	9f 67       	ori	r25, 0x7F	; 127
    155c:	80 e8       	ldi	r24, 0x80	; 128
    155e:	70 e0       	ldi	r23, 0x00	; 0
    1560:	60 e0       	ldi	r22, 0x00	; 0
    1562:	08 95       	ret

00001564 <__fp_nan>:
    1564:	9f ef       	ldi	r25, 0xFF	; 255
    1566:	80 ec       	ldi	r24, 0xC0	; 192
    1568:	08 95       	ret

0000156a <__fp_pscA>:
    156a:	00 24       	eor	r0, r0
    156c:	0a 94       	dec	r0
    156e:	16 16       	cp	r1, r22
    1570:	17 06       	cpc	r1, r23
    1572:	18 06       	cpc	r1, r24
    1574:	09 06       	cpc	r0, r25
    1576:	08 95       	ret

00001578 <__fp_pscB>:
    1578:	00 24       	eor	r0, r0
    157a:	0a 94       	dec	r0
    157c:	12 16       	cp	r1, r18
    157e:	13 06       	cpc	r1, r19
    1580:	14 06       	cpc	r1, r20
    1582:	05 06       	cpc	r0, r21
    1584:	08 95       	ret

00001586 <__fp_round>:
    1586:	09 2e       	mov	r0, r25
    1588:	03 94       	inc	r0
    158a:	00 0c       	add	r0, r0
    158c:	11 f4       	brne	.+4      	; 0x1592 <__fp_round+0xc>
    158e:	88 23       	and	r24, r24
    1590:	52 f0       	brmi	.+20     	; 0x15a6 <__fp_round+0x20>
    1592:	bb 0f       	add	r27, r27
    1594:	40 f4       	brcc	.+16     	; 0x15a6 <__fp_round+0x20>
    1596:	bf 2b       	or	r27, r31
    1598:	11 f4       	brne	.+4      	; 0x159e <__fp_round+0x18>
    159a:	60 ff       	sbrs	r22, 0
    159c:	04 c0       	rjmp	.+8      	; 0x15a6 <__fp_round+0x20>
    159e:	6f 5f       	subi	r22, 0xFF	; 255
    15a0:	7f 4f       	sbci	r23, 0xFF	; 255
    15a2:	8f 4f       	sbci	r24, 0xFF	; 255
    15a4:	9f 4f       	sbci	r25, 0xFF	; 255
    15a6:	08 95       	ret

000015a8 <__tablejump2__>:
    15a8:	ee 0f       	add	r30, r30
    15aa:	ff 1f       	adc	r31, r31
    15ac:	00 24       	eor	r0, r0
    15ae:	00 1c       	adc	r0, r0
    15b0:	0b be       	out	0x3b, r0	; 59
    15b2:	07 90       	elpm	r0, Z+
    15b4:	f6 91       	elpm	r31, Z
    15b6:	e0 2d       	mov	r30, r0
    15b8:	09 94       	ijmp

000015ba <sprintf>:
    15ba:	0f 93       	push	r16
    15bc:	1f 93       	push	r17
    15be:	cf 93       	push	r28
    15c0:	df 93       	push	r29
    15c2:	cd b7       	in	r28, 0x3d	; 61
    15c4:	de b7       	in	r29, 0x3e	; 62
    15c6:	2e 97       	sbiw	r28, 0x0e	; 14
    15c8:	0f b6       	in	r0, 0x3f	; 63
    15ca:	f8 94       	cli
    15cc:	de bf       	out	0x3e, r29	; 62
    15ce:	0f be       	out	0x3f, r0	; 63
    15d0:	cd bf       	out	0x3d, r28	; 61
    15d2:	0d 89       	ldd	r16, Y+21	; 0x15
    15d4:	1e 89       	ldd	r17, Y+22	; 0x16
    15d6:	86 e0       	ldi	r24, 0x06	; 6
    15d8:	8c 83       	std	Y+4, r24	; 0x04
    15da:	1a 83       	std	Y+2, r17	; 0x02
    15dc:	09 83       	std	Y+1, r16	; 0x01
    15de:	8f ef       	ldi	r24, 0xFF	; 255
    15e0:	9f e7       	ldi	r25, 0x7F	; 127
    15e2:	9e 83       	std	Y+6, r25	; 0x06
    15e4:	8d 83       	std	Y+5, r24	; 0x05
    15e6:	ae 01       	movw	r20, r28
    15e8:	47 5e       	subi	r20, 0xE7	; 231
    15ea:	5f 4f       	sbci	r21, 0xFF	; 255
    15ec:	6f 89       	ldd	r22, Y+23	; 0x17
    15ee:	78 8d       	ldd	r23, Y+24	; 0x18
    15f0:	ce 01       	movw	r24, r28
    15f2:	01 96       	adiw	r24, 0x01	; 1
    15f4:	10 d0       	rcall	.+32     	; 0x1616 <vfprintf>
    15f6:	ef 81       	ldd	r30, Y+7	; 0x07
    15f8:	f8 85       	ldd	r31, Y+8	; 0x08
    15fa:	e0 0f       	add	r30, r16
    15fc:	f1 1f       	adc	r31, r17
    15fe:	10 82       	st	Z, r1
    1600:	2e 96       	adiw	r28, 0x0e	; 14
    1602:	0f b6       	in	r0, 0x3f	; 63
    1604:	f8 94       	cli
    1606:	de bf       	out	0x3e, r29	; 62
    1608:	0f be       	out	0x3f, r0	; 63
    160a:	cd bf       	out	0x3d, r28	; 61
    160c:	df 91       	pop	r29
    160e:	cf 91       	pop	r28
    1610:	1f 91       	pop	r17
    1612:	0f 91       	pop	r16
    1614:	08 95       	ret

00001616 <vfprintf>:
    1616:	2f 92       	push	r2
    1618:	3f 92       	push	r3
    161a:	4f 92       	push	r4
    161c:	5f 92       	push	r5
    161e:	6f 92       	push	r6
    1620:	7f 92       	push	r7
    1622:	8f 92       	push	r8
    1624:	9f 92       	push	r9
    1626:	af 92       	push	r10
    1628:	bf 92       	push	r11
    162a:	cf 92       	push	r12
    162c:	df 92       	push	r13
    162e:	ef 92       	push	r14
    1630:	ff 92       	push	r15
    1632:	0f 93       	push	r16
    1634:	1f 93       	push	r17
    1636:	cf 93       	push	r28
    1638:	df 93       	push	r29
    163a:	cd b7       	in	r28, 0x3d	; 61
    163c:	de b7       	in	r29, 0x3e	; 62
    163e:	2b 97       	sbiw	r28, 0x0b	; 11
    1640:	0f b6       	in	r0, 0x3f	; 63
    1642:	f8 94       	cli
    1644:	de bf       	out	0x3e, r29	; 62
    1646:	0f be       	out	0x3f, r0	; 63
    1648:	cd bf       	out	0x3d, r28	; 61
    164a:	6c 01       	movw	r12, r24
    164c:	7b 01       	movw	r14, r22
    164e:	8a 01       	movw	r16, r20
    1650:	fc 01       	movw	r30, r24
    1652:	17 82       	std	Z+7, r1	; 0x07
    1654:	16 82       	std	Z+6, r1	; 0x06
    1656:	83 81       	ldd	r24, Z+3	; 0x03
    1658:	81 ff       	sbrs	r24, 1
    165a:	bf c1       	rjmp	.+894    	; 0x19da <vfprintf+0x3c4>
    165c:	ce 01       	movw	r24, r28
    165e:	01 96       	adiw	r24, 0x01	; 1
    1660:	3c 01       	movw	r6, r24
    1662:	f6 01       	movw	r30, r12
    1664:	93 81       	ldd	r25, Z+3	; 0x03
    1666:	f7 01       	movw	r30, r14
    1668:	93 fd       	sbrc	r25, 3
    166a:	85 91       	lpm	r24, Z+
    166c:	93 ff       	sbrs	r25, 3
    166e:	81 91       	ld	r24, Z+
    1670:	7f 01       	movw	r14, r30
    1672:	88 23       	and	r24, r24
    1674:	09 f4       	brne	.+2      	; 0x1678 <vfprintf+0x62>
    1676:	ad c1       	rjmp	.+858    	; 0x19d2 <vfprintf+0x3bc>
    1678:	85 32       	cpi	r24, 0x25	; 37
    167a:	39 f4       	brne	.+14     	; 0x168a <vfprintf+0x74>
    167c:	93 fd       	sbrc	r25, 3
    167e:	85 91       	lpm	r24, Z+
    1680:	93 ff       	sbrs	r25, 3
    1682:	81 91       	ld	r24, Z+
    1684:	7f 01       	movw	r14, r30
    1686:	85 32       	cpi	r24, 0x25	; 37
    1688:	21 f4       	brne	.+8      	; 0x1692 <vfprintf+0x7c>
    168a:	b6 01       	movw	r22, r12
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	d6 d1       	rcall	.+940    	; 0x1a3c <fputc>
    1690:	e8 cf       	rjmp	.-48     	; 0x1662 <vfprintf+0x4c>
    1692:	91 2c       	mov	r9, r1
    1694:	21 2c       	mov	r2, r1
    1696:	31 2c       	mov	r3, r1
    1698:	ff e1       	ldi	r31, 0x1F	; 31
    169a:	f3 15       	cp	r31, r3
    169c:	d8 f0       	brcs	.+54     	; 0x16d4 <vfprintf+0xbe>
    169e:	8b 32       	cpi	r24, 0x2B	; 43
    16a0:	79 f0       	breq	.+30     	; 0x16c0 <vfprintf+0xaa>
    16a2:	38 f4       	brcc	.+14     	; 0x16b2 <vfprintf+0x9c>
    16a4:	80 32       	cpi	r24, 0x20	; 32
    16a6:	79 f0       	breq	.+30     	; 0x16c6 <vfprintf+0xb0>
    16a8:	83 32       	cpi	r24, 0x23	; 35
    16aa:	a1 f4       	brne	.+40     	; 0x16d4 <vfprintf+0xbe>
    16ac:	23 2d       	mov	r18, r3
    16ae:	20 61       	ori	r18, 0x10	; 16
    16b0:	1d c0       	rjmp	.+58     	; 0x16ec <vfprintf+0xd6>
    16b2:	8d 32       	cpi	r24, 0x2D	; 45
    16b4:	61 f0       	breq	.+24     	; 0x16ce <vfprintf+0xb8>
    16b6:	80 33       	cpi	r24, 0x30	; 48
    16b8:	69 f4       	brne	.+26     	; 0x16d4 <vfprintf+0xbe>
    16ba:	23 2d       	mov	r18, r3
    16bc:	21 60       	ori	r18, 0x01	; 1
    16be:	16 c0       	rjmp	.+44     	; 0x16ec <vfprintf+0xd6>
    16c0:	83 2d       	mov	r24, r3
    16c2:	82 60       	ori	r24, 0x02	; 2
    16c4:	38 2e       	mov	r3, r24
    16c6:	e3 2d       	mov	r30, r3
    16c8:	e4 60       	ori	r30, 0x04	; 4
    16ca:	3e 2e       	mov	r3, r30
    16cc:	2a c0       	rjmp	.+84     	; 0x1722 <vfprintf+0x10c>
    16ce:	f3 2d       	mov	r31, r3
    16d0:	f8 60       	ori	r31, 0x08	; 8
    16d2:	1d c0       	rjmp	.+58     	; 0x170e <vfprintf+0xf8>
    16d4:	37 fc       	sbrc	r3, 7
    16d6:	2d c0       	rjmp	.+90     	; 0x1732 <vfprintf+0x11c>
    16d8:	20 ed       	ldi	r18, 0xD0	; 208
    16da:	28 0f       	add	r18, r24
    16dc:	2a 30       	cpi	r18, 0x0A	; 10
    16de:	40 f0       	brcs	.+16     	; 0x16f0 <vfprintf+0xda>
    16e0:	8e 32       	cpi	r24, 0x2E	; 46
    16e2:	b9 f4       	brne	.+46     	; 0x1712 <vfprintf+0xfc>
    16e4:	36 fc       	sbrc	r3, 6
    16e6:	75 c1       	rjmp	.+746    	; 0x19d2 <vfprintf+0x3bc>
    16e8:	23 2d       	mov	r18, r3
    16ea:	20 64       	ori	r18, 0x40	; 64
    16ec:	32 2e       	mov	r3, r18
    16ee:	19 c0       	rjmp	.+50     	; 0x1722 <vfprintf+0x10c>
    16f0:	36 fe       	sbrs	r3, 6
    16f2:	06 c0       	rjmp	.+12     	; 0x1700 <vfprintf+0xea>
    16f4:	8a e0       	ldi	r24, 0x0A	; 10
    16f6:	98 9e       	mul	r9, r24
    16f8:	20 0d       	add	r18, r0
    16fa:	11 24       	eor	r1, r1
    16fc:	92 2e       	mov	r9, r18
    16fe:	11 c0       	rjmp	.+34     	; 0x1722 <vfprintf+0x10c>
    1700:	ea e0       	ldi	r30, 0x0A	; 10
    1702:	2e 9e       	mul	r2, r30
    1704:	20 0d       	add	r18, r0
    1706:	11 24       	eor	r1, r1
    1708:	22 2e       	mov	r2, r18
    170a:	f3 2d       	mov	r31, r3
    170c:	f0 62       	ori	r31, 0x20	; 32
    170e:	3f 2e       	mov	r3, r31
    1710:	08 c0       	rjmp	.+16     	; 0x1722 <vfprintf+0x10c>
    1712:	8c 36       	cpi	r24, 0x6C	; 108
    1714:	21 f4       	brne	.+8      	; 0x171e <vfprintf+0x108>
    1716:	83 2d       	mov	r24, r3
    1718:	80 68       	ori	r24, 0x80	; 128
    171a:	38 2e       	mov	r3, r24
    171c:	02 c0       	rjmp	.+4      	; 0x1722 <vfprintf+0x10c>
    171e:	88 36       	cpi	r24, 0x68	; 104
    1720:	41 f4       	brne	.+16     	; 0x1732 <vfprintf+0x11c>
    1722:	f7 01       	movw	r30, r14
    1724:	93 fd       	sbrc	r25, 3
    1726:	85 91       	lpm	r24, Z+
    1728:	93 ff       	sbrs	r25, 3
    172a:	81 91       	ld	r24, Z+
    172c:	7f 01       	movw	r14, r30
    172e:	81 11       	cpse	r24, r1
    1730:	b3 cf       	rjmp	.-154    	; 0x1698 <vfprintf+0x82>
    1732:	98 2f       	mov	r25, r24
    1734:	9f 7d       	andi	r25, 0xDF	; 223
    1736:	95 54       	subi	r25, 0x45	; 69
    1738:	93 30       	cpi	r25, 0x03	; 3
    173a:	28 f4       	brcc	.+10     	; 0x1746 <vfprintf+0x130>
    173c:	0c 5f       	subi	r16, 0xFC	; 252
    173e:	1f 4f       	sbci	r17, 0xFF	; 255
    1740:	9f e3       	ldi	r25, 0x3F	; 63
    1742:	99 83       	std	Y+1, r25	; 0x01
    1744:	0d c0       	rjmp	.+26     	; 0x1760 <vfprintf+0x14a>
    1746:	83 36       	cpi	r24, 0x63	; 99
    1748:	31 f0       	breq	.+12     	; 0x1756 <vfprintf+0x140>
    174a:	83 37       	cpi	r24, 0x73	; 115
    174c:	71 f0       	breq	.+28     	; 0x176a <vfprintf+0x154>
    174e:	83 35       	cpi	r24, 0x53	; 83
    1750:	09 f0       	breq	.+2      	; 0x1754 <vfprintf+0x13e>
    1752:	55 c0       	rjmp	.+170    	; 0x17fe <vfprintf+0x1e8>
    1754:	20 c0       	rjmp	.+64     	; 0x1796 <vfprintf+0x180>
    1756:	f8 01       	movw	r30, r16
    1758:	80 81       	ld	r24, Z
    175a:	89 83       	std	Y+1, r24	; 0x01
    175c:	0e 5f       	subi	r16, 0xFE	; 254
    175e:	1f 4f       	sbci	r17, 0xFF	; 255
    1760:	88 24       	eor	r8, r8
    1762:	83 94       	inc	r8
    1764:	91 2c       	mov	r9, r1
    1766:	53 01       	movw	r10, r6
    1768:	12 c0       	rjmp	.+36     	; 0x178e <vfprintf+0x178>
    176a:	28 01       	movw	r4, r16
    176c:	f2 e0       	ldi	r31, 0x02	; 2
    176e:	4f 0e       	add	r4, r31
    1770:	51 1c       	adc	r5, r1
    1772:	f8 01       	movw	r30, r16
    1774:	a0 80       	ld	r10, Z
    1776:	b1 80       	ldd	r11, Z+1	; 0x01
    1778:	36 fe       	sbrs	r3, 6
    177a:	03 c0       	rjmp	.+6      	; 0x1782 <vfprintf+0x16c>
    177c:	69 2d       	mov	r22, r9
    177e:	70 e0       	ldi	r23, 0x00	; 0
    1780:	02 c0       	rjmp	.+4      	; 0x1786 <vfprintf+0x170>
    1782:	6f ef       	ldi	r22, 0xFF	; 255
    1784:	7f ef       	ldi	r23, 0xFF	; 255
    1786:	c5 01       	movw	r24, r10
    1788:	4e d1       	rcall	.+668    	; 0x1a26 <strnlen>
    178a:	4c 01       	movw	r8, r24
    178c:	82 01       	movw	r16, r4
    178e:	f3 2d       	mov	r31, r3
    1790:	ff 77       	andi	r31, 0x7F	; 127
    1792:	3f 2e       	mov	r3, r31
    1794:	15 c0       	rjmp	.+42     	; 0x17c0 <vfprintf+0x1aa>
    1796:	28 01       	movw	r4, r16
    1798:	22 e0       	ldi	r18, 0x02	; 2
    179a:	42 0e       	add	r4, r18
    179c:	51 1c       	adc	r5, r1
    179e:	f8 01       	movw	r30, r16
    17a0:	a0 80       	ld	r10, Z
    17a2:	b1 80       	ldd	r11, Z+1	; 0x01
    17a4:	36 fe       	sbrs	r3, 6
    17a6:	03 c0       	rjmp	.+6      	; 0x17ae <vfprintf+0x198>
    17a8:	69 2d       	mov	r22, r9
    17aa:	70 e0       	ldi	r23, 0x00	; 0
    17ac:	02 c0       	rjmp	.+4      	; 0x17b2 <vfprintf+0x19c>
    17ae:	6f ef       	ldi	r22, 0xFF	; 255
    17b0:	7f ef       	ldi	r23, 0xFF	; 255
    17b2:	c5 01       	movw	r24, r10
    17b4:	2d d1       	rcall	.+602    	; 0x1a10 <strnlen_P>
    17b6:	4c 01       	movw	r8, r24
    17b8:	f3 2d       	mov	r31, r3
    17ba:	f0 68       	ori	r31, 0x80	; 128
    17bc:	3f 2e       	mov	r3, r31
    17be:	82 01       	movw	r16, r4
    17c0:	33 fc       	sbrc	r3, 3
    17c2:	19 c0       	rjmp	.+50     	; 0x17f6 <vfprintf+0x1e0>
    17c4:	82 2d       	mov	r24, r2
    17c6:	90 e0       	ldi	r25, 0x00	; 0
    17c8:	88 16       	cp	r8, r24
    17ca:	99 06       	cpc	r9, r25
    17cc:	a0 f4       	brcc	.+40     	; 0x17f6 <vfprintf+0x1e0>
    17ce:	b6 01       	movw	r22, r12
    17d0:	80 e2       	ldi	r24, 0x20	; 32
    17d2:	90 e0       	ldi	r25, 0x00	; 0
    17d4:	33 d1       	rcall	.+614    	; 0x1a3c <fputc>
    17d6:	2a 94       	dec	r2
    17d8:	f5 cf       	rjmp	.-22     	; 0x17c4 <vfprintf+0x1ae>
    17da:	f5 01       	movw	r30, r10
    17dc:	37 fc       	sbrc	r3, 7
    17de:	85 91       	lpm	r24, Z+
    17e0:	37 fe       	sbrs	r3, 7
    17e2:	81 91       	ld	r24, Z+
    17e4:	5f 01       	movw	r10, r30
    17e6:	b6 01       	movw	r22, r12
    17e8:	90 e0       	ldi	r25, 0x00	; 0
    17ea:	28 d1       	rcall	.+592    	; 0x1a3c <fputc>
    17ec:	21 10       	cpse	r2, r1
    17ee:	2a 94       	dec	r2
    17f0:	21 e0       	ldi	r18, 0x01	; 1
    17f2:	82 1a       	sub	r8, r18
    17f4:	91 08       	sbc	r9, r1
    17f6:	81 14       	cp	r8, r1
    17f8:	91 04       	cpc	r9, r1
    17fa:	79 f7       	brne	.-34     	; 0x17da <vfprintf+0x1c4>
    17fc:	e1 c0       	rjmp	.+450    	; 0x19c0 <vfprintf+0x3aa>
    17fe:	84 36       	cpi	r24, 0x64	; 100
    1800:	11 f0       	breq	.+4      	; 0x1806 <vfprintf+0x1f0>
    1802:	89 36       	cpi	r24, 0x69	; 105
    1804:	39 f5       	brne	.+78     	; 0x1854 <vfprintf+0x23e>
    1806:	f8 01       	movw	r30, r16
    1808:	37 fe       	sbrs	r3, 7
    180a:	07 c0       	rjmp	.+14     	; 0x181a <vfprintf+0x204>
    180c:	60 81       	ld	r22, Z
    180e:	71 81       	ldd	r23, Z+1	; 0x01
    1810:	82 81       	ldd	r24, Z+2	; 0x02
    1812:	93 81       	ldd	r25, Z+3	; 0x03
    1814:	0c 5f       	subi	r16, 0xFC	; 252
    1816:	1f 4f       	sbci	r17, 0xFF	; 255
    1818:	08 c0       	rjmp	.+16     	; 0x182a <vfprintf+0x214>
    181a:	60 81       	ld	r22, Z
    181c:	71 81       	ldd	r23, Z+1	; 0x01
    181e:	07 2e       	mov	r0, r23
    1820:	00 0c       	add	r0, r0
    1822:	88 0b       	sbc	r24, r24
    1824:	99 0b       	sbc	r25, r25
    1826:	0e 5f       	subi	r16, 0xFE	; 254
    1828:	1f 4f       	sbci	r17, 0xFF	; 255
    182a:	f3 2d       	mov	r31, r3
    182c:	ff 76       	andi	r31, 0x6F	; 111
    182e:	3f 2e       	mov	r3, r31
    1830:	97 ff       	sbrs	r25, 7
    1832:	09 c0       	rjmp	.+18     	; 0x1846 <vfprintf+0x230>
    1834:	90 95       	com	r25
    1836:	80 95       	com	r24
    1838:	70 95       	com	r23
    183a:	61 95       	neg	r22
    183c:	7f 4f       	sbci	r23, 0xFF	; 255
    183e:	8f 4f       	sbci	r24, 0xFF	; 255
    1840:	9f 4f       	sbci	r25, 0xFF	; 255
    1842:	f0 68       	ori	r31, 0x80	; 128
    1844:	3f 2e       	mov	r3, r31
    1846:	2a e0       	ldi	r18, 0x0A	; 10
    1848:	30 e0       	ldi	r19, 0x00	; 0
    184a:	a3 01       	movw	r20, r6
    184c:	33 d1       	rcall	.+614    	; 0x1ab4 <__ultoa_invert>
    184e:	88 2e       	mov	r8, r24
    1850:	86 18       	sub	r8, r6
    1852:	44 c0       	rjmp	.+136    	; 0x18dc <vfprintf+0x2c6>
    1854:	85 37       	cpi	r24, 0x75	; 117
    1856:	31 f4       	brne	.+12     	; 0x1864 <vfprintf+0x24e>
    1858:	23 2d       	mov	r18, r3
    185a:	2f 7e       	andi	r18, 0xEF	; 239
    185c:	b2 2e       	mov	r11, r18
    185e:	2a e0       	ldi	r18, 0x0A	; 10
    1860:	30 e0       	ldi	r19, 0x00	; 0
    1862:	25 c0       	rjmp	.+74     	; 0x18ae <vfprintf+0x298>
    1864:	93 2d       	mov	r25, r3
    1866:	99 7f       	andi	r25, 0xF9	; 249
    1868:	b9 2e       	mov	r11, r25
    186a:	8f 36       	cpi	r24, 0x6F	; 111
    186c:	c1 f0       	breq	.+48     	; 0x189e <vfprintf+0x288>
    186e:	18 f4       	brcc	.+6      	; 0x1876 <vfprintf+0x260>
    1870:	88 35       	cpi	r24, 0x58	; 88
    1872:	79 f0       	breq	.+30     	; 0x1892 <vfprintf+0x27c>
    1874:	ae c0       	rjmp	.+348    	; 0x19d2 <vfprintf+0x3bc>
    1876:	80 37       	cpi	r24, 0x70	; 112
    1878:	19 f0       	breq	.+6      	; 0x1880 <vfprintf+0x26a>
    187a:	88 37       	cpi	r24, 0x78	; 120
    187c:	21 f0       	breq	.+8      	; 0x1886 <vfprintf+0x270>
    187e:	a9 c0       	rjmp	.+338    	; 0x19d2 <vfprintf+0x3bc>
    1880:	e9 2f       	mov	r30, r25
    1882:	e0 61       	ori	r30, 0x10	; 16
    1884:	be 2e       	mov	r11, r30
    1886:	b4 fe       	sbrs	r11, 4
    1888:	0d c0       	rjmp	.+26     	; 0x18a4 <vfprintf+0x28e>
    188a:	fb 2d       	mov	r31, r11
    188c:	f4 60       	ori	r31, 0x04	; 4
    188e:	bf 2e       	mov	r11, r31
    1890:	09 c0       	rjmp	.+18     	; 0x18a4 <vfprintf+0x28e>
    1892:	34 fe       	sbrs	r3, 4
    1894:	0a c0       	rjmp	.+20     	; 0x18aa <vfprintf+0x294>
    1896:	29 2f       	mov	r18, r25
    1898:	26 60       	ori	r18, 0x06	; 6
    189a:	b2 2e       	mov	r11, r18
    189c:	06 c0       	rjmp	.+12     	; 0x18aa <vfprintf+0x294>
    189e:	28 e0       	ldi	r18, 0x08	; 8
    18a0:	30 e0       	ldi	r19, 0x00	; 0
    18a2:	05 c0       	rjmp	.+10     	; 0x18ae <vfprintf+0x298>
    18a4:	20 e1       	ldi	r18, 0x10	; 16
    18a6:	30 e0       	ldi	r19, 0x00	; 0
    18a8:	02 c0       	rjmp	.+4      	; 0x18ae <vfprintf+0x298>
    18aa:	20 e1       	ldi	r18, 0x10	; 16
    18ac:	32 e0       	ldi	r19, 0x02	; 2
    18ae:	f8 01       	movw	r30, r16
    18b0:	b7 fe       	sbrs	r11, 7
    18b2:	07 c0       	rjmp	.+14     	; 0x18c2 <vfprintf+0x2ac>
    18b4:	60 81       	ld	r22, Z
    18b6:	71 81       	ldd	r23, Z+1	; 0x01
    18b8:	82 81       	ldd	r24, Z+2	; 0x02
    18ba:	93 81       	ldd	r25, Z+3	; 0x03
    18bc:	0c 5f       	subi	r16, 0xFC	; 252
    18be:	1f 4f       	sbci	r17, 0xFF	; 255
    18c0:	06 c0       	rjmp	.+12     	; 0x18ce <vfprintf+0x2b8>
    18c2:	60 81       	ld	r22, Z
    18c4:	71 81       	ldd	r23, Z+1	; 0x01
    18c6:	80 e0       	ldi	r24, 0x00	; 0
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	0e 5f       	subi	r16, 0xFE	; 254
    18cc:	1f 4f       	sbci	r17, 0xFF	; 255
    18ce:	a3 01       	movw	r20, r6
    18d0:	f1 d0       	rcall	.+482    	; 0x1ab4 <__ultoa_invert>
    18d2:	88 2e       	mov	r8, r24
    18d4:	86 18       	sub	r8, r6
    18d6:	fb 2d       	mov	r31, r11
    18d8:	ff 77       	andi	r31, 0x7F	; 127
    18da:	3f 2e       	mov	r3, r31
    18dc:	36 fe       	sbrs	r3, 6
    18de:	0d c0       	rjmp	.+26     	; 0x18fa <vfprintf+0x2e4>
    18e0:	23 2d       	mov	r18, r3
    18e2:	2e 7f       	andi	r18, 0xFE	; 254
    18e4:	a2 2e       	mov	r10, r18
    18e6:	89 14       	cp	r8, r9
    18e8:	58 f4       	brcc	.+22     	; 0x1900 <vfprintf+0x2ea>
    18ea:	34 fe       	sbrs	r3, 4
    18ec:	0b c0       	rjmp	.+22     	; 0x1904 <vfprintf+0x2ee>
    18ee:	32 fc       	sbrc	r3, 2
    18f0:	09 c0       	rjmp	.+18     	; 0x1904 <vfprintf+0x2ee>
    18f2:	83 2d       	mov	r24, r3
    18f4:	8e 7e       	andi	r24, 0xEE	; 238
    18f6:	a8 2e       	mov	r10, r24
    18f8:	05 c0       	rjmp	.+10     	; 0x1904 <vfprintf+0x2ee>
    18fa:	b8 2c       	mov	r11, r8
    18fc:	a3 2c       	mov	r10, r3
    18fe:	03 c0       	rjmp	.+6      	; 0x1906 <vfprintf+0x2f0>
    1900:	b8 2c       	mov	r11, r8
    1902:	01 c0       	rjmp	.+2      	; 0x1906 <vfprintf+0x2f0>
    1904:	b9 2c       	mov	r11, r9
    1906:	a4 fe       	sbrs	r10, 4
    1908:	0f c0       	rjmp	.+30     	; 0x1928 <vfprintf+0x312>
    190a:	fe 01       	movw	r30, r28
    190c:	e8 0d       	add	r30, r8
    190e:	f1 1d       	adc	r31, r1
    1910:	80 81       	ld	r24, Z
    1912:	80 33       	cpi	r24, 0x30	; 48
    1914:	21 f4       	brne	.+8      	; 0x191e <vfprintf+0x308>
    1916:	9a 2d       	mov	r25, r10
    1918:	99 7e       	andi	r25, 0xE9	; 233
    191a:	a9 2e       	mov	r10, r25
    191c:	09 c0       	rjmp	.+18     	; 0x1930 <vfprintf+0x31a>
    191e:	a2 fe       	sbrs	r10, 2
    1920:	06 c0       	rjmp	.+12     	; 0x192e <vfprintf+0x318>
    1922:	b3 94       	inc	r11
    1924:	b3 94       	inc	r11
    1926:	04 c0       	rjmp	.+8      	; 0x1930 <vfprintf+0x31a>
    1928:	8a 2d       	mov	r24, r10
    192a:	86 78       	andi	r24, 0x86	; 134
    192c:	09 f0       	breq	.+2      	; 0x1930 <vfprintf+0x31a>
    192e:	b3 94       	inc	r11
    1930:	a3 fc       	sbrc	r10, 3
    1932:	10 c0       	rjmp	.+32     	; 0x1954 <vfprintf+0x33e>
    1934:	a0 fe       	sbrs	r10, 0
    1936:	06 c0       	rjmp	.+12     	; 0x1944 <vfprintf+0x32e>
    1938:	b2 14       	cp	r11, r2
    193a:	80 f4       	brcc	.+32     	; 0x195c <vfprintf+0x346>
    193c:	28 0c       	add	r2, r8
    193e:	92 2c       	mov	r9, r2
    1940:	9b 18       	sub	r9, r11
    1942:	0d c0       	rjmp	.+26     	; 0x195e <vfprintf+0x348>
    1944:	b2 14       	cp	r11, r2
    1946:	58 f4       	brcc	.+22     	; 0x195e <vfprintf+0x348>
    1948:	b6 01       	movw	r22, r12
    194a:	80 e2       	ldi	r24, 0x20	; 32
    194c:	90 e0       	ldi	r25, 0x00	; 0
    194e:	76 d0       	rcall	.+236    	; 0x1a3c <fputc>
    1950:	b3 94       	inc	r11
    1952:	f8 cf       	rjmp	.-16     	; 0x1944 <vfprintf+0x32e>
    1954:	b2 14       	cp	r11, r2
    1956:	18 f4       	brcc	.+6      	; 0x195e <vfprintf+0x348>
    1958:	2b 18       	sub	r2, r11
    195a:	02 c0       	rjmp	.+4      	; 0x1960 <vfprintf+0x34a>
    195c:	98 2c       	mov	r9, r8
    195e:	21 2c       	mov	r2, r1
    1960:	a4 fe       	sbrs	r10, 4
    1962:	0f c0       	rjmp	.+30     	; 0x1982 <vfprintf+0x36c>
    1964:	b6 01       	movw	r22, r12
    1966:	80 e3       	ldi	r24, 0x30	; 48
    1968:	90 e0       	ldi	r25, 0x00	; 0
    196a:	68 d0       	rcall	.+208    	; 0x1a3c <fputc>
    196c:	a2 fe       	sbrs	r10, 2
    196e:	16 c0       	rjmp	.+44     	; 0x199c <vfprintf+0x386>
    1970:	a1 fc       	sbrc	r10, 1
    1972:	03 c0       	rjmp	.+6      	; 0x197a <vfprintf+0x364>
    1974:	88 e7       	ldi	r24, 0x78	; 120
    1976:	90 e0       	ldi	r25, 0x00	; 0
    1978:	02 c0       	rjmp	.+4      	; 0x197e <vfprintf+0x368>
    197a:	88 e5       	ldi	r24, 0x58	; 88
    197c:	90 e0       	ldi	r25, 0x00	; 0
    197e:	b6 01       	movw	r22, r12
    1980:	0c c0       	rjmp	.+24     	; 0x199a <vfprintf+0x384>
    1982:	8a 2d       	mov	r24, r10
    1984:	86 78       	andi	r24, 0x86	; 134
    1986:	51 f0       	breq	.+20     	; 0x199c <vfprintf+0x386>
    1988:	a1 fe       	sbrs	r10, 1
    198a:	02 c0       	rjmp	.+4      	; 0x1990 <vfprintf+0x37a>
    198c:	8b e2       	ldi	r24, 0x2B	; 43
    198e:	01 c0       	rjmp	.+2      	; 0x1992 <vfprintf+0x37c>
    1990:	80 e2       	ldi	r24, 0x20	; 32
    1992:	a7 fc       	sbrc	r10, 7
    1994:	8d e2       	ldi	r24, 0x2D	; 45
    1996:	b6 01       	movw	r22, r12
    1998:	90 e0       	ldi	r25, 0x00	; 0
    199a:	50 d0       	rcall	.+160    	; 0x1a3c <fputc>
    199c:	89 14       	cp	r8, r9
    199e:	30 f4       	brcc	.+12     	; 0x19ac <vfprintf+0x396>
    19a0:	b6 01       	movw	r22, r12
    19a2:	80 e3       	ldi	r24, 0x30	; 48
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	4a d0       	rcall	.+148    	; 0x1a3c <fputc>
    19a8:	9a 94       	dec	r9
    19aa:	f8 cf       	rjmp	.-16     	; 0x199c <vfprintf+0x386>
    19ac:	8a 94       	dec	r8
    19ae:	f3 01       	movw	r30, r6
    19b0:	e8 0d       	add	r30, r8
    19b2:	f1 1d       	adc	r31, r1
    19b4:	80 81       	ld	r24, Z
    19b6:	b6 01       	movw	r22, r12
    19b8:	90 e0       	ldi	r25, 0x00	; 0
    19ba:	40 d0       	rcall	.+128    	; 0x1a3c <fputc>
    19bc:	81 10       	cpse	r8, r1
    19be:	f6 cf       	rjmp	.-20     	; 0x19ac <vfprintf+0x396>
    19c0:	22 20       	and	r2, r2
    19c2:	09 f4       	brne	.+2      	; 0x19c6 <vfprintf+0x3b0>
    19c4:	4e ce       	rjmp	.-868    	; 0x1662 <vfprintf+0x4c>
    19c6:	b6 01       	movw	r22, r12
    19c8:	80 e2       	ldi	r24, 0x20	; 32
    19ca:	90 e0       	ldi	r25, 0x00	; 0
    19cc:	37 d0       	rcall	.+110    	; 0x1a3c <fputc>
    19ce:	2a 94       	dec	r2
    19d0:	f7 cf       	rjmp	.-18     	; 0x19c0 <vfprintf+0x3aa>
    19d2:	f6 01       	movw	r30, r12
    19d4:	86 81       	ldd	r24, Z+6	; 0x06
    19d6:	97 81       	ldd	r25, Z+7	; 0x07
    19d8:	02 c0       	rjmp	.+4      	; 0x19de <vfprintf+0x3c8>
    19da:	8f ef       	ldi	r24, 0xFF	; 255
    19dc:	9f ef       	ldi	r25, 0xFF	; 255
    19de:	2b 96       	adiw	r28, 0x0b	; 11
    19e0:	0f b6       	in	r0, 0x3f	; 63
    19e2:	f8 94       	cli
    19e4:	de bf       	out	0x3e, r29	; 62
    19e6:	0f be       	out	0x3f, r0	; 63
    19e8:	cd bf       	out	0x3d, r28	; 61
    19ea:	df 91       	pop	r29
    19ec:	cf 91       	pop	r28
    19ee:	1f 91       	pop	r17
    19f0:	0f 91       	pop	r16
    19f2:	ff 90       	pop	r15
    19f4:	ef 90       	pop	r14
    19f6:	df 90       	pop	r13
    19f8:	cf 90       	pop	r12
    19fa:	bf 90       	pop	r11
    19fc:	af 90       	pop	r10
    19fe:	9f 90       	pop	r9
    1a00:	8f 90       	pop	r8
    1a02:	7f 90       	pop	r7
    1a04:	6f 90       	pop	r6
    1a06:	5f 90       	pop	r5
    1a08:	4f 90       	pop	r4
    1a0a:	3f 90       	pop	r3
    1a0c:	2f 90       	pop	r2
    1a0e:	08 95       	ret

00001a10 <strnlen_P>:
    1a10:	fc 01       	movw	r30, r24
    1a12:	05 90       	lpm	r0, Z+
    1a14:	61 50       	subi	r22, 0x01	; 1
    1a16:	70 40       	sbci	r23, 0x00	; 0
    1a18:	01 10       	cpse	r0, r1
    1a1a:	d8 f7       	brcc	.-10     	; 0x1a12 <strnlen_P+0x2>
    1a1c:	80 95       	com	r24
    1a1e:	90 95       	com	r25
    1a20:	8e 0f       	add	r24, r30
    1a22:	9f 1f       	adc	r25, r31
    1a24:	08 95       	ret

00001a26 <strnlen>:
    1a26:	fc 01       	movw	r30, r24
    1a28:	61 50       	subi	r22, 0x01	; 1
    1a2a:	70 40       	sbci	r23, 0x00	; 0
    1a2c:	01 90       	ld	r0, Z+
    1a2e:	01 10       	cpse	r0, r1
    1a30:	d8 f7       	brcc	.-10     	; 0x1a28 <strnlen+0x2>
    1a32:	80 95       	com	r24
    1a34:	90 95       	com	r25
    1a36:	8e 0f       	add	r24, r30
    1a38:	9f 1f       	adc	r25, r31
    1a3a:	08 95       	ret

00001a3c <fputc>:
    1a3c:	0f 93       	push	r16
    1a3e:	1f 93       	push	r17
    1a40:	cf 93       	push	r28
    1a42:	df 93       	push	r29
    1a44:	fb 01       	movw	r30, r22
    1a46:	23 81       	ldd	r18, Z+3	; 0x03
    1a48:	21 fd       	sbrc	r18, 1
    1a4a:	03 c0       	rjmp	.+6      	; 0x1a52 <fputc+0x16>
    1a4c:	8f ef       	ldi	r24, 0xFF	; 255
    1a4e:	9f ef       	ldi	r25, 0xFF	; 255
    1a50:	2c c0       	rjmp	.+88     	; 0x1aaa <fputc+0x6e>
    1a52:	22 ff       	sbrs	r18, 2
    1a54:	16 c0       	rjmp	.+44     	; 0x1a82 <fputc+0x46>
    1a56:	46 81       	ldd	r20, Z+6	; 0x06
    1a58:	57 81       	ldd	r21, Z+7	; 0x07
    1a5a:	24 81       	ldd	r18, Z+4	; 0x04
    1a5c:	35 81       	ldd	r19, Z+5	; 0x05
    1a5e:	42 17       	cp	r20, r18
    1a60:	53 07       	cpc	r21, r19
    1a62:	44 f4       	brge	.+16     	; 0x1a74 <fputc+0x38>
    1a64:	a0 81       	ld	r26, Z
    1a66:	b1 81       	ldd	r27, Z+1	; 0x01
    1a68:	9d 01       	movw	r18, r26
    1a6a:	2f 5f       	subi	r18, 0xFF	; 255
    1a6c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a6e:	31 83       	std	Z+1, r19	; 0x01
    1a70:	20 83       	st	Z, r18
    1a72:	8c 93       	st	X, r24
    1a74:	26 81       	ldd	r18, Z+6	; 0x06
    1a76:	37 81       	ldd	r19, Z+7	; 0x07
    1a78:	2f 5f       	subi	r18, 0xFF	; 255
    1a7a:	3f 4f       	sbci	r19, 0xFF	; 255
    1a7c:	37 83       	std	Z+7, r19	; 0x07
    1a7e:	26 83       	std	Z+6, r18	; 0x06
    1a80:	14 c0       	rjmp	.+40     	; 0x1aaa <fputc+0x6e>
    1a82:	8b 01       	movw	r16, r22
    1a84:	ec 01       	movw	r28, r24
    1a86:	fb 01       	movw	r30, r22
    1a88:	00 84       	ldd	r0, Z+8	; 0x08
    1a8a:	f1 85       	ldd	r31, Z+9	; 0x09
    1a8c:	e0 2d       	mov	r30, r0
    1a8e:	09 95       	icall
    1a90:	89 2b       	or	r24, r25
    1a92:	e1 f6       	brne	.-72     	; 0x1a4c <fputc+0x10>
    1a94:	d8 01       	movw	r26, r16
    1a96:	16 96       	adiw	r26, 0x06	; 6
    1a98:	8d 91       	ld	r24, X+
    1a9a:	9c 91       	ld	r25, X
    1a9c:	17 97       	sbiw	r26, 0x07	; 7
    1a9e:	01 96       	adiw	r24, 0x01	; 1
    1aa0:	17 96       	adiw	r26, 0x07	; 7
    1aa2:	9c 93       	st	X, r25
    1aa4:	8e 93       	st	-X, r24
    1aa6:	16 97       	sbiw	r26, 0x06	; 6
    1aa8:	ce 01       	movw	r24, r28
    1aaa:	df 91       	pop	r29
    1aac:	cf 91       	pop	r28
    1aae:	1f 91       	pop	r17
    1ab0:	0f 91       	pop	r16
    1ab2:	08 95       	ret

00001ab4 <__ultoa_invert>:
    1ab4:	fa 01       	movw	r30, r20
    1ab6:	aa 27       	eor	r26, r26
    1ab8:	28 30       	cpi	r18, 0x08	; 8
    1aba:	51 f1       	breq	.+84     	; 0x1b10 <__ultoa_invert+0x5c>
    1abc:	20 31       	cpi	r18, 0x10	; 16
    1abe:	81 f1       	breq	.+96     	; 0x1b20 <__ultoa_invert+0x6c>
    1ac0:	e8 94       	clt
    1ac2:	6f 93       	push	r22
    1ac4:	6e 7f       	andi	r22, 0xFE	; 254
    1ac6:	6e 5f       	subi	r22, 0xFE	; 254
    1ac8:	7f 4f       	sbci	r23, 0xFF	; 255
    1aca:	8f 4f       	sbci	r24, 0xFF	; 255
    1acc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ace:	af 4f       	sbci	r26, 0xFF	; 255
    1ad0:	b1 e0       	ldi	r27, 0x01	; 1
    1ad2:	3e d0       	rcall	.+124    	; 0x1b50 <__ultoa_invert+0x9c>
    1ad4:	b4 e0       	ldi	r27, 0x04	; 4
    1ad6:	3c d0       	rcall	.+120    	; 0x1b50 <__ultoa_invert+0x9c>
    1ad8:	67 0f       	add	r22, r23
    1ada:	78 1f       	adc	r23, r24
    1adc:	89 1f       	adc	r24, r25
    1ade:	9a 1f       	adc	r25, r26
    1ae0:	a1 1d       	adc	r26, r1
    1ae2:	68 0f       	add	r22, r24
    1ae4:	79 1f       	adc	r23, r25
    1ae6:	8a 1f       	adc	r24, r26
    1ae8:	91 1d       	adc	r25, r1
    1aea:	a1 1d       	adc	r26, r1
    1aec:	6a 0f       	add	r22, r26
    1aee:	71 1d       	adc	r23, r1
    1af0:	81 1d       	adc	r24, r1
    1af2:	91 1d       	adc	r25, r1
    1af4:	a1 1d       	adc	r26, r1
    1af6:	20 d0       	rcall	.+64     	; 0x1b38 <__ultoa_invert+0x84>
    1af8:	09 f4       	brne	.+2      	; 0x1afc <__ultoa_invert+0x48>
    1afa:	68 94       	set
    1afc:	3f 91       	pop	r19
    1afe:	2a e0       	ldi	r18, 0x0A	; 10
    1b00:	26 9f       	mul	r18, r22
    1b02:	11 24       	eor	r1, r1
    1b04:	30 19       	sub	r19, r0
    1b06:	30 5d       	subi	r19, 0xD0	; 208
    1b08:	31 93       	st	Z+, r19
    1b0a:	de f6       	brtc	.-74     	; 0x1ac2 <__ultoa_invert+0xe>
    1b0c:	cf 01       	movw	r24, r30
    1b0e:	08 95       	ret
    1b10:	46 2f       	mov	r20, r22
    1b12:	47 70       	andi	r20, 0x07	; 7
    1b14:	40 5d       	subi	r20, 0xD0	; 208
    1b16:	41 93       	st	Z+, r20
    1b18:	b3 e0       	ldi	r27, 0x03	; 3
    1b1a:	0f d0       	rcall	.+30     	; 0x1b3a <__ultoa_invert+0x86>
    1b1c:	c9 f7       	brne	.-14     	; 0x1b10 <__ultoa_invert+0x5c>
    1b1e:	f6 cf       	rjmp	.-20     	; 0x1b0c <__ultoa_invert+0x58>
    1b20:	46 2f       	mov	r20, r22
    1b22:	4f 70       	andi	r20, 0x0F	; 15
    1b24:	40 5d       	subi	r20, 0xD0	; 208
    1b26:	4a 33       	cpi	r20, 0x3A	; 58
    1b28:	18 f0       	brcs	.+6      	; 0x1b30 <__ultoa_invert+0x7c>
    1b2a:	49 5d       	subi	r20, 0xD9	; 217
    1b2c:	31 fd       	sbrc	r19, 1
    1b2e:	40 52       	subi	r20, 0x20	; 32
    1b30:	41 93       	st	Z+, r20
    1b32:	02 d0       	rcall	.+4      	; 0x1b38 <__ultoa_invert+0x84>
    1b34:	a9 f7       	brne	.-22     	; 0x1b20 <__ultoa_invert+0x6c>
    1b36:	ea cf       	rjmp	.-44     	; 0x1b0c <__ultoa_invert+0x58>
    1b38:	b4 e0       	ldi	r27, 0x04	; 4
    1b3a:	a6 95       	lsr	r26
    1b3c:	97 95       	ror	r25
    1b3e:	87 95       	ror	r24
    1b40:	77 95       	ror	r23
    1b42:	67 95       	ror	r22
    1b44:	ba 95       	dec	r27
    1b46:	c9 f7       	brne	.-14     	; 0x1b3a <__ultoa_invert+0x86>
    1b48:	00 97       	sbiw	r24, 0x00	; 0
    1b4a:	61 05       	cpc	r22, r1
    1b4c:	71 05       	cpc	r23, r1
    1b4e:	08 95       	ret
    1b50:	9b 01       	movw	r18, r22
    1b52:	ac 01       	movw	r20, r24
    1b54:	0a 2e       	mov	r0, r26
    1b56:	06 94       	lsr	r0
    1b58:	57 95       	ror	r21
    1b5a:	47 95       	ror	r20
    1b5c:	37 95       	ror	r19
    1b5e:	27 95       	ror	r18
    1b60:	ba 95       	dec	r27
    1b62:	c9 f7       	brne	.-14     	; 0x1b56 <__ultoa_invert+0xa2>
    1b64:	62 0f       	add	r22, r18
    1b66:	73 1f       	adc	r23, r19
    1b68:	84 1f       	adc	r24, r20
    1b6a:	95 1f       	adc	r25, r21
    1b6c:	a0 1d       	adc	r26, r0
    1b6e:	08 95       	ret

00001b70 <_exit>:
    1b70:	f8 94       	cli

00001b72 <__stop_program>:
    1b72:	ff cf       	rjmp	.-2      	; 0x1b72 <__stop_program>
